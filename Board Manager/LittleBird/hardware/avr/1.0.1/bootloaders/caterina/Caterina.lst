   1               		.file	"Caterina.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  10               		.text
  11               	.Ltext0:
  12               		.cfi_sections	.debug_frame
  13               		.section	.text.FetchNextCommandByte,"ax",@progbits
  15               	FetchNextCommandByte:
  16               	.LFB101:
  17               		.file 1 "Caterina.c"
   1:Caterina.c    **** /*
   2:Caterina.c    ****              LUFA Library
   3:Caterina.c    ****      Copyright (C) Dean Camera, 2011.
   4:Caterina.c    **** 
   5:Caterina.c    ****   dean [at] fourwalledcubicle [dot] com
   6:Caterina.c    ****            www.lufa-lib.org
   7:Caterina.c    **** */
   8:Caterina.c    **** 
   9:Caterina.c    **** /*
  10:Caterina.c    ****   Copyright 2011  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:Caterina.c    **** 
  12:Caterina.c    ****   Permission to use, copy, modify, distribute, and sell this
  13:Caterina.c    ****   software and its documentation for any purpose is hereby granted
  14:Caterina.c    ****   without fee, provided that the above copyright notice appear in
  15:Caterina.c    ****   all copies and that both that the copyright notice and this
  16:Caterina.c    ****   permission notice and warranty disclaimer appear in supporting
  17:Caterina.c    ****   documentation, and that the name of the author not be used in
  18:Caterina.c    ****   advertising or publicity pertaining to distribution of the
  19:Caterina.c    ****   software without specific, written prior permission.
  20:Caterina.c    **** 
  21:Caterina.c    ****   The author disclaim all warranties with regard to this
  22:Caterina.c    ****   software, including all implied warranties of merchantability
  23:Caterina.c    ****   and fitness.  In no event shall the author be liable for any
  24:Caterina.c    ****   special, indirect or consequential damages or any damages
  25:Caterina.c    ****   whatsoever resulting from loss of use, data or profits, whether
  26:Caterina.c    ****   in an action of contract, negligence or other tortious action,
  27:Caterina.c    ****   arising out of or in connection with the use or performance of
  28:Caterina.c    ****   this software.
  29:Caterina.c    **** */
  30:Caterina.c    **** 
  31:Caterina.c    **** /** \file
  32:Caterina.c    ****  *
  33:Caterina.c    ****  *  Main source file for the CDC class bootloader. This file contains the complete bootloader logic
  34:Caterina.c    ****  */
  35:Caterina.c    **** 
  36:Caterina.c    **** #define  INCLUDE_FROM_CATERINA_C
  37:Caterina.c    **** #include "Caterina.h"
  38:Caterina.c    **** 
  39:Caterina.c    **** /** Contains the current baud rate and other settings of the first virtual serial port. This must b
  40:Caterina.c    ****  *  operating systems will not open the port unless the settings can be set successfully.
  41:Caterina.c    ****  */
  42:Caterina.c    **** static CDC_LineEncoding_t LineEncoding = { .BaudRateBPS = 0,
  43:Caterina.c    ****                                            .CharFormat  = CDC_LINEENCODING_OneStopBit,
  44:Caterina.c    ****                                            .ParityType  = CDC_PARITY_None,
  45:Caterina.c    ****                                            .DataBits    = 8                            };
  46:Caterina.c    **** 
  47:Caterina.c    **** /** Current address counter. This stores the current address of the FLASH or EEPROM as set by the h
  48:Caterina.c    ****  *  and is used when reading or writing to the AVRs memory (either FLASH or EEPROM depending on the
  49:Caterina.c    ****  *  command.)
  50:Caterina.c    ****  */
  51:Caterina.c    **** static uint32_t CurrAddress;
  52:Caterina.c    **** 
  53:Caterina.c    **** /** Flag to indicate if the bootloader should be running, or should exit and allow the application 
  54:Caterina.c    ****  *  via a watchdog reset. When cleared the bootloader will exit, starting the watchdog and entering
  55:Caterina.c    ****  *  loop until the AVR restarts and the application runs.
  56:Caterina.c    ****  */
  57:Caterina.c    **** static bool RunBootloader = true;
  58:Caterina.c    **** 
  59:Caterina.c    **** // MAH 8/15/12- added this flag to replace the bulky program memory reads to check for the presence
  60:Caterina.c    **** //   at the top of the memory space.
  61:Caterina.c    **** static bool sketchPresent = false;
  62:Caterina.c    **** 
  63:Caterina.c    **** /* Pulse generation counters to keep track of the time remaining for each pulse type */
  64:Caterina.c    **** #define TX_RX_LED_PULSE_PERIOD 100
  65:Caterina.c    **** uint16_t TxLEDPulse = 0; // time remaining for Tx LED pulse
  66:Caterina.c    **** uint16_t RxLEDPulse = 0; // time remaining for Rx LED pulse
  67:Caterina.c    **** 
  68:Caterina.c    **** /* Bootloader timeout timer */
  69:Caterina.c    **** // MAH 8/15/12- add this switch so timeouts work properly when the chip is running at 8MHz instead 
  70:Caterina.c    **** #if F_CPU == 8000000 
  71:Caterina.c    **** #define TIMEOUT_PERIOD	4000
  72:Caterina.c    **** #define EXT_RESET_TIMEOUT_PERIOD	375
  73:Caterina.c    **** #else
  74:Caterina.c    **** #define TIMEOUT_PERIOD  8000
  75:Caterina.c    **** #define EXT_RESET_TIMEOUT_PERIOD  750
  76:Caterina.c    **** #endif
  77:Caterina.c    **** 
  78:Caterina.c    **** // MAH 8/15/12- make this volatile, since we modify it in one place and read it in another, we want
  79:Caterina.c    **** //  sure we're always working on the copy in memory and not an erroneous value stored in a cache so
  80:Caterina.c    **** volatile uint16_t Timeout = 0;
  81:Caterina.c    **** // MAH 8/15/12- added this for delay during startup. Did not use existing Timeout value b/c it only
  82:Caterina.c    **** //  when there's a sketch at the top of the memory.
  83:Caterina.c    **** volatile uint16_t resetTimeout = 0;
  84:Caterina.c    **** 
  85:Caterina.c    **** // MAH 8/15/12- let's make this an 8-bit value instead of 16- that saves on memory because 16-bit a
  86:Caterina.c    **** //  comparison compiles to bulkier code. Note that this does *not* require a change to the Arduino 
  87:Caterina.c    **** //  just sort of ignoring the extra byte that the Arduino core puts at the next location.
  88:Caterina.c    **** uint8_t bootKey = 0x77;
  89:Caterina.c    **** volatile uint8_t *const bootKeyPtr = (volatile uint8_t *)0x0800;
  90:Caterina.c    **** 
  91:Caterina.c    **** void StartSketch(void)
  92:Caterina.c    **** {
  93:Caterina.c    **** 	cli();
  94:Caterina.c    **** 	
  95:Caterina.c    **** 	/* Undo TIMER1 setup and clear the count before running the sketch */
  96:Caterina.c    **** 	TIMSK1 = 0;
  97:Caterina.c    **** 	TCCR1B = 0;
  98:Caterina.c    **** 	// MAH 8/15/12 this clear is removed to save memory. Okay, it
  99:Caterina.c    **** 	//   introduces some inaccuracy in the timer in the sketch, but
 100:Caterina.c    **** 	//   not enough that it really matters.
 101:Caterina.c    **** 	//TCNT1H = 0;		// 16-bit write to TCNT1 requires high byte be written first
 102:Caterina.c    **** 	//TCNT1L = 0;
 103:Caterina.c    **** 	
 104:Caterina.c    **** 	/* Relocate the interrupt vector table to the application section */
 105:Caterina.c    **** 	MCUCR = (1 << IVCE);
 106:Caterina.c    **** 	MCUCR = 0;
 107:Caterina.c    **** 
 108:Caterina.c    **** 	L_LED_OFF();
 109:Caterina.c    **** 	TX_LED_OFF();
 110:Caterina.c    **** 	RX_LED_OFF();
 111:Caterina.c    **** 
 112:Caterina.c    **** 	/* jump to beginning of application space */
 113:Caterina.c    **** 	__asm__ volatile("jmp 0x0000");
 114:Caterina.c    **** 	
 115:Caterina.c    **** }
 116:Caterina.c    **** 
 117:Caterina.c    **** /*	Breathing animation on L LED indicates bootloader is running */
 118:Caterina.c    **** // MAH 8/15/12- Pulled this code inline down below- we only call it once and while inlining it is
 119:Caterina.c    **** //  questionable coding practice, it saves us a few bytes, which is important.
 120:Caterina.c    **** uint16_t LLEDPulse;
 121:Caterina.c    **** /*void LEDPulse(void)
 122:Caterina.c    **** {
 123:Caterina.c    **** 	LLEDPulse++;
 124:Caterina.c    **** 	uint8_t p = LLEDPulse >> 8;
 125:Caterina.c    **** 	if (p > 127)
 126:Caterina.c    **** 		p = 254-p;
 127:Caterina.c    **** 	p += p;
 128:Caterina.c    **** 	if (((uint8_t)LLEDPulse) > p)
 129:Caterina.c    **** 		L_LED_OFF();
 130:Caterina.c    **** 	else
 131:Caterina.c    **** 		L_LED_ON();
 132:Caterina.c    **** }*/
 133:Caterina.c    **** 
 134:Caterina.c    **** /** Main program entry point. This routine configures the hardware required by the bootloader, then
 135:Caterina.c    ****  *  runs the bootloader processing routine until it times out or is instructed to exit.
 136:Caterina.c    ****  */
 137:Caterina.c    **** int main(void)
 138:Caterina.c    **** {
 139:Caterina.c    **** 	/* Save the value of the boot key memory before it is overwritten */
 140:Caterina.c    **** 	uint8_t bootKeyPtrVal = *bootKeyPtr;
 141:Caterina.c    **** 	*bootKeyPtr = 0;
 142:Caterina.c    **** 
 143:Caterina.c    **** 	/* Check the reason for the reset so we can act accordingly */
 144:Caterina.c    **** 	uint8_t  mcusr_state = MCUSR;		// store the initial state of the Status register
 145:Caterina.c    **** 	MCUSR = 0;							// clear all reset flags	
 146:Caterina.c    **** 
 147:Caterina.c    **** 	/* Watchdog may be configured with a 15 ms period so must disable it before going any further */
 148:Caterina.c    **** 	// MAH 8/15/12- I removed this because wdt_disable() is the first thing SetupHardware() does- why
 149:Caterina.c    **** 	//  do it twice right in a row?
 150:Caterina.c    **** 	//wdt_disable();
 151:Caterina.c    **** 	
 152:Caterina.c    **** 	/* Setup hardware required for the bootloader */
 153:Caterina.c    **** 	// MAH 8/15/12- Moved this up to before the bootloader go/no-go decision tree so I could use the
 154:Caterina.c    **** 	//  timer in that decision tree. Removed the USBInit() call from it; if I'm not going to stay in
 155:Caterina.c    **** 	//  the bootloader, there's no point spending the time initializing the USB.
 156:Caterina.c    **** 	// SetupHardware();
 157:Caterina.c    **** 	wdt_disable();
 158:Caterina.c    **** 
 159:Caterina.c    **** 	// Disable clock division 
 160:Caterina.c    **** 	clock_prescale_set(clock_div_1);
 161:Caterina.c    **** 
 162:Caterina.c    **** 	// Relocate the interrupt vector table to the bootloader section
 163:Caterina.c    **** 	MCUCR = (1 << IVCE);
 164:Caterina.c    **** 	MCUCR = (1 << IVSEL);
 165:Caterina.c    **** 	
 166:Caterina.c    **** 	LED_SETUP();
 167:Caterina.c    **** 	CPU_PRESCALE(0); 
 168:Caterina.c    **** 	L_LED_OFF();
 169:Caterina.c    **** 	TX_LED_OFF();
 170:Caterina.c    **** 	RX_LED_OFF();
 171:Caterina.c    **** 	
 172:Caterina.c    **** 	// Initialize TIMER1 to handle bootloader timeout and LED tasks.  
 173:Caterina.c    **** 	// With 16 MHz clock and 1/64 prescaler, timer 1 is clocked at 250 kHz
 174:Caterina.c    **** 	// Our chosen compare match generates an interrupt every 1 ms.
 175:Caterina.c    **** 	// This interrupt is disabled selectively when doing memory reading, erasing,
 176:Caterina.c    **** 	// or writing since SPM has tight timing requirements. 
 177:Caterina.c    **** 
 178:Caterina.c    **** 	OCR1AH = 0;
 179:Caterina.c    **** 	OCR1AL = 250;
 180:Caterina.c    **** 	TIMSK1 = (1 << OCIE1A);					// enable timer 1 output compare A match interrupt
 181:Caterina.c    **** 	TCCR1B = ((1 << CS11) | (1 << CS10));	// 1/64 prescaler on timer 1 input
 182:Caterina.c    **** 	
 183:Caterina.c    **** 	
 184:Caterina.c    **** 	// MAH 8/15/12- this replaces bulky pgm_read_word(0) calls later on, to save memory.
 185:Caterina.c    **** 	if (pgm_read_word(0) != 0xFFFF) sketchPresent = true;
 186:Caterina.c    **** 	
 187:Caterina.c    **** 	// MAH 8/15/12- quite a bit changed in this section- let's just pretend nothing has been reserved
 188:Caterina.c    **** 	//  and all comments throughout are from me.
 189:Caterina.c    **** 	// First case: external reset, bootKey NOT in memory. We'll put the bootKey in memory, then spin
 190:Caterina.c    **** 	//  our wheels for about 750ms, then proceed to the sketch, if there is one. If, during that 750ms
 191:Caterina.c    **** 	//  another external reset occurs, on the next pass through this decision tree, execution will fal
 192:Caterina.c    **** 	//  through to the bootloader.
 193:Caterina.c    **** 	if ( (mcusr_state & (1<<EXTRF)) && (bootKeyPtrVal != bootKey) ) {
 194:Caterina.c    **** 		*bootKeyPtr = bootKey;
 195:Caterina.c    **** 		sei();
 196:Caterina.c    **** 		while (RunBootloader) 
 197:Caterina.c    **** 		{
 198:Caterina.c    **** 			if (resetTimeout > EXT_RESET_TIMEOUT_PERIOD)
 199:Caterina.c    **** 				RunBootloader = false;
 200:Caterina.c    **** 		}
 201:Caterina.c    **** 		cli();
 202:Caterina.c    **** 		*bootKeyPtr = 0;
 203:Caterina.c    **** 		RunBootloader = true;
 204:Caterina.c    **** 		if (sketchPresent) StartSketch();
 205:Caterina.c    **** 	} 
 206:Caterina.c    **** 	// On a power-on reset, we ALWAYS want to go to the sketch. If there is one.
 207:Caterina.c    **** 	else if ( (mcusr_state & (1<<PORF)) && sketchPresent) {	
 208:Caterina.c    **** 		StartSketch();
 209:Caterina.c    **** 	} 
 210:Caterina.c    **** 	// On a watchdog reset, if the bootKey isn't set, and there's a sketch, we should just
 211:Caterina.c    **** 	//  go straight to the sketch.
 212:Caterina.c    **** 	else if ( (mcusr_state & (1<<WDRF) ) && (bootKeyPtrVal != bootKey) && sketchPresent) {	
 213:Caterina.c    **** 		// If it looks like an "accidental" watchdog reset then start the sketch.
 214:Caterina.c    **** 		StartSketch();
 215:Caterina.c    **** 	}
 216:Caterina.c    **** 	
 217:Caterina.c    **** 	// END ALL COMMENTS ON THIS SECTION FROM MAH.
 218:Caterina.c    **** 	
 219:Caterina.c    **** 	/* Initialize USB Subsystem */
 220:Caterina.c    **** 	USB_Init();
 221:Caterina.c    **** 
 222:Caterina.c    **** 	/* Enable global interrupts so that the USB stack can function */
 223:Caterina.c    **** 	sei();
 224:Caterina.c    **** 	
 225:Caterina.c    **** 	Timeout = 0;
 226:Caterina.c    **** 	
 227:Caterina.c    **** 	while (RunBootloader)
 228:Caterina.c    **** 	{
 229:Caterina.c    **** 		CDC_Task();
 230:Caterina.c    **** 		USB_USBTask();
 231:Caterina.c    **** 		/* Time out and start the sketch if one is present */
 232:Caterina.c    **** 		if (Timeout > TIMEOUT_PERIOD)
 233:Caterina.c    **** 			RunBootloader = false;
 234:Caterina.c    **** 			
 235:Caterina.c    **** 		// MAH 8/15/12- This used to be a function call- inlining it saves a few bytes.
 236:Caterina.c    **** 		LLEDPulse++;
 237:Caterina.c    **** 		uint8_t p = LLEDPulse >> 8;
 238:Caterina.c    **** 		if (p > 127)
 239:Caterina.c    **** 			p = 254-p;
 240:Caterina.c    **** 		p += p;
 241:Caterina.c    **** 		if (((uint8_t)LLEDPulse) > p)
 242:Caterina.c    **** 			L_LED_OFF();
 243:Caterina.c    **** 		else
 244:Caterina.c    **** 			L_LED_ON();
 245:Caterina.c    **** 	}
 246:Caterina.c    **** 
 247:Caterina.c    **** 	/* Disconnect from the host - USB interface will be reset later along with the AVR */
 248:Caterina.c    **** 	USB_Detach();
 249:Caterina.c    **** 
 250:Caterina.c    **** 	/* Jump to beginning of application space to run the sketch - do not reset */	
 251:Caterina.c    **** 	StartSketch();
 252:Caterina.c    **** }
 253:Caterina.c    **** 
 254:Caterina.c    **** /** Configures all hardware required for the bootloader. */
 255:Caterina.c    **** 
 256:Caterina.c    **** // MAH 31 Aug 12 Remove this from a call and make it inline code to save a few bytes.
 257:Caterina.c    **** /*void SetupHardware(void)
 258:Caterina.c    **** {
 259:Caterina.c    **** 	// Disable watchdog if enabled by bootloader/fuses
 260:Caterina.c    **** 	// MAH- 31 Aug 12 I am unclear as to what this line of code is expected to
 261:Caterina.c    **** 	//  do. It will clear the WDRF bit, if set, while leaving other reset bits
 262:Caterina.c    **** 	//  alone. However, we already do that immediately upon entering the bootloader,
 263:Caterina.c    **** 	//  so this is just eating memory space.
 264:Caterina.c    **** 	//MCUSR &= ~(1 << WDRF);
 265:Caterina.c    **** 	wdt_disable();
 266:Caterina.c    **** 
 267:Caterina.c    **** 	// Disable clock division 
 268:Caterina.c    **** 	clock_prescale_set(clock_div_1);
 269:Caterina.c    **** 
 270:Caterina.c    **** 	// Relocate the interrupt vector table to the bootloader section
 271:Caterina.c    **** 	MCUCR = (1 << IVCE);
 272:Caterina.c    **** 	MCUCR = (1 << IVSEL);
 273:Caterina.c    **** 	
 274:Caterina.c    **** 	LED_SETUP();
 275:Caterina.c    **** 	CPU_PRESCALE(0); 
 276:Caterina.c    **** 	L_LED_OFF();
 277:Caterina.c    **** 	TX_LED_OFF();
 278:Caterina.c    **** 	RX_LED_OFF();
 279:Caterina.c    **** 	
 280:Caterina.c    **** 	// Initialize TIMER1 to handle bootloader timeout and LED tasks.  
 281:Caterina.c    **** 	// With 16 MHz clock and 1/64 prescaler, timer 1 is clocked at 250 kHz
 282:Caterina.c    **** 	// Our chosen compare match generates an interrupt every 1 ms.
 283:Caterina.c    **** 	// This interrupt is disabled selectively when doing memory reading, erasing,
 284:Caterina.c    **** 	// or writing since SPM has tight timing requirements. 
 285:Caterina.c    **** 
 286:Caterina.c    **** 	OCR1AH = 0;
 287:Caterina.c    **** 	OCR1AL = 250;
 288:Caterina.c    **** 	TIMSK1 = (1 << OCIE1A);					// enable timer 1 output compare A match interrupt
 289:Caterina.c    **** 	TCCR1B = ((1 << CS11) | (1 << CS10));	// 1/64 prescaler on timer 1 input
 290:Caterina.c    **** 	
 291:Caterina.c    **** 	// MAH 8/15/12- Remove the USB_Init() call from here; I want to start the hardware- particularly
 292:Caterina.c    **** 	//  the counter- before I start up the USB support, so I can do the busywait for the second reset
 293:Caterina.c    **** 	//  push.
 294:Caterina.c    **** 
 295:Caterina.c    **** }
 296:Caterina.c    **** */
 297:Caterina.c    **** //uint16_t ctr = 0;
 298:Caterina.c    **** ISR(TIMER1_COMPA_vect, ISR_BLOCK)
 299:Caterina.c    **** {
 300:Caterina.c    **** 	/* Reset counter */
 301:Caterina.c    **** 	TCNT1H = 0;
 302:Caterina.c    **** 	TCNT1L = 0;
 303:Caterina.c    **** 
 304:Caterina.c    **** 	/* Check whether the TX or RX LED one-shot period has elapsed.  if so, turn off the LED */
 305:Caterina.c    **** 	if (TxLEDPulse && !(--TxLEDPulse))
 306:Caterina.c    **** 		TX_LED_OFF();
 307:Caterina.c    **** 	if (RxLEDPulse && !(--RxLEDPulse))
 308:Caterina.c    **** 		RX_LED_OFF();
 309:Caterina.c    **** 		
 310:Caterina.c    **** 	resetTimeout++;
 311:Caterina.c    **** 	if (pgm_read_word(0) != 0xFFFF)
 312:Caterina.c    **** 		Timeout++;
 313:Caterina.c    **** }
 314:Caterina.c    **** 
 315:Caterina.c    **** /** Event handler for the USB_ConfigurationChanged event. This configures the device's endpoints re
 316:Caterina.c    ****  *  to relay data to and from the attached USB host.
 317:Caterina.c    ****  */
 318:Caterina.c    **** void EVENT_USB_Device_ConfigurationChanged(void)
 319:Caterina.c    **** {
 320:Caterina.c    **** 	/* Setup CDC Notification, Rx and Tx Endpoints */
 321:Caterina.c    **** 	Endpoint_ConfigureEndpoint(CDC_NOTIFICATION_EPNUM, EP_TYPE_INTERRUPT,
 322:Caterina.c    **** 	                           ENDPOINT_DIR_IN, CDC_NOTIFICATION_EPSIZE,
 323:Caterina.c    **** 	                           ENDPOINT_BANK_SINGLE);
 324:Caterina.c    **** 
 325:Caterina.c    **** 	Endpoint_ConfigureEndpoint(CDC_TX_EPNUM, EP_TYPE_BULK,
 326:Caterina.c    **** 	                           ENDPOINT_DIR_IN, CDC_TXRX_EPSIZE,
 327:Caterina.c    **** 	                           ENDPOINT_BANK_SINGLE);
 328:Caterina.c    **** 
 329:Caterina.c    **** 	Endpoint_ConfigureEndpoint(CDC_RX_EPNUM, EP_TYPE_BULK,
 330:Caterina.c    **** 	                           ENDPOINT_DIR_OUT, CDC_TXRX_EPSIZE,
 331:Caterina.c    **** 	                           ENDPOINT_BANK_SINGLE);
 332:Caterina.c    **** }
 333:Caterina.c    **** 
 334:Caterina.c    **** /** Event handler for the USB_ControlRequest event. This is used to catch and process control reque
 335:Caterina.c    ****  *  the device from the USB host before passing along unhandled control requests to the library for
 336:Caterina.c    ****  *  internally.
 337:Caterina.c    ****  */
 338:Caterina.c    **** void EVENT_USB_Device_ControlRequest(void)
 339:Caterina.c    **** {
 340:Caterina.c    **** 	/* Ignore any requests that aren't directed to the CDC interface */
 341:Caterina.c    **** 	if ((USB_ControlRequest.bmRequestType & (CONTROL_REQTYPE_TYPE | CONTROL_REQTYPE_RECIPIENT)) !=
 342:Caterina.c    **** 	    (REQTYPE_CLASS | REQREC_INTERFACE))
 343:Caterina.c    **** 	{
 344:Caterina.c    **** 		return;
 345:Caterina.c    **** 	}
 346:Caterina.c    **** 
 347:Caterina.c    **** 	/* Process CDC specific control requests */
 348:Caterina.c    **** 	switch (USB_ControlRequest.bRequest)
 349:Caterina.c    **** 	{
 350:Caterina.c    **** 		case CDC_REQ_GetLineEncoding:
 351:Caterina.c    **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE)
 352:Caterina.c    **** 			{
 353:Caterina.c    **** 				Endpoint_ClearSETUP();
 354:Caterina.c    **** 
 355:Caterina.c    **** 				/* Write the line coding data to the control endpoint */
 356:Caterina.c    **** 				Endpoint_Write_Control_Stream_LE(&LineEncoding, sizeof(CDC_LineEncoding_t));
 357:Caterina.c    **** 				Endpoint_ClearOUT();
 358:Caterina.c    **** 			}
 359:Caterina.c    **** 
 360:Caterina.c    **** 			break;
 361:Caterina.c    **** 		case CDC_REQ_SetLineEncoding:
 362:Caterina.c    **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE)
 363:Caterina.c    **** 			{
 364:Caterina.c    **** 				Endpoint_ClearSETUP();
 365:Caterina.c    **** 
 366:Caterina.c    **** 				/* Read the line coding data in from the host into the global struct */
 367:Caterina.c    **** 				Endpoint_Read_Control_Stream_LE(&LineEncoding, sizeof(CDC_LineEncoding_t));
 368:Caterina.c    **** 				Endpoint_ClearIN();
 369:Caterina.c    **** 			}
 370:Caterina.c    **** 
 371:Caterina.c    **** 			break;
 372:Caterina.c    **** 	}
 373:Caterina.c    **** }
 374:Caterina.c    **** 
 375:Caterina.c    **** #if !defined(NO_BLOCK_SUPPORT)
 376:Caterina.c    **** /** Reads or writes a block of EEPROM or FLASH memory to or from the appropriate CDC data endpoint,
 377:Caterina.c    ****  *  on the AVR910 protocol command issued.
 378:Caterina.c    ****  *
 379:Caterina.c    ****  *  \param[in] Command  Single character AVR910 protocol command indicating what memory operation t
 380:Caterina.c    ****  */
 381:Caterina.c    **** static void ReadWriteMemoryBlock(const uint8_t Command)
 382:Caterina.c    **** {
 383:Caterina.c    **** 	uint16_t BlockSize;
 384:Caterina.c    **** 	char     MemoryType;
 385:Caterina.c    **** 
 386:Caterina.c    **** 	bool     HighByte = false;
 387:Caterina.c    **** 	uint8_t  LowByte  = 0;
 388:Caterina.c    **** 
 389:Caterina.c    **** 	BlockSize  = (FetchNextCommandByte() << 8);
 390:Caterina.c    **** 	BlockSize |=  FetchNextCommandByte();
 391:Caterina.c    **** 
 392:Caterina.c    **** 	MemoryType =  FetchNextCommandByte();
 393:Caterina.c    **** 
 394:Caterina.c    **** 	if ((MemoryType != 'E') && (MemoryType != 'F'))
 395:Caterina.c    **** 	{
 396:Caterina.c    **** 		/* Send error byte back to the host */
 397:Caterina.c    **** 		WriteNextResponseByte('?');
 398:Caterina.c    **** 
 399:Caterina.c    **** 		return;
 400:Caterina.c    **** 	}
 401:Caterina.c    **** 
 402:Caterina.c    **** 	/* Disable timer 1 interrupt - can't afford to process nonessential interrupts
 403:Caterina.c    **** 	 * while doing SPM tasks */
 404:Caterina.c    **** 	TIMSK1 = 0;
 405:Caterina.c    **** 
 406:Caterina.c    **** 	/* Check if command is to read memory */
 407:Caterina.c    **** 	if (Command == 'g')
 408:Caterina.c    **** 	{		
 409:Caterina.c    **** 		/* Re-enable RWW section */
 410:Caterina.c    **** 		boot_rww_enable();
 411:Caterina.c    **** 
 412:Caterina.c    **** 		while (BlockSize--)
 413:Caterina.c    **** 		{
 414:Caterina.c    **** 			if (MemoryType == 'F')
 415:Caterina.c    **** 			{
 416:Caterina.c    **** 				/* Read the next FLASH byte from the current FLASH page */
 417:Caterina.c    **** 				#if (FLASHEND > 0xFFFF)
 418:Caterina.c    **** 				WriteNextResponseByte(pgm_read_byte_far(CurrAddress | HighByte));
 419:Caterina.c    **** 				#else
 420:Caterina.c    **** 				WriteNextResponseByte(pgm_read_byte(CurrAddress | HighByte));
 421:Caterina.c    **** 				#endif
 422:Caterina.c    **** 
 423:Caterina.c    **** 				/* If both bytes in current word have been read, increment the address counter */
 424:Caterina.c    **** 				if (HighByte)
 425:Caterina.c    **** 				  CurrAddress += 2;
 426:Caterina.c    **** 
 427:Caterina.c    **** 				HighByte = !HighByte;
 428:Caterina.c    **** 			}
 429:Caterina.c    **** 			else
 430:Caterina.c    **** 			{
 431:Caterina.c    **** 				/* Read the next EEPROM byte into the endpoint */
 432:Caterina.c    **** 				WriteNextResponseByte(eeprom_read_byte((uint8_t*)(intptr_t)(CurrAddress >> 1)));
 433:Caterina.c    **** 
 434:Caterina.c    **** 				/* Increment the address counter after use */
 435:Caterina.c    **** 				CurrAddress += 2;
 436:Caterina.c    **** 			}
 437:Caterina.c    **** 		}
 438:Caterina.c    **** 	}
 439:Caterina.c    **** 	else
 440:Caterina.c    **** 	{
 441:Caterina.c    **** 		uint32_t PageStartAddress = CurrAddress;
 442:Caterina.c    **** 
 443:Caterina.c    **** 		if (MemoryType == 'F')
 444:Caterina.c    **** 		{
 445:Caterina.c    **** 			boot_page_erase(PageStartAddress);
 446:Caterina.c    **** 			boot_spm_busy_wait();
 447:Caterina.c    **** 		}
 448:Caterina.c    **** 
 449:Caterina.c    **** 		while (BlockSize--)
 450:Caterina.c    **** 		{
 451:Caterina.c    **** 			if (MemoryType == 'F')
 452:Caterina.c    **** 			{
 453:Caterina.c    **** 				/* If both bytes in current word have been written, increment the address counter */
 454:Caterina.c    **** 				if (HighByte)
 455:Caterina.c    **** 				{
 456:Caterina.c    **** 					/* Write the next FLASH word to the current FLASH page */
 457:Caterina.c    **** 					boot_page_fill(CurrAddress, ((FetchNextCommandByte() << 8) | LowByte));
 458:Caterina.c    **** 
 459:Caterina.c    **** 					/* Increment the address counter after use */
 460:Caterina.c    **** 					CurrAddress += 2;
 461:Caterina.c    **** 				}
 462:Caterina.c    **** 				else
 463:Caterina.c    **** 				{
 464:Caterina.c    **** 					LowByte = FetchNextCommandByte();
 465:Caterina.c    **** 				}
 466:Caterina.c    **** 				
 467:Caterina.c    **** 				HighByte = !HighByte;
 468:Caterina.c    **** 			}
 469:Caterina.c    **** 			else
 470:Caterina.c    **** 			{
 471:Caterina.c    **** 				/* Write the next EEPROM byte from the endpoint */
 472:Caterina.c    **** 				eeprom_write_byte((uint8_t*)((intptr_t)(CurrAddress >> 1)), FetchNextCommandByte());
 473:Caterina.c    **** 
 474:Caterina.c    **** 				/* Increment the address counter after use */
 475:Caterina.c    **** 				CurrAddress += 2;
 476:Caterina.c    **** 			}
 477:Caterina.c    **** 		}
 478:Caterina.c    **** 
 479:Caterina.c    **** 		/* If in FLASH programming mode, commit the page after writing */
 480:Caterina.c    **** 		if (MemoryType == 'F')
 481:Caterina.c    **** 		{
 482:Caterina.c    **** 			/* Commit the flash page to memory */
 483:Caterina.c    **** 			boot_page_write(PageStartAddress);
 484:Caterina.c    **** 
 485:Caterina.c    **** 			/* Wait until write operation has completed */
 486:Caterina.c    **** 			boot_spm_busy_wait();
 487:Caterina.c    **** 		}
 488:Caterina.c    **** 
 489:Caterina.c    **** 		/* Send response byte back to the host */
 490:Caterina.c    **** 		WriteNextResponseByte('\r');
 491:Caterina.c    **** 	}
 492:Caterina.c    **** 
 493:Caterina.c    **** 	/* Re-enable timer 1 interrupt disabled earlier in this routine */	
 494:Caterina.c    **** 	TIMSK1 = (1 << OCIE1A);
 495:Caterina.c    **** }
 496:Caterina.c    **** #endif
 497:Caterina.c    **** 
 498:Caterina.c    **** /** Retrieves the next byte from the host in the CDC data OUT endpoint, and clears the endpoint ban
 499:Caterina.c    ****  *  to allow reception of the next data packet from the host.
 500:Caterina.c    ****  *
 501:Caterina.c    ****  *  \return Next received byte from the host in the CDC data OUT endpoint
 502:Caterina.c    ****  */
 503:Caterina.c    **** static uint8_t FetchNextCommandByte(void)
 504:Caterina.c    **** {
  18               		.loc 1 504 0
  19               		.cfi_startproc
  20               	/* prologue: function */
  21               	/* frame size = 0 */
  22               	/* stack size = 0 */
  23               	.L__stack_usage = 0
  24               	.LVL0:
  25               	.LBB78:
  26               	.LBB79:
  27               		.file 2 "../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers
   1:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2011.
   4:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
   7:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2011  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
  16:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaim all warranties with regard to this
  22:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
  28:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  38:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
  64:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
  73:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
  76:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  85:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
  93:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_MAXSIZE(EPIndex)         _ENDPOINT_GET_MAXSIZE2(ENDPOINT_DETAILS_EP ## EPI
  94:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_MAXSIZE2(EPDetails)      _ENDPOINT_GET_MAXSIZE3(EPDetails)
  95:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_MAXSIZE3(MaxSize, Banks) (MaxSize)
  96:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  97:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_BANKS(EPIndex)           _ENDPOINT_GET_BANKS2(ENDPOINT_DETAILS_EP ## EPInd
  98:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_BANKS2(EPDetails)        _ENDPOINT_GET_BANKS3(EPDetails)
  99:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_BANKS3(MaxSize, Banks)   (Banks)
 100:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 101:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 102:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_MAXEP             7
 103:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 104:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP0               64,  1
 105:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP1               256, 2
 106:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP2               64,  2
 107:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP3               64,  2
 108:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP4               64,  2
 109:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP5               64,  2
 110:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP6               64,  2
 111:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 112:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_MAXEP             5
 113:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 114:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP0               64,  1
 115:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP1               64,  1
 116:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP2               64,  1
 117:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP3               64,  2
 118:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP4               64,  2
 119:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 120:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 121:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 122:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
 123:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
 124:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
 125:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 126:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
 127:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
 128:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 129:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 130:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 131:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 132:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 133:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 134:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 135:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 136:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 137:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 138:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 139:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 140:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 141:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 142:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 143:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 144:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 145:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 146:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 147:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */			
 148:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** \name Endpoint Bank Mode Masks */
 149:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			//@{
 150:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 151:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  that the endpoint should have one single bank, which requires less USB FIFO memory but resul
 152:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  in slower transfers as only one USB device (the AVR or the host) can access the endpoint's
 153:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank at the one time.
 154:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 155:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_BANK_SINGLE                    (0 << EPBK0)
 156:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 157:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 158:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  that the endpoint should have two banks, which requires more USB FIFO memory but results
 159:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  in faster transfers as one USB device (the AVR or the host) can access one bank while the ot
 160:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  accesses the second bank.
 161:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 162:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_BANK_DOUBLE                    (1 << EPBK0)
 163:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			//@}
 164:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 165:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 166:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 167:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 168:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 169:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 170:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 171:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 172:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the maximum bank size in bytes of a given endpoint.
 173:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 174:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This macro will only work correctly on endpoint indexes that are compile-time constant
 175:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        defined by the preprocessor.
 176:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 177:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EPIndex  Endpoint number, a value between 0 and (\ref ENDPOINT_TOTAL_ENDPOINTS - 
 178:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 179:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_MAX_SIZE(EPIndex)              _ENDPOINT_GET_MAXSIZE(EPIndex)
 180:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 181:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the total number of banks supported by the given endpoint.
 182:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This macro will only work correctly on endpoint indexes that are compile-time constant
 184:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        defined by the preprocessor.
 185:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 186:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EPIndex  Endpoint number, a value between 0 and (\ref ENDPOINT_TOTAL_ENDPOINTS - 
 187:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 188:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_BANKS_SUPPORTED(EPIndex)       _ENDPOINT_GET_BANKS(EPIndex)
 189:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 190:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 191:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Total number of endpoints (including the default control endpoint at address 0) which may
 192:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 193:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 194:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 195:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            ENDPOINT_DETAILS_MAXEP
 196:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 197:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 198:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 199:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 200:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 201:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 202:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 203:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 204:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 205:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 206:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 207:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 208:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 209:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 210:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 211:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 212:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 213:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 214:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 215:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 216:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 217:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 218:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 219:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 220:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 221:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 222:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 223:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 224:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 225:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint number with the given endpoint type, direction, bank size
 226:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and banking mode. Once configured, the endpoint may be read from or written to, depending
 227:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  on its direction.
 228:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 229:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Number     Endpoint number to configure. This must be more than 0 and less than
 230:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        \ref ENDPOINT_TOTAL_ENDPOINTS.
 231:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 232:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 233:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 234:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 235:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Direction  Endpoint data direction, either \ref ENDPOINT_DIR_OUT or \ref ENDPOINT
 236:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        All endpoints (except Control type) are unidirectional - data may only
 237:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        from or written to the endpoint bank based on its direction, not both.
 238:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 239:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 240:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 241:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 242:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 243:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 244:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured, an \c ENDPOI
 245:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        More banks uses more USB DPRAM, but offers better performance. Isochro
 246:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        endpoints <b>must</b> have at least two banks.
 247:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 248:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> be co
 249:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        ascending order, or bank corruption will occur.
 250:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 251:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 252:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 253:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        the chosen microcontroller model's datasheet to determine the maximum bank size for ea
 254:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 255:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 256:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 257:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 258:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 259:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 260:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 261:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 262:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 263:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 264:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 265:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Number,
 266:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 267:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Direction,
 268:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 269:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 270:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Number,
 271:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 272:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Direction,
 273:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 274:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 275:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 276:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, ((Type << EPTYPE0) | (Direction ? (1 << EPDIR) : 
 277:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | Banks | Endpoint_BytesToEPSizeMask(Size))
 278:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 279:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 280:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 281:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 282:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The return width of this function may differ, depending on the maximum endpoint bank s
 283:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        of the selected AVR model.
 284:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 285:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 286:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 287:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 288:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 289:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 290:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 291:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 292:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 293:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCX;
 294:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_4_AVR)
 295:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 296:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 297:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 298:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 299:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 300:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 301:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 302:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint number so that it can be restored after another endpoint has
 303:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  been manipulated.
 304:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 305:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Index of the currently selected endpoint.
 306:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 307:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 308:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 309:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 310:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 311:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (UENUM & ENDPOINT_EPNUM_MASK);
 312:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 313:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ENDPOINT_CONTROLEP;
 314:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 315:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 316:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 317:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Selects the given endpoint number. If the address from the device descriptors is used, the
 318:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  value should be masked with the \ref ENDPOINT_EPNUM_MASK constant to extract only the endpoi
 319:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  number (and discarding the endpoint direction bit).
 320:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 321:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  Any endpoint operations which do not require the endpoint number to be indicated will operat
 322:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint.
 323:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 324:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EndpointNumber Endpoint number to select.
 325:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 326:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 327:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber)
 328:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 329:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 330:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = EndpointNumber;
  28               		.loc 2 330 0
  29 0000 84E0      		ldi r24,lo8(4)
  30 0002 8093 E900 		sts 233,r24
  31 0006 00C0      		rjmp .L2
  32               	.L6:
  33               	.LBE79:
  34               	.LBE78:
  35               	.LBB80:
  36               	.LBB81:
 331:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 332:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 333:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 334:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 335:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  data In and Out pointers to the bank's contents.
 336:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 337:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EndpointNumber Endpoint number whose FIFO buffers are to be reset.
 338:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 339:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 340:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t EndpointNumber)
 341:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 342:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = (1 << EndpointNumber);
 343:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = 0;
 344:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 345:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 346:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 347:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and from a host.
 348:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 349:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 350:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 351:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 352:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void)
 353:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 354:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << EPEN);
 355:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 356:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 357:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 358:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  to and from a host.
 359:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 360:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 361:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void)
 362:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 363:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX &= ~(1 << EPEN);
 364:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 365:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 366:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 367:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 368:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
 369:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 370:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 371:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void)
 372:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 373:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 374:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 375:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 376:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the number of busy banks in the currently selected endpoint, which have been queue
 377:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  transmission via the \ref Endpoint_ClearIN() command, or are awaiting acknowledgement via th
 378:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ref Endpoint_ClearOUT() command.
 379:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 380:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 381:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 382:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of busy banks in the selected endpoint.
 383:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 384:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 385:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void)
 386:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 387:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UESTA0X & (0x03 << NBUSYBK0));
 388:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 389:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 390:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Aborts all pending IN transactions on the currently selected endpoint, once the bank
 391:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  has been queued for transmission to the host via \ref Endpoint_ClearIN(). This function
 392:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  will terminate all queued transactions, resetting the endpoint banks ready for a new
 393:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  packet.
 394:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 395:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 396:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 397:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_AbortPendingIN(void)
 398:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 399:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (Endpoint_GetBusyBanks() != 0)
 400:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 401:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX |= (1 << RXOUTI);
 402:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					while (UEINTX & (1 << RXOUTI));
 403:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 404:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 405:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 406:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 407:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 408:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 409:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 410:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction and the endpoint bank is full.
 411:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 412:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 413:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 414:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint may be read from or written to, d
 415:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *          on its direction.
 416:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 417:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 418:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 419:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 420:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 421:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 422:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 423:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is configured.
 424:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 425:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint has been configured, \c false oth
 426:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 427:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 428:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void)
 429:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 430:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 431:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 432:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 433:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 434:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 435:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  masking the return value against <tt>(1 << <i>{Endpoint Number}</i>)</tt>.
 436:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 437:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 438:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 439:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 440:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 441:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 442:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEINT;
 443:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 444:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 445:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 446:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoints).
 447:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 448:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EndpointNumber  Index of the endpoint whose interrupt flag should be tested.
 449:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 450:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the specified endpoint has interrupted, \c false otherwise.
 451:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 452:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber) ATTR_WARN_UNUSE
 453:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber)
 454:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 455:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((Endpoint_GetEndpointInterrupts() & (1 << EndpointNumber)) ? true : false);
 456:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 457:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 458:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 459:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 460:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 461:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 462:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwis
 463:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 464:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 465:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void)
 466:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 467:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 468:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 469:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 470:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 471:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 472:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 473:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 474:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwis
 475:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 476:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 477:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 478:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 479:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 480:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 481:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 482:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 483:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 484:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 485:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 486:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false other
 487:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 488:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 489:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 490:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 491:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 492:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 493:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 494:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 495:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint for the next packet.
 496:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 497:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 498:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 499:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 500:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 501:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 502:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void)
 503:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 504:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 505:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 506:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 507:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 508:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 509:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 510:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 511:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 512:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 513:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void)
 514:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 515:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 516:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 517:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 518:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << TXINI);
 519:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 520:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 521:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 522:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 523:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 524:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 525:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 526:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 527:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 528:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void)
 529:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 530:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 531:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
  37               		.loc 2 531 0
  38 0008 8091 E800 		lds r24,232
  39 000c 8B77      		andi r24,lo8(123)
  40 000e 8093 E800 		sts 232,r24
  41 0012 00C0      		rjmp .L3
  42               	.L5:
  43               	.LBE81:
  44               	.LBE80:
 505:Caterina.c    **** 	/* Select the OUT endpoint so that the next data byte can be read */
 506:Caterina.c    **** 	Endpoint_SelectEndpoint(CDC_RX_EPNUM);
 507:Caterina.c    **** 
 508:Caterina.c    **** 	/* If OUT endpoint empty, clear it and wait for the next packet from the host */
 509:Caterina.c    **** 	while (!(Endpoint_IsReadWriteAllowed()))
 510:Caterina.c    **** 	{
 511:Caterina.c    **** 		Endpoint_ClearOUT();
 512:Caterina.c    **** 
 513:Caterina.c    **** 		while (!(Endpoint_IsOUTReceived()))
 514:Caterina.c    **** 		{
 515:Caterina.c    **** 			if (USB_DeviceState == DEVICE_STATE_Unattached)
  45               		.loc 1 515 0
  46 0014 8EB3      		in r24,62-32
  47 0016 8823      		tst r24
  48 0018 01F0      		breq .L7
  49               	.L3:
  50               	.LBB82:
  51               	.LBB83:
 479:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
  52               		.loc 2 479 0 discriminator 1
  53 001a 8091 E800 		lds r24,232
  54               	.LBE83:
  55               	.LBE82:
 513:Caterina.c    **** 		while (!(Endpoint_IsOUTReceived()))
  56               		.loc 1 513 0 discriminator 1
  57 001e 82FF      		sbrs r24,2
  58 0020 00C0      		rjmp .L5
  59               	.L2:
  60               	.LBB84:
  61               	.LBB85:
 420:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
  62               		.loc 2 420 0 discriminator 1
  63 0022 8091 E800 		lds r24,232
  64               	.LBE85:
  65               	.LBE84:
 509:Caterina.c    **** 	while (!(Endpoint_IsReadWriteAllowed()))
  66               		.loc 1 509 0 discriminator 1
  67 0026 85FF      		sbrs r24,5
  68 0028 00C0      		rjmp .L6
  69               	.LBB86:
  70               	.LBB87:
 532:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 533:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << RXOUTI);
 534:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 535:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 536:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 537:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 538:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 539:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 540:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  aborted and the host can begin its own recovery sequence.
 541:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 542:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 543:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 544:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint.
 545:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 546:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 547:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 548:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 549:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void)
 550:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 551:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQ);
 552:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 553:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 554:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears the STALL condition on the currently selected endpoint.
 555:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 556:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 557:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 558:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void) ATTR_ALWAYS_INLINE;
 559:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void)
 560:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 561:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQC);
 562:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 563:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 564:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is stalled, false otherwise.
 565:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 566:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 567:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 568:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint is stalled, \c false otherwise.
 569:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 570:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 571:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void)
 572:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 573:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << STALLRQ)) ? true : false);
 574:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 575:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 576:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the data toggle of the currently selected endpoint. */
 577:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void) ATTR_ALWAYS_INLINE;
 578:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void)
 579:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 580:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << RSTDT);
 581:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 582:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 583:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines the currently selected endpoint's direction.
 584:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 585:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
 586:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 587:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 588:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 589:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 590:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
 591:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 592:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 593:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sets the direction of the currently selected endpoint.
 594:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 595:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] DirectionMask  New endpoint direction, as a \c ENDPOINT_DIR_* mask.
 596:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 597:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask) ATTR_ALWAYS_INLINE
 598:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask)
 599:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 600:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECFG0X = ((UECFG0X & ~(1 << EPDIR)) | (DirectionMask ? (1 << EPDIR) : 0));
 601:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 602:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 603:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Reads one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 604:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 605:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 606:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 607:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
 608:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 609:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 610:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void)
 611:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 612:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEDATX;
  71               		.loc 2 612 0
  72 002a 8091 F100 		lds r24,241
  73               	.LBE87:
  74               	.LBE86:
 516:Caterina.c    **** 			  return 0;
 517:Caterina.c    **** 		}
 518:Caterina.c    **** 	}
 519:Caterina.c    **** 
 520:Caterina.c    **** 	/* Fetch the next byte from the OUT endpoint */
 521:Caterina.c    **** 	return Endpoint_Read_8();
  75               		.loc 1 521 0
  76 002e 0895      		ret
  77               	.L7:
 516:Caterina.c    **** 			  return 0;
  78               		.loc 1 516 0
  79 0030 80E0      		ldi r24,lo8(0)
 522:Caterina.c    **** }
  80               		.loc 1 522 0
  81 0032 0895      		ret
  82               		.cfi_endproc
  83               	.LFE101:
  85               		.section	.text.WriteNextResponseByte,"ax",@progbits
  87               	WriteNextResponseByte:
  88               	.LFB102:
 523:Caterina.c    **** 
 524:Caterina.c    **** /** Writes the next response byte to the CDC data IN endpoint, and sends the endpoint back if neede
 525:Caterina.c    ****  *  bank when full ready for the next byte in the packet to the host.
 526:Caterina.c    ****  *
 527:Caterina.c    ****  *  \param[in] Response  Next response byte to send to the host
 528:Caterina.c    ****  */
 529:Caterina.c    **** static void WriteNextResponseByte(const uint8_t Response)
 530:Caterina.c    **** {
  89               		.loc 1 530 0
  90               		.cfi_startproc
  91               	.LVL1:
  92               	/* prologue: function */
  93               	/* frame size = 0 */
  94               	/* stack size = 0 */
  95               	.L__stack_usage = 0
  96               	.LBB88:
  97               	.LBB89:
 330:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = EndpointNumber;
  98               		.loc 2 330 0
  99 0000 93E0      		ldi r25,lo8(3)
 100 0002 9093 E900 		sts 233,r25
 101               	.LBE89:
 102               	.LBE88:
 103               	.LBB90:
 104               	.LBB91:
 420:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 105               		.loc 2 420 0
 106 0006 9091 E800 		lds r25,232
 107               	.LBE91:
 108               	.LBE90:
 531:Caterina.c    **** 	/* Select the IN endpoint so that the next data byte can be written */
 532:Caterina.c    **** 	Endpoint_SelectEndpoint(CDC_TX_EPNUM);
 533:Caterina.c    **** 
 534:Caterina.c    **** 	/* If IN endpoint full, clear it and wait until ready for the next packet to the host */
 535:Caterina.c    **** 	if (!(Endpoint_IsReadWriteAllowed()))
 109               		.loc 1 535 0
 110 000a 95FD      		sbrc r25,5
 111 000c 00C0      		rjmp .L9
 112               	.LBB92:
 113               	.LBB93:
 516:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 114               		.loc 2 516 0
 115 000e 9091 E800 		lds r25,232
 116 0012 9E77      		andi r25,lo8(126)
 117 0014 9093 E800 		sts 232,r25
 118 0018 00C0      		rjmp .L10
 119               	.L12:
 120               	.LBE93:
 121               	.LBE92:
 536:Caterina.c    **** 	{
 537:Caterina.c    **** 		Endpoint_ClearIN();
 538:Caterina.c    **** 
 539:Caterina.c    **** 		while (!(Endpoint_IsINReady()))
 540:Caterina.c    **** 		{
 541:Caterina.c    **** 			if (USB_DeviceState == DEVICE_STATE_Unattached)
 122               		.loc 1 541 0
 123 001a 9EB3      		in r25,62-32
 124 001c 9923      		tst r25
 125 001e 01F0      		breq .L8
 126               	.L10:
 127               	.LBB94:
 128               	.LBB95:
 467:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 129               		.loc 2 467 0 discriminator 1
 130 0020 9091 E800 		lds r25,232
 131               	.LBE95:
 132               	.LBE94:
 539:Caterina.c    **** 		while (!(Endpoint_IsINReady()))
 133               		.loc 1 539 0 discriminator 1
 134 0024 90FF      		sbrs r25,0
 135 0026 00C0      		rjmp .L12
 136               	.L9:
 137               	.LVL2:
 138               	.LBB96:
 139               	.LBB97:
 613:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 614:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 615:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Writes one byte to the currently selected endpoint's bank, for IN direction endpoints.
 616:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 617:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 618:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 619:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Data  Data to write into the the currently selected endpoint's FIFO buffer.
 620:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 621:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data) ATTR_ALWAYS_INLINE;
 622:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data)
 623:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 624:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 140               		.loc 2 624 0
 141 0028 8093 F100 		sts 241,r24
 142               	.LBE97:
 143               	.LBE96:
 542:Caterina.c    **** 			  return;
 543:Caterina.c    **** 		}
 544:Caterina.c    **** 	}
 545:Caterina.c    **** 
 546:Caterina.c    **** 	/* Write the next byte to the IN endpoint */
 547:Caterina.c    **** 	Endpoint_Write_8(Response);
 548:Caterina.c    **** 	
 549:Caterina.c    **** 	TX_LED_ON();
 144               		.loc 1 549 0
 145 002c 5D98      		cbi 43-32,5
 550:Caterina.c    **** 	TxLEDPulse = TX_RX_LED_PULSE_PERIOD;
 146               		.loc 1 550 0
 147 002e 84E6      		ldi r24,lo8(100)
 148 0030 90E0      		ldi r25,hi8(100)
 149               	.LVL3:
 150 0032 9093 0000 		sts TxLEDPulse+1,r25
 151 0036 8093 0000 		sts TxLEDPulse,r24
 152               	.LVL4:
 153               	.L8:
 154 003a 0895      		ret
 155               		.cfi_endproc
 156               	.LFE102:
 158               		.section	.text.StartSketch,"ax",@progbits
 159               	.global	StartSketch
 161               	StartSketch:
 162               	.LFB95:
  92:Caterina.c    **** {
 163               		.loc 1 92 0
 164               		.cfi_startproc
 165               	/* prologue: function */
 166               	/* frame size = 0 */
 167               	/* stack size = 0 */
 168               	.L__stack_usage = 0
  93:Caterina.c    **** 	cli();
 169               		.loc 1 93 0
 170               	/* #APP */
 171               	 ;  93 "Caterina.c" 1
 172 0000 F894      		cli
 173               	 ;  0 "" 2
  96:Caterina.c    **** 	TIMSK1 = 0;
 174               		.loc 1 96 0
 175               	/* #NOAPP */
 176 0002 1092 6F00 		sts 111,__zero_reg__
  97:Caterina.c    **** 	TCCR1B = 0;
 177               		.loc 1 97 0
 178 0006 1092 8100 		sts 129,__zero_reg__
 105:Caterina.c    **** 	MCUCR = (1 << IVCE);
 179               		.loc 1 105 0
 180 000a 81E0      		ldi r24,lo8(1)
 181 000c 85BF      		out 85-32,r24
 106:Caterina.c    **** 	MCUCR = 0;
 182               		.loc 1 106 0
 183 000e 15BE      		out 85-32,__zero_reg__
 108:Caterina.c    **** 	L_LED_OFF();
 184               		.loc 1 108 0
 185 0010 4798      		cbi 40-32,7
 109:Caterina.c    **** 	TX_LED_OFF();
 186               		.loc 1 109 0
 187 0012 5D9A      		sbi 43-32,5
 110:Caterina.c    **** 	RX_LED_OFF();
 188               		.loc 1 110 0
 189 0014 289A      		sbi 37-32,0
 113:Caterina.c    **** 	__asm__ volatile("jmp 0x0000");
 190               		.loc 1 113 0
 191               	/* #APP */
 192               	 ;  113 "Caterina.c" 1
 193 0016 0C94 0000 		jmp 0x0000
 194               	 ;  0 "" 2
 195               	/* epilogue start */
 115:Caterina.c    **** }
 196               		.loc 1 115 0
 197               	/* #NOAPP */
 198 001a 0895      		ret
 199               		.cfi_endproc
 200               	.LFE95:
 202               		.section	.text.__vector_17,"ax",@progbits
 203               	.global	__vector_17
 205               	__vector_17:
 206               	.LFB97:
 299:Caterina.c    **** {
 207               		.loc 1 299 0
 208               		.cfi_startproc
 209 0000 1F92      		push r1
 210               	.LCFI0:
 211               		.cfi_def_cfa_offset 3
 212               		.cfi_offset 1, -2
 213 0002 0F92      		push r0
 214               	.LCFI1:
 215               		.cfi_def_cfa_offset 4
 216               		.cfi_offset 0, -3
 217 0004 0FB6      		in r0,__SREG__
 218 0006 0F92      		push r0
 219 0008 1124      		clr __zero_reg__
 220 000a 2F93      		push r18
 221               	.LCFI2:
 222               		.cfi_def_cfa_offset 5
 223               		.cfi_offset 18, -4
 224 000c 8F93      		push r24
 225               	.LCFI3:
 226               		.cfi_def_cfa_offset 6
 227               		.cfi_offset 24, -5
 228 000e 9F93      		push r25
 229               	.LCFI4:
 230               		.cfi_def_cfa_offset 7
 231               		.cfi_offset 25, -6
 232 0010 EF93      		push r30
 233               	.LCFI5:
 234               		.cfi_def_cfa_offset 8
 235               		.cfi_offset 30, -7
 236 0012 FF93      		push r31
 237               	.LCFI6:
 238               		.cfi_def_cfa_offset 9
 239               		.cfi_offset 31, -8
 240               	/* prologue: Signal */
 241               	/* frame size = 0 */
 242               	/* stack size = 8 */
 243               	.L__stack_usage = 8
 301:Caterina.c    **** 	TCNT1H = 0;
 244               		.loc 1 301 0
 245 0014 1092 8500 		sts 133,__zero_reg__
 302:Caterina.c    **** 	TCNT1L = 0;
 246               		.loc 1 302 0
 247 0018 1092 8400 		sts 132,__zero_reg__
 305:Caterina.c    **** 	if (TxLEDPulse && !(--TxLEDPulse))
 248               		.loc 1 305 0
 249 001c 8091 0000 		lds r24,TxLEDPulse
 250 0020 9091 0000 		lds r25,TxLEDPulse+1
 251 0024 0097      		sbiw r24,0
 252 0026 01F0      		breq .L15
 305:Caterina.c    **** 	if (TxLEDPulse && !(--TxLEDPulse))
 253               		.loc 1 305 0 is_stmt 0 discriminator 1
 254 0028 0197      		sbiw r24,1
 255 002a 9093 0000 		sts TxLEDPulse+1,r25
 256 002e 8093 0000 		sts TxLEDPulse,r24
 257 0032 0097      		sbiw r24,0
 258 0034 01F4      		brne .L15
 306:Caterina.c    **** 		TX_LED_OFF();
 259               		.loc 1 306 0 is_stmt 1
 260 0036 5D9A      		sbi 43-32,5
 261               	.L15:
 307:Caterina.c    **** 	if (RxLEDPulse && !(--RxLEDPulse))
 262               		.loc 1 307 0
 263 0038 8091 0000 		lds r24,RxLEDPulse
 264 003c 9091 0000 		lds r25,RxLEDPulse+1
 265 0040 0097      		sbiw r24,0
 266 0042 01F0      		breq .L16
 307:Caterina.c    **** 	if (RxLEDPulse && !(--RxLEDPulse))
 267               		.loc 1 307 0 is_stmt 0 discriminator 1
 268 0044 0197      		sbiw r24,1
 269 0046 9093 0000 		sts RxLEDPulse+1,r25
 270 004a 8093 0000 		sts RxLEDPulse,r24
 271 004e 0097      		sbiw r24,0
 272 0050 01F4      		brne .L16
 308:Caterina.c    **** 		RX_LED_OFF();
 273               		.loc 1 308 0 is_stmt 1
 274 0052 289A      		sbi 37-32,0
 275               	.L16:
 310:Caterina.c    **** 	resetTimeout++;
 276               		.loc 1 310 0
 277 0054 8091 0000 		lds r24,resetTimeout
 278 0058 9091 0000 		lds r25,resetTimeout+1
 279 005c 0196      		adiw r24,1
 280 005e 9093 0000 		sts resetTimeout+1,r25
 281 0062 8093 0000 		sts resetTimeout,r24
 282               	.LVL5:
 283               	.LBB98:
 311:Caterina.c    **** 	if (pgm_read_word(0) != 0xFFFF)
 284               		.loc 1 311 0
 285 0066 E0E0      		ldi r30,lo8(0)
 286 0068 F0E0      		ldi r31,hi8(0)
 287               	/* #APP */
 288               	 ;  311 "Caterina.c" 1
 289 006a 8591      		lpm r24, Z+
 290 006c 9491      		lpm r25, Z
 291               		
 292               	 ;  0 "" 2
 293               	.LVL6:
 294               	/* #NOAPP */
 295               	.LBE98:
 296 006e 2FEF      		ldi r18,hi8(-1)
 297 0070 8F3F      		cpi r24,lo8(-1)
 298 0072 9207      		cpc r25,r18
 299 0074 01F0      		breq .L14
 312:Caterina.c    **** 		Timeout++;
 300               		.loc 1 312 0
 301 0076 8091 0000 		lds r24,Timeout
 302 007a 9091 0000 		lds r25,Timeout+1
 303               	.LVL7:
 304 007e 0196      		adiw r24,1
 305 0080 9093 0000 		sts Timeout+1,r25
 306 0084 8093 0000 		sts Timeout,r24
 307               	.L14:
 308               	/* epilogue start */
 313:Caterina.c    **** }
 309               		.loc 1 313 0
 310 0088 FF91      		pop r31
 311 008a EF91      		pop r30
 312 008c 9F91      		pop r25
 313 008e 8F91      		pop r24
 314 0090 2F91      		pop r18
 315 0092 0F90      		pop r0
 316 0094 0FBE      		out __SREG__,r0
 317 0096 0F90      		pop r0
 318 0098 1F90      		pop r1
 319 009a 1895      		reti
 320               		.cfi_endproc
 321               	.LFE97:
 323               		.section	.text.EVENT_USB_Device_ConfigurationChanged,"ax",@progbits
 324               	.global	EVENT_USB_Device_ConfigurationChanged
 326               	EVENT_USB_Device_ConfigurationChanged:
 327               	.LFB98:
 319:Caterina.c    **** {
 328               		.loc 1 319 0
 329               		.cfi_startproc
 330               	/* prologue: function */
 331               	/* frame size = 0 */
 332               	/* stack size = 0 */
 333               	.L__stack_usage = 0
 334               	.LVL8:
 335               	.LBB99:
 336               	.LBB100:
 276:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, ((Type << EPTYPE0) | (Direction ? (1 << EPDIR) : 
 337               		.loc 2 276 0
 338 0000 82E0      		ldi r24,lo8(2)
 339 0002 61EC      		ldi r22,lo8(-63)
 340 0004 42E0      		ldi r20,lo8(2)
 341 0006 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 342               	.LVL9:
 343               	.LBE100:
 344               	.LBE99:
 345               	.LBB101:
 346               	.LBB102:
 347 000a 83E0      		ldi r24,lo8(3)
 348 000c 61E8      		ldi r22,lo8(-127)
 349 000e 42E1      		ldi r20,lo8(18)
 350 0010 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 351               	.LVL10:
 352               	.LBE102:
 353               	.LBE101:
 354               	.LBB103:
 355               	.LBB104:
 356 0014 84E0      		ldi r24,lo8(4)
 357 0016 60E8      		ldi r22,lo8(-128)
 358 0018 42E1      		ldi r20,lo8(18)
 359 001a 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 360               	/* epilogue start */
 361               	.LBE104:
 362               	.LBE103:
 332:Caterina.c    **** }
 363               		.loc 1 332 0
 364 001e 0895      		ret
 365               		.cfi_endproc
 366               	.LFE98:
 368               		.section	.text.EVENT_USB_Device_ControlRequest,"ax",@progbits
 369               	.global	EVENT_USB_Device_ControlRequest
 371               	EVENT_USB_Device_ControlRequest:
 372               	.LFB99:
 339:Caterina.c    **** {
 373               		.loc 1 339 0
 374               		.cfi_startproc
 375               	/* prologue: function */
 376               	/* frame size = 0 */
 377               	/* stack size = 0 */
 378               	.L__stack_usage = 0
 341:Caterina.c    **** 	if ((USB_ControlRequest.bmRequestType & (CONTROL_REQTYPE_TYPE | CONTROL_REQTYPE_RECIPIENT)) !=
 379               		.loc 1 341 0
 380 0000 8091 0000 		lds r24,USB_ControlRequest
 381 0004 982F      		mov r25,r24
 382 0006 9F77      		andi r25,lo8(127)
 383 0008 9132      		cpi r25,lo8(33)
 384 000a 01F4      		brne .L19
 348:Caterina.c    **** 	switch (USB_ControlRequest.bRequest)
 385               		.loc 1 348 0
 386 000c 9091 0000 		lds r25,USB_ControlRequest+1
 387 0010 9032      		cpi r25,lo8(32)
 388 0012 01F0      		breq .L21
 389 0014 9132      		cpi r25,lo8(33)
 390 0016 01F4      		brne .L19
 351:Caterina.c    **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE)
 391               		.loc 1 351 0
 392 0018 813A      		cpi r24,lo8(-95)
 393 001a 01F4      		brne .L19
 394               	.LBB105:
 395               	.LBB106:
 504:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 396               		.loc 2 504 0
 397 001c 8091 E800 		lds r24,232
 398 0020 877F      		andi r24,lo8(-9)
 399 0022 8093 E800 		sts 232,r24
 400               	.LBE106:
 401               	.LBE105:
 356:Caterina.c    **** 				Endpoint_Write_Control_Stream_LE(&LineEncoding, sizeof(CDC_LineEncoding_t));
 402               		.loc 1 356 0
 403 0026 80E0      		ldi r24,lo8(LineEncoding)
 404 0028 90E0      		ldi r25,hi8(LineEncoding)
 405 002a 67E0      		ldi r22,lo8(7)
 406 002c 70E0      		ldi r23,hi8(7)
 407 002e 0E94 0000 		call Endpoint_Write_Control_Stream_LE
 408               	.LBB107:
 409               	.LBB108:
 531:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 410               		.loc 2 531 0
 411 0032 8091 E800 		lds r24,232
 412 0036 8B77      		andi r24,lo8(123)
 413 0038 8093 E800 		sts 232,r24
 414 003c 0895      		ret
 415               	.L21:
 416               	.LBE108:
 417               	.LBE107:
 362:Caterina.c    **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE)
 418               		.loc 1 362 0
 419 003e 8132      		cpi r24,lo8(33)
 420 0040 01F4      		brne .L19
 421               	.LBB109:
 422               	.LBB110:
 504:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 423               		.loc 2 504 0
 424 0042 8091 E800 		lds r24,232
 425 0046 877F      		andi r24,lo8(-9)
 426 0048 8093 E800 		sts 232,r24
 427               	.LBE110:
 428               	.LBE109:
 367:Caterina.c    **** 				Endpoint_Read_Control_Stream_LE(&LineEncoding, sizeof(CDC_LineEncoding_t));
 429               		.loc 1 367 0
 430 004c 80E0      		ldi r24,lo8(LineEncoding)
 431 004e 90E0      		ldi r25,hi8(LineEncoding)
 432 0050 67E0      		ldi r22,lo8(7)
 433 0052 70E0      		ldi r23,hi8(7)
 434 0054 0E94 0000 		call Endpoint_Read_Control_Stream_LE
 435               	.LBB111:
 436               	.LBB112:
 516:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 437               		.loc 2 516 0
 438 0058 8091 E800 		lds r24,232
 439 005c 8E77      		andi r24,lo8(126)
 440 005e 8093 E800 		sts 232,r24
 441               	.L19:
 442 0062 0895      		ret
 443               	.LBE112:
 444               	.LBE111:
 445               		.cfi_endproc
 446               	.LFE99:
 448               		.data
 449               	.LC0:
 450 0000 4341 5445 		.string	"CATERINA"
 450      5249 4E41 
 450      00
 451               		.section	.text.CDC_Task,"ax",@progbits
 452               	.global	CDC_Task
 454               	CDC_Task:
 455               	.LFB103:
 551:Caterina.c    **** }
 552:Caterina.c    **** 
 553:Caterina.c    **** #define STK_OK              0x10
 554:Caterina.c    **** #define STK_INSYNC          0x14  // ' '
 555:Caterina.c    **** #define CRC_EOP             0x20  // 'SPACE'
 556:Caterina.c    **** #define STK_GET_SYNC        0x30  // '0'
 557:Caterina.c    **** 
 558:Caterina.c    **** #define STK_GET_PARAMETER   0x41  // 'A'
 559:Caterina.c    **** #define STK_SET_DEVICE      0x42  // 'B'
 560:Caterina.c    **** #define STK_SET_DEVICE_EXT  0x45  // 'E'
 561:Caterina.c    **** #define STK_LOAD_ADDRESS    0x55  // 'U'
 562:Caterina.c    **** #define STK_UNIVERSAL       0x56  // 'V'
 563:Caterina.c    **** #define STK_PROG_PAGE       0x64  // 'd'
 564:Caterina.c    **** #define STK_READ_PAGE       0x74  // 't'
 565:Caterina.c    **** #define STK_READ_SIGN       0x75  // 'u'
 566:Caterina.c    **** 
 567:Caterina.c    **** /** Task to read in AVR910 commands from the CDC data OUT endpoint, process them, perform the requi
 568:Caterina.c    ****  *  and send the appropriate response back to the host.
 569:Caterina.c    ****  */
 570:Caterina.c    **** void CDC_Task(void)
 571:Caterina.c    **** {
 456               		.loc 1 571 0
 457               		.cfi_startproc
 458 0000 4F92      		push r4
 459               	.LCFI7:
 460               		.cfi_def_cfa_offset 3
 461               		.cfi_offset 4, -2
 462 0002 5F92      		push r5
 463               	.LCFI8:
 464               		.cfi_def_cfa_offset 4
 465               		.cfi_offset 5, -3
 466 0004 6F92      		push r6
 467               	.LCFI9:
 468               		.cfi_def_cfa_offset 5
 469               		.cfi_offset 6, -4
 470 0006 7F92      		push r7
 471               	.LCFI10:
 472               		.cfi_def_cfa_offset 6
 473               		.cfi_offset 7, -5
 474 0008 8F92      		push r8
 475               	.LCFI11:
 476               		.cfi_def_cfa_offset 7
 477               		.cfi_offset 8, -6
 478 000a 9F92      		push r9
 479               	.LCFI12:
 480               		.cfi_def_cfa_offset 8
 481               		.cfi_offset 9, -7
 482 000c AF92      		push r10
 483               	.LCFI13:
 484               		.cfi_def_cfa_offset 9
 485               		.cfi_offset 10, -8
 486 000e BF92      		push r11
 487               	.LCFI14:
 488               		.cfi_def_cfa_offset 10
 489               		.cfi_offset 11, -9
 490 0010 CF92      		push r12
 491               	.LCFI15:
 492               		.cfi_def_cfa_offset 11
 493               		.cfi_offset 12, -10
 494 0012 DF92      		push r13
 495               	.LCFI16:
 496               		.cfi_def_cfa_offset 12
 497               		.cfi_offset 13, -11
 498 0014 EF92      		push r14
 499               	.LCFI17:
 500               		.cfi_def_cfa_offset 13
 501               		.cfi_offset 14, -12
 502 0016 FF92      		push r15
 503               	.LCFI18:
 504               		.cfi_def_cfa_offset 14
 505               		.cfi_offset 15, -13
 506 0018 0F93      		push r16
 507               	.LCFI19:
 508               		.cfi_def_cfa_offset 15
 509               		.cfi_offset 16, -14
 510 001a 1F93      		push r17
 511               	.LCFI20:
 512               		.cfi_def_cfa_offset 16
 513               		.cfi_offset 17, -15
 514 001c CF93      		push r28
 515               	.LCFI21:
 516               		.cfi_def_cfa_offset 17
 517               		.cfi_offset 28, -16
 518 001e DF93      		push r29
 519               	.LCFI22:
 520               		.cfi_def_cfa_offset 18
 521               		.cfi_offset 29, -17
 522               	/* prologue: function */
 523               	/* frame size = 0 */
 524               	/* stack size = 16 */
 525               	.L__stack_usage = 16
 526               	.LVL11:
 527               	.LBB145:
 528               	.LBB146:
 330:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = EndpointNumber;
 529               		.loc 2 330 0
 530 0020 84E0      		ldi r24,lo8(4)
 531 0022 8093 E900 		sts 233,r24
 532               	.LBE146:
 533               	.LBE145:
 534               	.LBB147:
 535               	.LBB148:
 479:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 536               		.loc 2 479 0
 537 0026 8091 E800 		lds r24,232
 538               	.LBE148:
 539               	.LBE147:
 572:Caterina.c    **** 	/* Select the OUT endpoint */
 573:Caterina.c    **** 	Endpoint_SelectEndpoint(CDC_RX_EPNUM);
 574:Caterina.c    **** 
 575:Caterina.c    **** 	/* Check if endpoint has a command in it sent from the host */
 576:Caterina.c    **** 	if (!(Endpoint_IsOUTReceived()))
 540               		.loc 1 576 0
 541 002a 82FF      		sbrs r24,2
 542 002c 00C0      		rjmp .L23
 577:Caterina.c    **** 	  return;
 578:Caterina.c    **** 	  
 579:Caterina.c    **** 	RX_LED_ON();
 543               		.loc 1 579 0
 544 002e 2898      		cbi 37-32,0
 580:Caterina.c    **** 	RxLEDPulse = TX_RX_LED_PULSE_PERIOD;
 545               		.loc 1 580 0
 546 0030 84E6      		ldi r24,lo8(100)
 547 0032 90E0      		ldi r25,hi8(100)
 548 0034 9093 0000 		sts RxLEDPulse+1,r25
 549 0038 8093 0000 		sts RxLEDPulse,r24
 581:Caterina.c    **** 
 582:Caterina.c    **** 	/* Read in the bootloader command (first byte sent from host) */
 583:Caterina.c    **** 	uint8_t Command = FetchNextCommandByte();
 550               		.loc 1 583 0
 551 003c 0E94 0000 		call FetchNextCommandByte
 552 0040 C82F      		mov r28,r24
 553               	.LVL12:
 584:Caterina.c    **** 
 585:Caterina.c    **** 	if (Command == 'E')
 554               		.loc 1 585 0
 555 0042 8534      		cpi r24,lo8(69)
 556 0044 01F4      		brne .L25
 586:Caterina.c    **** 	{
 587:Caterina.c    **** 		/* We nearly run out the bootloader timeout clock, 
 588:Caterina.c    **** 		* leaving just a few hundred milliseconds so the 
 589:Caterina.c    **** 		* bootloder has time to respond and service any 
 590:Caterina.c    **** 		* subsequent requests */
 591:Caterina.c    **** 		Timeout = TIMEOUT_PERIOD - 500;
 557               		.loc 1 591 0
 558 0046 8CE4      		ldi r24,lo8(7500)
 559 0048 9DE1      		ldi r25,hi8(7500)
 560               	.LVL13:
 561 004a 9093 0000 		sts Timeout+1,r25
 562 004e 8093 0000 		sts Timeout,r24
 563               	.L26:
 592:Caterina.c    **** 	
 593:Caterina.c    **** 		/* Re-enable RWW section - must be done here in case 
 594:Caterina.c    **** 		 * user has disabled verification on upload.  */
 595:Caterina.c    **** 		boot_rww_enable_safe();		
 564               		.loc 1 595 0 discriminator 1
 565 0052 07B6      		in __tmp_reg__,87-32
 566 0054 00FC      		sbrc __tmp_reg__,0
 567 0056 00C0      		rjmp .L26
 568               	.L81:
 569               		.loc 1 595 0 is_stmt 0 discriminator 2
 570 0058 F999      		sbic 63-32,1
 571 005a 00C0      		rjmp .L81
 572               		.loc 1 595 0 discriminator 3
 573 005c 81E1      		ldi r24,lo8(17)
 574               	/* #APP */
 575               	 ;  595 "Caterina.c" 1
 576 005e 8093 5700 		sts 87, r24
 577 0062 E895      		spm
 578               		
 579               	 ;  0 "" 2
 580               	/* #NOAPP */
 581 0064 00C0      		rjmp .L95
 582               	.L25:
 596:Caterina.c    **** 
 597:Caterina.c    **** 		// Send confirmation byte back to the host 
 598:Caterina.c    **** 		WriteNextResponseByte('\r');
 599:Caterina.c    **** 	}
 600:Caterina.c    **** 	else if (Command == 'T')
 583               		.loc 1 600 0 is_stmt 1
 584 0066 8435      		cpi r24,lo8(84)
 585 0068 01F4      		brne .L29
 601:Caterina.c    **** 	{
 602:Caterina.c    **** 		FetchNextCommandByte();
 586               		.loc 1 602 0
 587 006a 0E94 0000 		call FetchNextCommandByte
 588               	.LVL14:
 589               	.L95:
 603:Caterina.c    **** 
 604:Caterina.c    **** 		// Send confirmation byte back to the host 
 605:Caterina.c    **** 		WriteNextResponseByte('\r');
 590               		.loc 1 605 0
 591 006e 8DE0      		ldi r24,lo8(13)
 592 0070 00C0      		rjmp .L94
 593               	.LVL15:
 594               	.L29:
 606:Caterina.c    **** 	}
 607:Caterina.c    **** 	else if ((Command == 'L') || (Command == 'P'))
 595               		.loc 1 607 0
 596 0072 8C34      		cpi r24,lo8(76)
 597 0074 01F0      		breq .L95
 598               		.loc 1 607 0 is_stmt 0 discriminator 1
 599 0076 8035      		cpi r24,lo8(80)
 600 0078 01F0      		breq .L95
 601               	.L31:
 608:Caterina.c    **** 	{
 609:Caterina.c    **** 		// Send confirmation byte back to the host 
 610:Caterina.c    **** 		WriteNextResponseByte('\r');
 611:Caterina.c    **** 	}
 612:Caterina.c    **** 	else if (Command == 't')
 602               		.loc 1 612 0 is_stmt 1
 603 007a 8437      		cpi r24,lo8(116)
 604 007c 01F4      		brne .L32
 613:Caterina.c    **** 	{
 614:Caterina.c    **** 		// Return ATMEGA128 part code - this is only to allow AVRProg to use the bootloader 
 615:Caterina.c    **** 		WriteNextResponseByte(0x44);
 605               		.loc 1 615 0
 606 007e 84E4      		ldi r24,lo8(68)
 607               	.LVL16:
 608 0080 0E94 0000 		call WriteNextResponseByte
 616:Caterina.c    **** 		WriteNextResponseByte(0x00);
 609               		.loc 1 616 0
 610 0084 80E0      		ldi r24,lo8(0)
 611 0086 00C0      		rjmp .L94
 612               	.L32:
 617:Caterina.c    **** 	}
 618:Caterina.c    **** 	else if (Command == 'a')
 613               		.loc 1 618 0
 614 0088 8136      		cpi r24,lo8(97)
 615 008a 01F4      		brne .L33
 619:Caterina.c    **** 	{
 620:Caterina.c    **** 		// Indicate auto-address increment is supported 
 621:Caterina.c    **** 		WriteNextResponseByte('Y');
 616               		.loc 1 621 0
 617 008c 89E5      		ldi r24,lo8(89)
 618 008e 00C0      		rjmp .L94
 619               	.L33:
 622:Caterina.c    **** 	}
 623:Caterina.c    **** 	else if (Command == 'A')
 620               		.loc 1 623 0
 621 0090 8134      		cpi r24,lo8(65)
 622 0092 01F4      		brne .L34
 624:Caterina.c    **** 	{
 625:Caterina.c    **** 		// Set the current address to that given by the host 
 626:Caterina.c    **** 		CurrAddress   = (FetchNextCommandByte() << 9);
 623               		.loc 1 626 0
 624 0094 0E94 0000 		call FetchNextCommandByte
 625 0098 C82F      		mov r28,r24
 626               	.LVL17:
 627:Caterina.c    **** 		CurrAddress  |= (FetchNextCommandByte() << 1);
 627               		.loc 1 627 0
 628 009a 0E94 0000 		call FetchNextCommandByte
 629 009e 482F      		mov r20,r24
 630 00a0 50E0      		ldi r21,lo8(0)
 631 00a2 440F      		lsl r20
 632 00a4 551F      		rol r21
 633 00a6 6627      		clr r22
 634 00a8 57FD      		sbrc r21,7
 635 00aa 6095      		com r22
 636 00ac 762F      		mov r23,r22
 626:Caterina.c    **** 		CurrAddress   = (FetchNextCommandByte() << 9);
 637               		.loc 1 626 0
 638 00ae 3C2F      		mov r19,r28
 639 00b0 330F      		lsl r19
 640 00b2 20E0      		ldi r18,lo8(0)
 641 00b4 C901      		movw r24,r18
 642 00b6 AA27      		clr r26
 643 00b8 97FD      		sbrc r25,7
 644 00ba A095      		com r26
 645 00bc BA2F      		mov r27,r26
 646               		.loc 1 627 0
 647 00be 482B      		or r20,r24
 648 00c0 592B      		or r21,r25
 649 00c2 6A2B      		or r22,r26
 650 00c4 7B2B      		or r23,r27
 651 00c6 4093 0000 		sts CurrAddress,r20
 652 00ca 5093 0000 		sts CurrAddress+1,r21
 653 00ce 6093 0000 		sts CurrAddress+2,r22
 654 00d2 7093 0000 		sts CurrAddress+3,r23
 655 00d6 00C0      		rjmp .L95
 656               	.LVL18:
 657               	.L34:
 628:Caterina.c    **** 
 629:Caterina.c    **** 		// Send confirmation byte back to the host 
 630:Caterina.c    **** 		WriteNextResponseByte('\r');
 631:Caterina.c    **** 	}
 632:Caterina.c    **** 	else if (Command == 'p')
 658               		.loc 1 632 0
 659 00d8 8037      		cpi r24,lo8(112)
 660 00da 01F4      		brne .L35
 633:Caterina.c    **** 	{
 634:Caterina.c    **** 		// Indicate serial programmer back to the host 
 635:Caterina.c    **** 		WriteNextResponseByte('S');
 661               		.loc 1 635 0
 662 00dc 83E5      		ldi r24,lo8(83)
 663               	.LVL19:
 664 00de 00C0      		rjmp .L94
 665               	.L35:
 636:Caterina.c    **** 	}
 637:Caterina.c    **** 	else if (Command == 'S')
 666               		.loc 1 637 0
 667 00e0 8335      		cpi r24,lo8(83)
 668 00e2 01F4      		brne .L36
 669 00e4 C0E0      		ldi r28,lo8(.LC0)
 670 00e6 D0E0      		ldi r29,hi8(.LC0)
 671               	.LVL20:
 672 00e8 07E0      		ldi r16,lo8(7)
 673               	.LVL21:
 674               	.L37:
 675               	.LBB149:
 638:Caterina.c    **** 	{
 639:Caterina.c    **** 		// Write the 7-byte software identifier to the endpoint 
 640:Caterina.c    **** 		for (uint8_t CurrByte = 0; CurrByte < 7; CurrByte++)
 641:Caterina.c    **** 		  WriteNextResponseByte(SOFTWARE_IDENTIFIER[CurrByte]);
 676               		.loc 1 641 0 discriminator 2
 677 00ea 8991      		ld r24,Y+
 678 00ec 0E94 0000 		call WriteNextResponseByte
 679 00f0 0150      		subi r16,lo8(-(-1))
 640:Caterina.c    **** 		for (uint8_t CurrByte = 0; CurrByte < 7; CurrByte++)
 680               		.loc 1 640 0 discriminator 2
 681 00f2 01F4      		brne .L37
 682 00f4 00C0      		rjmp .L28
 683               	.LVL22:
 684               	.L36:
 685               	.LBE149:
 642:Caterina.c    **** 	}
 643:Caterina.c    **** 	else if (Command == 'V')
 686               		.loc 1 643 0
 687 00f6 8635      		cpi r24,lo8(86)
 688 00f8 01F4      		brne .L38
 644:Caterina.c    **** 	{
 645:Caterina.c    **** 		WriteNextResponseByte('0' + BOOTLOADER_VERSION_MAJOR);
 689               		.loc 1 645 0
 690 00fa 81E3      		ldi r24,lo8(49)
 691               	.LVL23:
 692 00fc 0E94 0000 		call WriteNextResponseByte
 646:Caterina.c    **** 		WriteNextResponseByte('0' + BOOTLOADER_VERSION_MINOR);
 693               		.loc 1 646 0
 694 0100 80E3      		ldi r24,lo8(48)
 695 0102 00C0      		rjmp .L94
 696               	.L38:
 647:Caterina.c    **** 	}
 648:Caterina.c    **** 	else if (Command == 's')
 697               		.loc 1 648 0
 698 0104 8337      		cpi r24,lo8(115)
 699 0106 01F4      		brne .L39
 649:Caterina.c    **** 	{
 650:Caterina.c    **** 		WriteNextResponseByte(AVR_SIGNATURE_3);
 700               		.loc 1 650 0
 701 0108 87E8      		ldi r24,lo8(-121)
 702 010a 0E94 0000 		call WriteNextResponseByte
 651:Caterina.c    **** 		WriteNextResponseByte(AVR_SIGNATURE_2);
 703               		.loc 1 651 0
 704 010e 85E9      		ldi r24,lo8(-107)
 705 0110 0E94 0000 		call WriteNextResponseByte
 652:Caterina.c    **** 		WriteNextResponseByte(AVR_SIGNATURE_1);
 706               		.loc 1 652 0
 707 0114 8EE1      		ldi r24,lo8(30)
 708 0116 00C0      		rjmp .L94
 709               	.L39:
 653:Caterina.c    **** 	}
 654:Caterina.c    **** 	else if (Command == 'e')
 710               		.loc 1 654 0
 711 0118 8536      		cpi r24,lo8(101)
 712 011a 01F4      		brne .L40
 713 011c E0E0      		ldi r30,lo8(0)
 714 011e F0E0      		ldi r31,hi8(0)
 715               	.LBB150:
 655:Caterina.c    **** 	{
 656:Caterina.c    **** 		// Clear the application section of flash 
 657:Caterina.c    **** 		for (uint32_t CurrFlashAddress = 0; CurrFlashAddress < BOOT_START_ADDR; CurrFlashAddress += SPM_P
 658:Caterina.c    **** 		{
 659:Caterina.c    **** 			boot_page_erase(CurrFlashAddress);
 716               		.loc 1 659 0
 717 0120 93E0      		ldi r25,lo8(3)
 660:Caterina.c    **** 			boot_spm_busy_wait();
 661:Caterina.c    **** 			boot_page_write(CurrFlashAddress);
 718               		.loc 1 661 0
 719 0122 85E0      		ldi r24,lo8(5)
 720               	.L43:
 659:Caterina.c    **** 			boot_page_erase(CurrFlashAddress);
 721               		.loc 1 659 0
 722               	/* #APP */
 723               	 ;  659 "Caterina.c" 1
 724 0124 9093 5700 		sts 87, r25
 725 0128 E895      		spm
 726               		
 727               	 ;  0 "" 2
 728               	/* #NOAPP */
 729               	.L41:
 660:Caterina.c    **** 			boot_spm_busy_wait();
 730               		.loc 1 660 0 discriminator 1
 731 012a 07B6      		in __tmp_reg__,87-32
 732 012c 00FC      		sbrc __tmp_reg__,0
 733 012e 00C0      		rjmp .L41
 734               		.loc 1 661 0
 735               	/* #APP */
 736               	 ;  661 "Caterina.c" 1
 737 0130 8093 5700 		sts 87, r24
 738 0134 E895      		spm
 739               		
 740               	 ;  0 "" 2
 741               	/* #NOAPP */
 742               	.L42:
 662:Caterina.c    **** 			boot_spm_busy_wait();
 743               		.loc 1 662 0 discriminator 1
 744 0136 07B6      		in __tmp_reg__,87-32
 745 0138 00FC      		sbrc __tmp_reg__,0
 746 013a 00C0      		rjmp .L42
 747               		.loc 1 662 0 is_stmt 0
 748 013c E058      		subi r30,lo8(-(128))
 749 013e FF4F      		sbci r31,hi8(-(128))
 657:Caterina.c    **** 		for (uint32_t CurrFlashAddress = 0; CurrFlashAddress < BOOT_START_ADDR; CurrFlashAddress += SPM_P
 750               		.loc 1 657 0 is_stmt 1
 751 0140 20E7      		ldi r18,hi8(28672)
 752 0142 E030      		cpi r30,lo8(28672)
 753 0144 F207      		cpc r31,r18
 754 0146 01F4      		brne .L43
 755 0148 00C0      		rjmp .L95
 756               	.LVL24:
 757               	.L40:
 758               	.LBE150:
 663:Caterina.c    **** 		}
 664:Caterina.c    **** 
 665:Caterina.c    **** 		// Send confirmation byte back to the host 
 666:Caterina.c    **** 		WriteNextResponseByte('\r');
 667:Caterina.c    **** 	}
 668:Caterina.c    **** 	#if !defined(NO_LOCK_BYTE_WRITE_SUPPORT)
 669:Caterina.c    **** 	else if (Command == 'l')
 670:Caterina.c    **** 	{
 671:Caterina.c    **** 		// Set the lock bits to those given by the host 
 672:Caterina.c    **** 		boot_lock_bits_set(FetchNextCommandByte());
 673:Caterina.c    **** 
 674:Caterina.c    **** 		// Send confirmation byte back to the host 
 675:Caterina.c    **** 		WriteNextResponseByte('\r');
 676:Caterina.c    **** 	}
 677:Caterina.c    **** 	#endif
 678:Caterina.c    **** 	else if (Command == 'r')
 759               		.loc 1 678 0
 760 014a 8237      		cpi r24,lo8(114)
 761 014c 01F4      		brne .L44
 762               	.LBB151:
 679:Caterina.c    **** 	{
 680:Caterina.c    **** 		WriteNextResponseByte(boot_lock_fuse_bits_get(GET_LOCK_BITS));
 763               		.loc 1 680 0
 764 014e E1E0      		ldi r30,lo8(1)
 765 0150 F0E0      		ldi r31,hi8(1)
 766 0152 00C0      		rjmp .L96
 767               	.L44:
 768               	.LBE151:
 681:Caterina.c    **** 	}
 682:Caterina.c    **** 	else if (Command == 'F')
 769               		.loc 1 682 0
 770 0154 8634      		cpi r24,lo8(70)
 771 0156 01F4      		brne .L45
 772               	.LBB152:
 683:Caterina.c    **** 	{
 684:Caterina.c    **** 		WriteNextResponseByte(boot_lock_fuse_bits_get(GET_LOW_FUSE_BITS));
 773               		.loc 1 684 0
 774 0158 E0E0      		ldi r30,lo8(0)
 775 015a F0E0      		ldi r31,hi8(0)
 776 015c 00C0      		rjmp .L96
 777               	.L45:
 778               	.LBE152:
 685:Caterina.c    **** 	}
 686:Caterina.c    **** 	else if (Command == 'N')
 779               		.loc 1 686 0
 780 015e 8E34      		cpi r24,lo8(78)
 781 0160 01F4      		brne .L46
 782               	.LBB153:
 687:Caterina.c    **** 	{
 688:Caterina.c    **** 		WriteNextResponseByte(boot_lock_fuse_bits_get(GET_HIGH_FUSE_BITS));
 783               		.loc 1 688 0
 784 0162 E3E0      		ldi r30,lo8(3)
 785 0164 F0E0      		ldi r31,hi8(3)
 786 0166 00C0      		rjmp .L96
 787               	.L46:
 788               	.LBE153:
 689:Caterina.c    **** 	}
 690:Caterina.c    **** 	else if (Command == 'Q')
 789               		.loc 1 690 0
 790 0168 8135      		cpi r24,lo8(81)
 791 016a 01F4      		brne .L47
 792               	.LBB154:
 691:Caterina.c    **** 	{
 692:Caterina.c    **** 		WriteNextResponseByte(boot_lock_fuse_bits_get(GET_EXTENDED_FUSE_BITS));
 793               		.loc 1 692 0
 794 016c E2E0      		ldi r30,lo8(2)
 795 016e F0E0      		ldi r31,hi8(2)
 796               	.L96:
 797 0170 89E0      		ldi r24,lo8(9)
 798               	/* #APP */
 799               	 ;  692 "Caterina.c" 1
 800 0172 8093 5700 		sts 87, r24
 801 0176 8491      		lpm r24, Z
 802               		
 803               	 ;  0 "" 2
 804               	.LVL25:
 805               	/* #NOAPP */
 806 0178 00C0      		rjmp .L94
 807               	.LVL26:
 808               	.L47:
 809               	.LBE154:
 693:Caterina.c    **** 	}
 694:Caterina.c    **** 	#if !defined(NO_BLOCK_SUPPORT)
 695:Caterina.c    **** 	else if (Command == 'b')
 810               		.loc 1 695 0
 811 017a 8236      		cpi r24,lo8(98)
 812 017c 01F4      		brne .L48
 696:Caterina.c    **** 	{
 697:Caterina.c    **** 		WriteNextResponseByte('Y');
 813               		.loc 1 697 0
 814 017e 89E5      		ldi r24,lo8(89)
 815 0180 0E94 0000 		call WriteNextResponseByte
 698:Caterina.c    **** 
 699:Caterina.c    **** 		// Send block size to the host 
 700:Caterina.c    **** 		WriteNextResponseByte(SPM_PAGESIZE >> 8);
 816               		.loc 1 700 0
 817 0184 80E0      		ldi r24,lo8(0)
 818 0186 0E94 0000 		call WriteNextResponseByte
 701:Caterina.c    **** 		WriteNextResponseByte(SPM_PAGESIZE & 0xFF);
 819               		.loc 1 701 0
 820 018a 80E8      		ldi r24,lo8(-128)
 821 018c 00C0      		rjmp .L94
 822               	.L48:
 702:Caterina.c    **** 	}
 703:Caterina.c    **** 	else if ((Command == 'B') || (Command == 'g'))
 823               		.loc 1 703 0
 824 018e 8234      		cpi r24,lo8(66)
 825 0190 01F0      		breq .L49
 826               		.loc 1 703 0 is_stmt 0 discriminator 1
 827 0192 8736      		cpi r24,lo8(103)
 828 0194 01F0      		breq .+2
 829 0196 00C0      		rjmp .L50
 830               	.L49:
 704:Caterina.c    **** 	{
 705:Caterina.c    **** 		// Keep resetting the timeout counter if we're receiving self-programming instructions
 706:Caterina.c    **** 		Timeout = 0;
 831               		.loc 1 706 0 is_stmt 1
 832 0198 1092 0000 		sts Timeout+1,__zero_reg__
 833 019c 1092 0000 		sts Timeout,__zero_reg__
 834               	.LVL27:
 835               	.LBB155:
 836               	.LBB156:
 389:Caterina.c    **** 	BlockSize  = (FetchNextCommandByte() << 8);
 837               		.loc 1 389 0
 838 01a0 0E94 0000 		call FetchNextCommandByte
 839 01a4 C82E      		mov r12,r24
 840               	.LVL28:
 390:Caterina.c    **** 	BlockSize |=  FetchNextCommandByte();
 841               		.loc 1 390 0
 842 01a6 0E94 0000 		call FetchNextCommandByte
 843               	.LVL29:
 844 01aa 082F      		mov r16,r24
 845               	.LVL30:
 392:Caterina.c    **** 	MemoryType =  FetchNextCommandByte();
 846               		.loc 1 392 0
 847 01ac 0E94 0000 		call FetchNextCommandByte
 848               	.LVL31:
 849 01b0 D82F      		mov r29,r24
 850               	.LVL32:
 394:Caterina.c    **** 	if ((MemoryType != 'E') && (MemoryType != 'F'))
 851               		.loc 1 394 0
 852 01b2 8554      		subi r24,lo8(-(-69))
 853               	.LVL33:
 854 01b4 8230      		cpi r24,lo8(2)
 855 01b6 00F0      		brlo .+2
 856 01b8 00C0      		rjmp .L97
 857               	.L51:
 389:Caterina.c    **** 	BlockSize  = (FetchNextCommandByte() << 8);
 858               		.loc 1 389 0
 859 01ba 3C2D      		mov r19,r12
 860 01bc 20E0      		ldi r18,lo8(0)
 390:Caterina.c    **** 	BlockSize |=  FetchNextCommandByte();
 861               		.loc 1 390 0
 862 01be 10E0      		ldi r17,lo8(0)
 863 01c0 022B      		or r16,r18
 864 01c2 132B      		or r17,r19
 865               	.LVL34:
 404:Caterina.c    **** 	TIMSK1 = 0;
 866               		.loc 1 404 0
 867 01c4 1092 6F00 		sts 111,__zero_reg__
 407:Caterina.c    **** 	if (Command == 'g')
 868               		.loc 1 407 0
 869 01c8 C736      		cpi r28,lo8(103)
 870 01ca 01F0      		breq .+2
 871 01cc 00C0      		rjmp .L52
 410:Caterina.c    **** 		boot_rww_enable();
 872               		.loc 1 410 0
 873 01ce 81E1      		ldi r24,lo8(17)
 874               	/* #APP */
 875               	 ;  410 "Caterina.c" 1
 876 01d0 8093 5700 		sts 87, r24
 877 01d4 E895      		spm
 878               		
 879               	 ;  0 "" 2
 386:Caterina.c    **** 	bool     HighByte = false;
 880               		.loc 1 386 0
 881               	/* #NOAPP */
 882 01d6 C0E0      		ldi r28,lo8(0)
 427:Caterina.c    **** 				HighByte = !HighByte;
 883               		.loc 1 427 0
 884 01d8 BB24      		clr r11
 885 01da B394      		inc r11
 886 01dc 00C0      		rjmp .L53
 887               	.LVL35:
 888               	.L57:
 889 01de C090 0000 		lds r12,CurrAddress
 890 01e2 D090 0000 		lds r13,CurrAddress+1
 891 01e6 E090 0000 		lds r14,CurrAddress+2
 892 01ea F090 0000 		lds r15,CurrAddress+3
 414:Caterina.c    **** 			if (MemoryType == 'F')
 893               		.loc 1 414 0
 894 01ee D634      		cpi r29,lo8(70)
 895 01f0 01F4      		brne .L54
 896               	.LVL36:
 897               	.LBB157:
 420:Caterina.c    **** 				WriteNextResponseByte(pgm_read_byte(CurrAddress | HighByte));
 898               		.loc 1 420 0
 899 01f2 EC2F      		mov r30,r28
 900 01f4 F0E0      		ldi r31,lo8(0)
 901 01f6 EC29      		or r30,r12
 902 01f8 FD29      		or r31,r13
 903               	/* #APP */
 904               	 ;  420 "Caterina.c" 1
 905 01fa 8491      		lpm r24, Z
 906               		
 907               	 ;  0 "" 2
 908               	.LVL37:
 909               	/* #NOAPP */
 910               	.LBE157:
 911 01fc 0E94 0000 		call WriteNextResponseByte
 912               	.LVL38:
 424:Caterina.c    **** 				if (HighByte)
 913               		.loc 1 424 0
 914 0200 CC23      		tst r28
 915 0202 01F0      		breq .L55
 425:Caterina.c    **** 				  CurrAddress += 2;
 916               		.loc 1 425 0
 917 0204 D701      		movw r26,r14
 918 0206 C601      		movw r24,r12
 919 0208 0296      		adiw r24,2
 920 020a A11D      		adc r26,__zero_reg__
 921 020c B11D      		adc r27,__zero_reg__
 922 020e 8093 0000 		sts CurrAddress,r24
 923 0212 9093 0000 		sts CurrAddress+1,r25
 924 0216 A093 0000 		sts CurrAddress+2,r26
 925 021a B093 0000 		sts CurrAddress+3,r27
 926               	.L55:
 427:Caterina.c    **** 				HighByte = !HighByte;
 927               		.loc 1 427 0
 928 021e CB25      		eor r28,r11
 929               	.LVL39:
 930 0220 00C0      		rjmp .L56
 931               	.L54:
 432:Caterina.c    **** 				WriteNextResponseByte(eeprom_read_byte((uint8_t*)(intptr_t)(CurrAddress >> 1)));
 932               		.loc 1 432 0
 933 0222 D701      		movw r26,r14
 934 0224 C601      		movw r24,r12
 935 0226 B695      		lsr r27
 936 0228 A795      		ror r26
 937 022a 9795      		ror r25
 938 022c 8795      		ror r24
 939 022e 0E94 0000 		call __eerd_byte_m32u4
 940 0232 0E94 0000 		call WriteNextResponseByte
 435:Caterina.c    **** 				CurrAddress += 2;
 941               		.loc 1 435 0
 942 0236 D701      		movw r26,r14
 943 0238 C601      		movw r24,r12
 944 023a 0296      		adiw r24,2
 945 023c A11D      		adc r26,__zero_reg__
 946 023e B11D      		adc r27,__zero_reg__
 947 0240 8093 0000 		sts CurrAddress,r24
 948 0244 9093 0000 		sts CurrAddress+1,r25
 949 0248 A093 0000 		sts CurrAddress+2,r26
 950 024c B093 0000 		sts CurrAddress+3,r27
 951               	.L56:
 952 0250 0150      		subi r16,lo8(-(-1))
 953 0252 1040      		sbci r17,hi8(-(-1))
 954               	.LVL40:
 955               	.L53:
 412:Caterina.c    **** 		while (BlockSize--)
 956               		.loc 1 412 0
 957 0254 0115      		cp r16,__zero_reg__
 958 0256 1105      		cpc r17,__zero_reg__
 959 0258 01F0      		breq .+2
 960 025a 00C0      		rjmp .L57
 961 025c 00C0      		rjmp .L58
 962               	.LVL41:
 963               	.L52:
 964               	.LBB158:
 441:Caterina.c    **** 		uint32_t PageStartAddress = CurrAddress;
 965               		.loc 1 441 0
 966 025e 4090 0000 		lds r4,CurrAddress
 967 0262 5090 0000 		lds r5,CurrAddress+1
 968 0266 6090 0000 		lds r6,CurrAddress+2
 969 026a 7090 0000 		lds r7,CurrAddress+3
 443:Caterina.c    **** 		if (MemoryType == 'F')
 970               		.loc 1 443 0
 971 026e D634      		cpi r29,lo8(70)
 972 0270 01F0      		breq .+2
 973 0272 00C0      		rjmp .L80
 445:Caterina.c    **** 			boot_page_erase(PageStartAddress);
 974               		.loc 1 445 0
 975 0274 83E0      		ldi r24,lo8(3)
 976 0276 F201      		movw r30,r4
 977               	/* #APP */
 978               	 ;  445 "Caterina.c" 1
 979 0278 8093 5700 		sts 87, r24
 980 027c E895      		spm
 981               		
 982               	 ;  0 "" 2
 983               	/* #NOAPP */
 984               	.L60:
 446:Caterina.c    **** 			boot_spm_busy_wait();
 985               		.loc 1 446 0
 986 027e 07B6      		in __tmp_reg__,87-32
 987 0280 00FC      		sbrc __tmp_reg__,0
 988 0282 00C0      		rjmp .L60
 989 0284 00C0      		rjmp .L80
 990               	.LVL42:
 991               	.L65:
 451:Caterina.c    **** 			if (MemoryType == 'F')
 992               		.loc 1 451 0
 993 0286 D634      		cpi r29,lo8(70)
 994 0288 01F4      		brne .L61
 454:Caterina.c    **** 				if (HighByte)
 995               		.loc 1 454 0
 996 028a CC23      		tst r28
 997 028c 01F0      		breq .L62
 457:Caterina.c    **** 					boot_page_fill(CurrAddress, ((FetchNextCommandByte() << 8) | LowByte));
 998               		.loc 1 457 0
 999 028e C090 0000 		lds r12,CurrAddress
 1000 0292 D090 0000 		lds r13,CurrAddress+1
 1001 0296 E090 0000 		lds r14,CurrAddress+2
 1002 029a F090 0000 		lds r15,CurrAddress+3
 1003 029e 0E94 0000 		call FetchNextCommandByte
 1004 02a2 982E      		mov r9,r24
 1005 02a4 8824      		clr r8
 1006 02a6 8B2D      		mov r24,r11
 1007 02a8 90E0      		ldi r25,lo8(0)
 1008 02aa 8829      		or r24,r8
 1009 02ac 9929      		or r25,r9
 1010 02ae F601      		movw r30,r12
 1011               	/* #APP */
 1012               	 ;  457 "Caterina.c" 1
 1013 02b0 0C01      		movw  r0, r24
 1014 02b2 A092 5700 		sts 87, r10
 1015 02b6 E895      		spm
 1016 02b8 1124      		clr  r1
 1017               		
 1018               	 ;  0 "" 2
 460:Caterina.c    **** 					CurrAddress += 2;
 1019               		.loc 1 460 0
 1020               	/* #NOAPP */
 1021 02ba D701      		movw r26,r14
 1022 02bc C601      		movw r24,r12
 1023 02be 0296      		adiw r24,2
 1024 02c0 A11D      		adc r26,__zero_reg__
 1025 02c2 B11D      		adc r27,__zero_reg__
 1026 02c4 8093 0000 		sts CurrAddress,r24
 1027 02c8 9093 0000 		sts CurrAddress+1,r25
 1028 02cc A093 0000 		sts CurrAddress+2,r26
 1029 02d0 B093 0000 		sts CurrAddress+3,r27
 1030 02d4 00C0      		rjmp .L63
 1031               	.L62:
 464:Caterina.c    **** 					LowByte = FetchNextCommandByte();
 1032               		.loc 1 464 0
 1033 02d6 0E94 0000 		call FetchNextCommandByte
 1034 02da B82E      		mov r11,r24
 1035               	.LVL43:
 1036               	.L63:
 467:Caterina.c    **** 				HighByte = !HighByte;
 1037               		.loc 1 467 0
 1038 02dc CA25      		eor r28,r10
 1039 02de 00C0      		rjmp .L64
 1040               	.L61:
 472:Caterina.c    **** 				eeprom_write_byte((uint8_t*)((intptr_t)(CurrAddress >> 1)), FetchNextCommandByte());
 1041               		.loc 1 472 0
 1042 02e0 C090 0000 		lds r12,CurrAddress
 1043 02e4 D090 0000 		lds r13,CurrAddress+1
 1044 02e8 E090 0000 		lds r14,CurrAddress+2
 1045 02ec F090 0000 		lds r15,CurrAddress+3
 1046 02f0 F694      		lsr r15
 1047 02f2 E794      		ror r14
 1048 02f4 D794      		ror r13
 1049 02f6 C794      		ror r12
 1050 02f8 0E94 0000 		call FetchNextCommandByte
 1051 02fc 682F      		mov r22,r24
 1052 02fe C601      		movw r24,r12
 1053 0300 0E94 0000 		call __eewr_byte_m32u4
 475:Caterina.c    **** 				CurrAddress += 2;
 1054               		.loc 1 475 0
 1055 0304 8091 0000 		lds r24,CurrAddress
 1056 0308 9091 0000 		lds r25,CurrAddress+1
 1057 030c A091 0000 		lds r26,CurrAddress+2
 1058 0310 B091 0000 		lds r27,CurrAddress+3
 1059 0314 0296      		adiw r24,2
 1060 0316 A11D      		adc r26,__zero_reg__
 1061 0318 B11D      		adc r27,__zero_reg__
 1062 031a 8093 0000 		sts CurrAddress,r24
 1063 031e 9093 0000 		sts CurrAddress+1,r25
 1064 0322 A093 0000 		sts CurrAddress+2,r26
 1065 0326 B093 0000 		sts CurrAddress+3,r27
 1066               	.L64:
 1067 032a 0150      		subi r16,lo8(-(-1))
 1068 032c 1040      		sbci r17,hi8(-(-1))
 1069 032e 00C0      		rjmp .L92
 1070               	.LVL44:
 1071               	.L80:
 443:Caterina.c    **** 		if (MemoryType == 'F')
 1072               		.loc 1 443 0
 1073 0330 BB24      		clr r11
 1074 0332 C0E0      		ldi r28,lo8(0)
 467:Caterina.c    **** 				HighByte = !HighByte;
 1075               		.loc 1 467 0
 1076 0334 AA24      		clr r10
 1077 0336 A394      		inc r10
 1078               	.LVL45:
 1079               	.L92:
 449:Caterina.c    **** 		while (BlockSize--)
 1080               		.loc 1 449 0
 1081 0338 0115      		cp r16,__zero_reg__
 1082 033a 1105      		cpc r17,__zero_reg__
 1083 033c 01F0      		breq .+2
 1084 033e 00C0      		rjmp .L65
 480:Caterina.c    **** 		if (MemoryType == 'F')
 1085               		.loc 1 480 0
 1086 0340 D634      		cpi r29,lo8(70)
 1087 0342 01F4      		brne .L66
 483:Caterina.c    **** 			boot_page_write(PageStartAddress);
 1088               		.loc 1 483 0
 1089 0344 85E0      		ldi r24,lo8(5)
 1090 0346 F201      		movw r30,r4
 1091               	/* #APP */
 1092               	 ;  483 "Caterina.c" 1
 1093 0348 8093 5700 		sts 87, r24
 1094 034c E895      		spm
 1095               		
 1096               	 ;  0 "" 2
 1097               	/* #NOAPP */
 1098               	.L67:
 486:Caterina.c    **** 			boot_spm_busy_wait();
 1099               		.loc 1 486 0
 1100 034e 07B6      		in __tmp_reg__,87-32
 1101 0350 00FC      		sbrc __tmp_reg__,0
 1102 0352 00C0      		rjmp .L67
 1103               	.L66:
 490:Caterina.c    **** 		WriteNextResponseByte('\r');
 1104               		.loc 1 490 0
 1105 0354 8DE0      		ldi r24,lo8(13)
 1106 0356 0E94 0000 		call WriteNextResponseByte
 1107               	.LVL46:
 1108               	.L58:
 1109               	.LBE158:
 494:Caterina.c    **** 	TIMSK1 = (1 << OCIE1A);
 1110               		.loc 1 494 0
 1111 035a 82E0      		ldi r24,lo8(2)
 1112 035c 8093 6F00 		sts 111,r24
 1113 0360 00C0      		rjmp .L28
 1114               	.LVL47:
 1115               	.L50:
 1116               	.LBE156:
 1117               	.LBE155:
 707:Caterina.c    **** 		// Delegate the block write/read to a separate function for clarity 
 708:Caterina.c    **** 		ReadWriteMemoryBlock(Command);
 709:Caterina.c    **** 	}
 710:Caterina.c    **** 	#endif
 711:Caterina.c    **** 	#if !defined(NO_FLASH_BYTE_SUPPORT)
 712:Caterina.c    **** 	else if (Command == 'C')
 1118               		.loc 1 712 0
 1119 0362 8334      		cpi r24,lo8(67)
 1120 0364 01F4      		brne .L68
 713:Caterina.c    **** 	{
 714:Caterina.c    **** 		// Write the high byte to the current flash page
 715:Caterina.c    **** 		boot_page_fill(CurrAddress, FetchNextCommandByte());
 1121               		.loc 1 715 0
 1122 0366 C091 0000 		lds r28,CurrAddress
 1123 036a D091 0000 		lds r29,CurrAddress+1
 1124 036e 0E94 0000 		call FetchNextCommandByte
 1125               	.LVL48:
 1126 0372 90E0      		ldi r25,lo8(0)
 1127 0374 21E0      		ldi r18,lo8(1)
 1128 0376 FE01      		movw r30,r28
 1129               	/* #APP */
 1130               	 ;  715 "Caterina.c" 1
 1131 0378 0C01      		movw  r0, r24
 1132 037a 2093 5700 		sts 87, r18
 1133 037e E895      		spm
 1134 0380 1124      		clr  r1
 1135               		
 1136               	 ;  0 "" 2
 1137               	/* #NOAPP */
 1138 0382 00C0      		rjmp .L95
 1139               	.LVL49:
 1140               	.L68:
 716:Caterina.c    **** 
 717:Caterina.c    **** 		// Send confirmation byte back to the host 
 718:Caterina.c    **** 		WriteNextResponseByte('\r');
 719:Caterina.c    **** 	}
 720:Caterina.c    **** 	else if (Command == 'c')
 1141               		.loc 1 720 0
 1142 0384 8336      		cpi r24,lo8(99)
 1143 0386 01F4      		brne .L69
 721:Caterina.c    **** 	{
 722:Caterina.c    **** 		// Write the low byte to the current flash page 
 723:Caterina.c    **** 		boot_page_fill(CurrAddress | 0x01, FetchNextCommandByte());
 1144               		.loc 1 723 0
 1145 0388 C090 0000 		lds r12,CurrAddress
 1146 038c D090 0000 		lds r13,CurrAddress+1
 1147 0390 E090 0000 		lds r14,CurrAddress+2
 1148 0394 F090 0000 		lds r15,CurrAddress+3
 1149 0398 0E94 0000 		call FetchNextCommandByte
 1150               	.LVL50:
 1151 039c F601      		movw r30,r12
 1152 039e E160      		ori r30,lo8(1)
 1153 03a0 90E0      		ldi r25,lo8(0)
 1154 03a2 21E0      		ldi r18,lo8(1)
 1155               	/* #APP */
 1156               	 ;  723 "Caterina.c" 1
 1157 03a4 0C01      		movw  r0, r24
 1158 03a6 2093 5700 		sts 87, r18
 1159 03aa E895      		spm
 1160 03ac 1124      		clr  r1
 1161               		
 1162               	 ;  0 "" 2
 724:Caterina.c    **** 
 725:Caterina.c    **** 		// Increment the address 
 726:Caterina.c    **** 		CurrAddress += 2;
 1163               		.loc 1 726 0
 1164               	/* #NOAPP */
 1165 03ae D701      		movw r26,r14
 1166 03b0 C601      		movw r24,r12
 1167 03b2 00C0      		rjmp .L98
 1168               	.L69:
 727:Caterina.c    **** 
 728:Caterina.c    **** 		// Send confirmation byte back to the host 
 729:Caterina.c    **** 		WriteNextResponseByte('\r');
 730:Caterina.c    **** 	}
 731:Caterina.c    **** 	else if (Command == 'm')
 1169               		.loc 1 731 0
 1170 03b4 8D36      		cpi r24,lo8(109)
 1171 03b6 01F4      		brne .L70
 732:Caterina.c    **** 	{
 733:Caterina.c    **** 		// Commit the flash page to memory
 734:Caterina.c    **** 		boot_page_write(CurrAddress);
 1172               		.loc 1 734 0
 1173 03b8 E091 0000 		lds r30,CurrAddress
 1174 03bc F091 0000 		lds r31,CurrAddress+1
 1175 03c0 85E0      		ldi r24,lo8(5)
 1176               	/* #APP */
 1177               	 ;  734 "Caterina.c" 1
 1178 03c2 8093 5700 		sts 87, r24
 1179 03c6 E895      		spm
 1180               		
 1181               	 ;  0 "" 2
 1182               	/* #NOAPP */
 1183               	.L71:
 735:Caterina.c    **** 
 736:Caterina.c    **** 		// Wait until write operation has completed 
 737:Caterina.c    **** 		boot_spm_busy_wait();
 1184               		.loc 1 737 0 discriminator 1
 1185 03c8 07B6      		in __tmp_reg__,87-32
 1186 03ca 00FC      		sbrc __tmp_reg__,0
 1187 03cc 00C0      		rjmp .L71
 1188 03ce 00C0      		rjmp .L95
 1189               	.L70:
 738:Caterina.c    **** 
 739:Caterina.c    **** 		// Send confirmation byte back to the host 
 740:Caterina.c    **** 		WriteNextResponseByte('\r');
 741:Caterina.c    **** 	}
 742:Caterina.c    **** 	else if (Command == 'R')
 1190               		.loc 1 742 0
 1191 03d0 8235      		cpi r24,lo8(82)
 1192 03d2 01F4      		brne .L72
 1193               	.LBB159:
 1194               	.LBB160:
 743:Caterina.c    **** 	{
 744:Caterina.c    **** 		#if (FLASHEND > 0xFFFF)
 745:Caterina.c    **** 		uint16_t ProgramWord = pgm_read_word_far(CurrAddress);
 746:Caterina.c    **** 		#else
 747:Caterina.c    **** 		uint16_t ProgramWord = pgm_read_word(CurrAddress);
 1195               		.loc 1 747 0
 1196 03d4 E091 0000 		lds r30,CurrAddress
 1197 03d8 F091 0000 		lds r31,CurrAddress+1
 1198               	.LVL51:
 1199               	/* #APP */
 1200               	 ;  747 "Caterina.c" 1
 1201 03dc C591      		lpm r28, Z+
 1202 03de D491      		lpm r29, Z
 1203               		
 1204               	 ;  0 "" 2
 1205               	.LVL52:
 1206               	/* #NOAPP */
 1207               	.LBE160:
 748:Caterina.c    **** 		#endif
 749:Caterina.c    **** 
 750:Caterina.c    **** 		WriteNextResponseByte(ProgramWord >> 8);
 1208               		.loc 1 750 0
 1209 03e0 8D2F      		mov r24,r29
 1210               	.LVL53:
 1211 03e2 0E94 0000 		call WriteNextResponseByte
 751:Caterina.c    **** 		WriteNextResponseByte(ProgramWord & 0xFF);
 1212               		.loc 1 751 0
 1213 03e6 8C2F      		mov r24,r28
 1214 03e8 00C0      		rjmp .L94
 1215               	.LVL54:
 1216               	.L72:
 1217               	.LBE159:
 752:Caterina.c    **** 	}
 753:Caterina.c    **** 	#endif
 754:Caterina.c    **** 	#if !defined(NO_EEPROM_BYTE_SUPPORT)
 755:Caterina.c    **** 	else if (Command == 'D')
 1218               		.loc 1 755 0
 1219 03ea 8434      		cpi r24,lo8(68)
 1220 03ec 01F4      		brne .L73
 756:Caterina.c    **** 	{
 757:Caterina.c    **** 		// Read the byte from the endpoint and write it to the EEPROM 
 758:Caterina.c    **** 		eeprom_write_byte((uint8_t*)((intptr_t)(CurrAddress >> 1)), FetchNextCommandByte());
 1221               		.loc 1 758 0
 1222 03ee C090 0000 		lds r12,CurrAddress
 1223 03f2 D090 0000 		lds r13,CurrAddress+1
 1224 03f6 E090 0000 		lds r14,CurrAddress+2
 1225 03fa F090 0000 		lds r15,CurrAddress+3
 1226 03fe F694      		lsr r15
 1227 0400 E794      		ror r14
 1228 0402 D794      		ror r13
 1229 0404 C794      		ror r12
 1230 0406 0E94 0000 		call FetchNextCommandByte
 1231               	.LVL55:
 1232 040a 682F      		mov r22,r24
 1233 040c C601      		movw r24,r12
 1234 040e 0E94 0000 		call __eewr_byte_m32u4
 759:Caterina.c    **** 
 760:Caterina.c    **** 		// Increment the address after use
 761:Caterina.c    **** 		CurrAddress += 2;
 1235               		.loc 1 761 0
 1236 0412 8091 0000 		lds r24,CurrAddress
 1237 0416 9091 0000 		lds r25,CurrAddress+1
 1238 041a A091 0000 		lds r26,CurrAddress+2
 1239 041e B091 0000 		lds r27,CurrAddress+3
 1240               	.L98:
 1241 0422 0296      		adiw r24,2
 1242 0424 A11D      		adc r26,__zero_reg__
 1243 0426 B11D      		adc r27,__zero_reg__
 1244 0428 8093 0000 		sts CurrAddress,r24
 1245 042c 9093 0000 		sts CurrAddress+1,r25
 1246 0430 A093 0000 		sts CurrAddress+2,r26
 1247 0434 B093 0000 		sts CurrAddress+3,r27
 1248 0438 00C0      		rjmp .L95
 1249               	.L73:
 762:Caterina.c    **** 
 763:Caterina.c    **** 		// Send confirmation byte back to the host 
 764:Caterina.c    **** 		WriteNextResponseByte('\r');
 765:Caterina.c    **** 	}
 766:Caterina.c    **** 	else if (Command == 'd')
 1250               		.loc 1 766 0
 1251 043a 8436      		cpi r24,lo8(100)
 1252 043c 01F4      		brne .L74
 767:Caterina.c    **** 	{
 768:Caterina.c    **** 		// Read the EEPROM byte and write it to the endpoint 
 769:Caterina.c    **** 		WriteNextResponseByte(eeprom_read_byte((uint8_t*)((intptr_t)(CurrAddress >> 1))));
 1253               		.loc 1 769 0
 1254 043e C090 0000 		lds r12,CurrAddress
 1255 0442 D090 0000 		lds r13,CurrAddress+1
 1256 0446 E090 0000 		lds r14,CurrAddress+2
 1257 044a F090 0000 		lds r15,CurrAddress+3
 1258 044e D701      		movw r26,r14
 1259 0450 C601      		movw r24,r12
 1260 0452 B695      		lsr r27
 1261 0454 A795      		ror r26
 1262 0456 9795      		ror r25
 1263 0458 8795      		ror r24
 1264 045a 0E94 0000 		call __eerd_byte_m32u4
 1265 045e 0E94 0000 		call WriteNextResponseByte
 770:Caterina.c    **** 
 771:Caterina.c    **** 		// Increment the address after use 
 772:Caterina.c    **** 		CurrAddress += 2;
 1266               		.loc 1 772 0
 1267 0462 D701      		movw r26,r14
 1268 0464 C601      		movw r24,r12
 1269 0466 0296      		adiw r24,2
 1270 0468 A11D      		adc r26,__zero_reg__
 1271 046a B11D      		adc r27,__zero_reg__
 1272 046c 8093 0000 		sts CurrAddress,r24
 1273 0470 9093 0000 		sts CurrAddress+1,r25
 1274 0474 A093 0000 		sts CurrAddress+2,r26
 1275 0478 B093 0000 		sts CurrAddress+3,r27
 1276 047c 00C0      		rjmp .L28
 1277               	.L74:
 773:Caterina.c    **** 	}
 774:Caterina.c    **** 	#endif
 775:Caterina.c    **** 	else if (Command != 27)
 1278               		.loc 1 775 0
 1279 047e 8B31      		cpi r24,lo8(27)
 1280 0480 01F0      		breq .L28
 1281               	.L97:
 776:Caterina.c    **** 	{
 777:Caterina.c    **** 		// Unknown (non-sync) command, return fail code 
 778:Caterina.c    **** 		WriteNextResponseByte('?');
 1282               		.loc 1 778 0
 1283 0482 8FE3      		ldi r24,lo8(63)
 1284               	.LVL56:
 1285               	.L94:
 1286 0484 0E94 0000 		call WriteNextResponseByte
 1287               	.L28:
 1288               	.LVL57:
 1289               	.LBB161:
 1290               	.LBB162:
 330:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = EndpointNumber;
 1291               		.loc 2 330 0
 1292 0488 83E0      		ldi r24,lo8(3)
 1293 048a 8093 E900 		sts 233,r24
 1294               	.LBE162:
 1295               	.LBE161:
 1296               	.LBB163:
 1297               	.LBB164:
 420:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 1298               		.loc 2 420 0
 1299 048e 9091 E800 		lds r25,232
 1300               	.LVL58:
 1301               	.LBE164:
 1302               	.LBE163:
 1303               	.LBB165:
 1304               	.LBB166:
 516:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 1305               		.loc 2 516 0
 1306 0492 8091 E800 		lds r24,232
 1307 0496 8E77      		andi r24,lo8(126)
 1308 0498 8093 E800 		sts 232,r24
 1309               	.LBE166:
 1310               	.LBE165:
 779:Caterina.c    **** 	}
 780:Caterina.c    **** 	
 781:Caterina.c    **** 
 782:Caterina.c    **** 	/* Select the IN endpoint */
 783:Caterina.c    **** 	Endpoint_SelectEndpoint(CDC_TX_EPNUM);
 784:Caterina.c    **** 
 785:Caterina.c    **** 	/* Remember if the endpoint is completely full before clearing it */
 786:Caterina.c    **** 	bool IsEndpointFull = !(Endpoint_IsReadWriteAllowed());
 787:Caterina.c    **** 
 788:Caterina.c    **** 	/* Send the endpoint data to the host */
 789:Caterina.c    **** 	Endpoint_ClearIN();
 790:Caterina.c    **** 
 791:Caterina.c    **** 	/* If a full endpoint's worth of data was sent, we need to send an empty packet afterwards to sign
 792:Caterina.c    **** 	if (IsEndpointFull)
 1311               		.loc 1 792 0
 1312 049c 95FF      		sbrs r25,5
 1313 049e 00C0      		rjmp .L91
 1314 04a0 00C0      		rjmp .L93
 1315               	.L77:
 793:Caterina.c    **** 	{
 794:Caterina.c    **** 		while (!(Endpoint_IsINReady()))
 795:Caterina.c    **** 		{
 796:Caterina.c    **** 			if (USB_DeviceState == DEVICE_STATE_Unattached)
 1316               		.loc 1 796 0
 1317 04a2 8EB3      		in r24,62-32
 1318 04a4 8823      		tst r24
 1319 04a6 01F0      		breq .L23
 1320               	.L91:
 1321               	.LBB167:
 1322               	.LBB168:
 467:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 1323               		.loc 2 467 0 discriminator 1
 1324 04a8 8091 E800 		lds r24,232
 1325               	.LBE168:
 1326               	.LBE167:
 794:Caterina.c    **** 		while (!(Endpoint_IsINReady()))
 1327               		.loc 1 794 0 discriminator 1
 1328 04ac 80FF      		sbrs r24,0
 1329 04ae 00C0      		rjmp .L77
 1330               	.LBB169:
 1331               	.LBB170:
 516:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 1332               		.loc 2 516 0
 1333 04b0 8091 E800 		lds r24,232
 1334 04b4 8E77      		andi r24,lo8(126)
 1335 04b6 8093 E800 		sts 232,r24
 1336 04ba 00C0      		rjmp .L93
 1337               	.L79:
 1338               	.LBE170:
 1339               	.LBE169:
 797:Caterina.c    **** 			  return;
 798:Caterina.c    **** 		}
 799:Caterina.c    **** 
 800:Caterina.c    **** 		Endpoint_ClearIN();
 801:Caterina.c    **** 	}
 802:Caterina.c    **** 
 803:Caterina.c    **** 	/* Wait until the data has been sent to the host */
 804:Caterina.c    **** 	while (!(Endpoint_IsINReady()))
 805:Caterina.c    **** 	{
 806:Caterina.c    **** 		if (USB_DeviceState == DEVICE_STATE_Unattached)
 1340               		.loc 1 806 0
 1341 04bc 8EB3      		in r24,62-32
 1342 04be 8823      		tst r24
 1343 04c0 01F0      		breq .L23
 1344               	.L93:
 1345               	.LBB171:
 1346               	.LBB172:
 467:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 1347               		.loc 2 467 0 discriminator 1
 1348 04c2 8091 E800 		lds r24,232
 1349               	.LBE172:
 1350               	.LBE171:
 804:Caterina.c    **** 	while (!(Endpoint_IsINReady()))
 1351               		.loc 1 804 0 discriminator 1
 1352 04c6 80FF      		sbrs r24,0
 1353 04c8 00C0      		rjmp .L79
 1354               	.LVL59:
 1355               	.LBB173:
 1356               	.LBB174:
 330:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = EndpointNumber;
 1357               		.loc 2 330 0
 1358 04ca 84E0      		ldi r24,lo8(4)
 1359 04cc 8093 E900 		sts 233,r24
 1360               	.LBE174:
 1361               	.LBE173:
 1362               	.LBB175:
 1363               	.LBB176:
 531:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 1364               		.loc 2 531 0
 1365 04d0 8091 E800 		lds r24,232
 1366 04d4 8B77      		andi r24,lo8(123)
 1367 04d6 8093 E800 		sts 232,r24
 1368               	.LVL60:
 1369               	.L23:
 1370               	/* epilogue start */
 1371               	.LBE176:
 1372               	.LBE175:
 807:Caterina.c    **** 		  return;
 808:Caterina.c    **** 	}
 809:Caterina.c    **** 
 810:Caterina.c    **** 	/* Select the OUT endpoint */
 811:Caterina.c    **** 	Endpoint_SelectEndpoint(CDC_RX_EPNUM);
 812:Caterina.c    **** 
 813:Caterina.c    **** 	/* Acknowledge the command from the host */
 814:Caterina.c    **** 	Endpoint_ClearOUT();
 815:Caterina.c    **** }
 1373               		.loc 1 815 0
 1374 04da DF91      		pop r29
 1375 04dc CF91      		pop r28
 1376 04de 1F91      		pop r17
 1377 04e0 0F91      		pop r16
 1378 04e2 FF90      		pop r15
 1379 04e4 EF90      		pop r14
 1380 04e6 DF90      		pop r13
 1381 04e8 CF90      		pop r12
 1382 04ea BF90      		pop r11
 1383 04ec AF90      		pop r10
 1384 04ee 9F90      		pop r9
 1385 04f0 8F90      		pop r8
 1386 04f2 7F90      		pop r7
 1387 04f4 6F90      		pop r6
 1388 04f6 5F90      		pop r5
 1389 04f8 4F90      		pop r4
 1390 04fa 0895      		ret
 1391               		.cfi_endproc
 1392               	.LFE103:
 1394               		.section	.text.startup.main,"ax",@progbits
 1395               	.global	main
 1397               	main:
 1398               	.LFB96:
 138:Caterina.c    **** {
 1399               		.loc 1 138 0
 1400               		.cfi_startproc
 1401 0000 CF93      		push r28
 1402               	.LCFI23:
 1403               		.cfi_def_cfa_offset 3
 1404               		.cfi_offset 28, -2
 1405               	/* prologue: function */
 1406               	/* frame size = 0 */
 1407               	/* stack size = 1 */
 1408               	.L__stack_usage = 1
 140:Caterina.c    **** 	uint8_t bootKeyPtrVal = *bootKeyPtr;
 1409               		.loc 1 140 0
 1410 0002 2091 0008 		lds r18,2048
 1411               	.LVL61:
 141:Caterina.c    **** 	*bootKeyPtr = 0;
 1412               		.loc 1 141 0
 1413 0006 1092 0008 		sts 2048,__zero_reg__
 144:Caterina.c    **** 	uint8_t  mcusr_state = MCUSR;		// store the initial state of the Status register
 1414               		.loc 1 144 0
 1415 000a 44B7      		in r20,84-32
 1416               	.LVL62:
 145:Caterina.c    **** 	MCUSR = 0;							// clear all reset flags	
 1417               		.loc 1 145 0
 1418 000c 14BE      		out 84-32,__zero_reg__
 157:Caterina.c    **** 	wdt_disable();
 1419               		.loc 1 157 0
 1420 000e 88E1      		ldi r24,lo8(24)
 1421               	/* #APP */
 1422               	 ;  157 "Caterina.c" 1
 1423 0010 0FB6      		in __tmp_reg__, __SREG__
 1424 0012 F894      		cli
 1425 0014 8093 6000 		sts 96, r24
 1426 0018 1092 6000 		sts 96, __zero_reg__
 1427 001c 0FBE      		out __SREG__,__tmp_reg__
 1428               		
 1429               	 ;  0 "" 2
 1430               	.LVL63:
 1431               	/* #NOAPP */
 1432               	.LBB177:
 1433               	.LBB178:
 1434               		.file 3 "c:\\program files (x86)\\atmel\\avr tools\\avr toolchain\\bin\\../lib/gcc/avr/4.6.2/../..
   1:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* Copyright (c) 2006, 2007, 2008  Eric B. Weddington
   2:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    All rights reserved.
   3:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
   4:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    Redistribution and use in source and binary forms, with or without
   5:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    modification, are permitted provided that the following conditions are met:
   6:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
   7:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    * Redistributions of source code must retain the above copyright
   8:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      notice, this list of conditions and the following disclaimer.
   9:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    * Redistributions in binary form must reproduce the above copyright
  10:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      notice, this list of conditions and the following disclaimer in
  11:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      the documentation and/or other materials provided with the
  12:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      distribution.
  13:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    * Neither the name of the copyright holders nor the names of
  14:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      contributors may be used to endorse or promote products derived
  15:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      from this software without specific prior written permission.
  16:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  17:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  18:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  19:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  20:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  21:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  22:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  23:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  24:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  25:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  26:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  27:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   POSSIBILITY OF SUCH DAMAGE. */
  28:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  29:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* $Id: power.h 2254 2011-09-26 15:06:50Z arcanum $ */
  30:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  31:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #ifndef _AVR_POWER_H_
  32:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define _AVR_POWER_H_   1
  33:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  34:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #include <avr/io.h>
  35:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #include <stdint.h>
  36:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  37:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  38:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /** \file */
  39:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /** \defgroup avr_power <avr/power.h>: Power Reduction Management
  40:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  41:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** \code #include <avr/power.h>\endcode
  42:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  43:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** Many AVRs contain a Power Reduction Register (PRR) or Registers (PRRx) that 
  44:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** allow you to reduce power consumption by disabling or enabling various on-board 
  45:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** peripherals as needed.
  46:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  47:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** There are many macros in this header file that provide an easy interface
  48:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** to enable or disable on-board peripherals to reduce power. See the table below.
  49:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  50:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** \note Not all AVR devices have a Power Reduction Register (for example
  51:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** the ATmega128). On those devices without a Power Reduction Register, these 
  52:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** macros are not available.
  53:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  54:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** \note Not all AVR devices contain the same peripherals (for example, the LCD
  55:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** interface), or they will be named differently (for example, USART and 
  56:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** USART0). Please consult your device's datasheet, or the header file, to 
  57:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** find out which macros are applicable to your device.
  58:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  59:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** */
  60:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  61:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  62:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /** \addtogroup avr_power
  63:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  64:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** \anchor avr_powermacros
  65:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** <small>
  66:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** <center>
  67:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** <table border="3">
  68:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
  69:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td width="10%"><strong>Power Macro</strong></td>
  70:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td width="15%"><strong>Description</strong></td>
  71:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td width="75%"><strong>Applicable for device</strong></td>
  72:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
  73:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  74:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
  75:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_aca_disable()</td>
  76:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable The Analog Comparator On PortA </td>
  77:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
  78:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
  79:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  80:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
  81:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_aca_enable()</td>
  82:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable The Analog Comparator On PortA </td>
  83:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
  84:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
  85:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  86:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
  87:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_acb_disable()</td>
  88:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable The Analog Comparator On PortB </td>
  89:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
  90:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
  91:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  92:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
  93:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_acb_enable()</td>
  94:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable The Analog Comparator On PortB </td>
  95:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
  96:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
  97:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  98:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
  99:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_adc_disable()</td>
 100:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Analog to Digital Converter module.</td>
 101:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 102:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 103:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 104:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 105:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_adc_enable()</td>
 106:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Analog to Digital Converter module.</td>
 107:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 108:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 109:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 110:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 111:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_adca_disable()</td>
 112:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the Analog to Digital Converter module On PortA </td>
 113:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 114:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 115:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 116:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 117:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_adca_enable()</td>
 118:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the Analog to Digital Converter module On PortA </td>
 119:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 120:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 121:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 122:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 123:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_adcb_disable()</td>
 124:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the Analog to Digital Converter module On PortB </td>
 125:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 126:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 127:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 128:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 129:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_adcb_enable()</td>
 130:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the Analog to Digital Converter module On PortB </td>
 131:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 132:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 133:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 134:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 135:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_aes_disable()</td>
 136:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the AES module </td>
 137:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
 138:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 139:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 140:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 141:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_aes_enable()</td>
 142:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the AES module </td>
 143:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
 144:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 145:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 146:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 147:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_all_disable()</td>
 148:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable all modules.</td>
 149:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega384C3, ATxmega256A3BU, ATxmega16A4U, ATxmega32A4U, ATxmega64A3U, ATxmega64A4U, ATxmeg
 150:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 151:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 152:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 153:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_all_enable()</td>
 154:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable all modules.</td>
 155:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega384C3, ATxmega256A3BU, ATxmega16A4U, ATxmega32A4U, ATxmega64A3U, ATxmega64A4U, ATxmeg
 156:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 157:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 158:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 159:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_can_disable()</td>
 160:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the CAN module </td>
 161:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega16M1, ATmega32C1, ATmega32M1, ATmega64C1, ATmega64M1</td>
 162:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 163:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 164:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 165:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_can_enable()</td>
 166:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the CAN module </td>
 167:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega16M1, ATmega32C1, ATmega32M1, ATmega64C1, ATmega64M1</td>
 168:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 169:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 170:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 171:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_cinterface_disable()</td>
 172:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the CINTERFACE module </td>
 173:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5790, ATA5790N, ATA5795</td>
 174:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 175:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 176:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 177:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_cinterface_enable()</td>
 178:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the CINTERFACE module </td>
 179:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5790, ATA5790N, ATA5795</td>
 180:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 181:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 182:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 183:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_clock_output_disable()</td>
 184:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable clock output module</td>
 185:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 186:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 187:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 188:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 189:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_clock_output_enable()</td>
 190:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable clock output module</td>
 191:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 192:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 193:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 194:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 195:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_cpld_disable()</td>
 196:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Disable CPLD module </td>
 197:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega32E5</td>
 198:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 199:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 200:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 201:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_cpld_enable()</td>
 202:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Enable CPLD module </td>
 203:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega32E5</td>
 204:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 205:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 206:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 207:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_crc_disable()</td>
 208:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable CRC module</td>
 209:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 210:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 211:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 212:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 213:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_crc_enable()</td>
 214:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable CRC module</td>
 215:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 216:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 217:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 218:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 219:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_crypto_disable()</td>
 220:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the CRYPTO module </td>
 221:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5790, ATA5790N, ATA5795</td>
 222:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 223:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 224:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 225:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_crypto_enable()</td>
 226:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the CRYPTO module </td>
 227:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5790, ATA5790N, ATA5795</td>
 228:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 229:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 230:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 231:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_ctm_disable()</td>
 232:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Disable CTM module </td>
 233:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATMXT112SL, ATMXT224, ATMXT224E, ATMXT336S, ATMXT540S, ATMXT540SREVA</td>
 234:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 235:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 236:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 237:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_ctm_enable()</td>
 238:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Enable CTM module </td>
 239:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATMXT112SL, ATMXT224, ATMXT224E, ATMXT336S, ATMXT540S, ATMXT540SREVA</td>
 240:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 241:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 242:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 243:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_daca_disable()</td>
 244:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the DAC module on PortA </td>
 245:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
 246:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 247:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 248:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 249:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_daca_enable()</td>
 250:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the DAC module on PortA </td>
 251:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
 252:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 253:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 254:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 255:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_dacb_disable()</td>
 256:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the DAC module on PortB </td>
 257:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
 258:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 259:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 260:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 261:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_dacb_enable()</td>
 262:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the DAC module on PortB </td>
 263:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
 264:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 265:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 266:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 267:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_data_fifo_disable()</td>
 268:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable data FIFO</td>
 269:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 270:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 271:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 272:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 273:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_data_fifo_enable()</td>
 274:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable data FIFO</td>
 275:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 276:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 277:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 278:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 279:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_dma_disable()</td>
 280:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the DMA module </td>
 281:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
 282:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 283:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 284:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 285:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_dma_enable()</td>
 286:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the DMA module </td>
 287:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
 288:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 289:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 290:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 291:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_ebi_disable()</td>
 292:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the EBI module </td>
 293:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
 294:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 295:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 296:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 297:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_ebi_enable()</td>
 298:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the EBI module </td>
 299:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
 300:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 301:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 302:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 303:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_evsys_disable()</td>
 304:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the EVSYS module </td>
 305:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 306:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 307:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 308:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 309:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_evsys_enable()</td>
 310:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the EVSYS module </td>
 311:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 312:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 313:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 314:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 315:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_hiresc_disable()</td>
 316:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the HIRES module on PortC </td>
 317:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 318:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 319:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 320:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 321:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_hiresc_enable()</td>
 322:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the HIRES module on PortC </td>
 323:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 324:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 325:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 326:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 327:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_hiresd_disable()</td>
 328:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the HIRES module on PortD </td>
 329:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 330:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 331:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 332:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 333:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_hiresd_enable()</td>
 334:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the HIRES module on PortD </td>
 335:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 336:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 337:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 338:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 339:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_hirese_disable()</td>
 340:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the HIRES module on PortE </td>
 341:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 342:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 343:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 344:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 345:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_hirese_enable()</td>
 346:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the HIRES module on PortE </td>
 347:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 348:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 349:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 350:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 351:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_hiresf_disable()</td>
 352:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the HIRES module on PortF </td>
 353:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 354:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 355:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 356:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 357:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_hiresf_enable()</td>
 358:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the HIRES module on PortF </td>
 359:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 360:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 361:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 362:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 363:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_hsspi_disable()</td>
 364:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the HSPPI module </td>
 365:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90SCR100</td>
 366:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 367:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 368:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 369:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_hsspi_enable()</td>
 370:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the HSPPI module </td>
 371:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90SCR100</td>
 372:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 373:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 374:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 375:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_id_scan_disable()</td>
 376:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable ID Scan</td>
 377:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 378:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 379:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 380:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 381:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_id_scan_enable()</td>
 382:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable ID Scan</td>
 383:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 384:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 385:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 386:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 387:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_irdriver_disable()</td>
 388:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the IRDRIVER module </td>
 389:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5790, ATA5790N, ATA5795</td>
 390:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 391:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 392:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 393:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_irdriver_enable()</td>
 394:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the IRDRIVER module </td>
 395:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5790, ATA5790N, ATA5795</td>
 396:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 397:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 398:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 399:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_kb_disable()</td>
 400:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the KB module </td>
 401:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90SCR100</td>
 402:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 403:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 404:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 405:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_kb_enable()</td>
 406:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the KB module </td>
 407:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90SCR100</td>
 408:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 409:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 410:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 411:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_lcd_disable()</td>
 412:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the LCD module.</td>
 413:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega64B1, ATxmega64B3, ATxmega128B1, ATxmega128B3, ATmega169, ATmega169A, ATmega169P, ATm
 414:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 415:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 416:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 417:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_lcd_enable()</td>
 418:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the LCD module.</td>
 419:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega64B1, ATxmega64B3, ATxmega128B1, ATxmega128B3, ATmega169, ATmega169A, ATmega169P, ATm
 420:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 421:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 422:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 423:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_lfreceiver_disable()</td>
 424:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the LFRECEIVER module </td>
 425:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5790, ATA5790N</td>
 426:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 427:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 428:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 429:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_lfreceiver_enable()</td>
 430:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the LFRECEIVER module </td>
 431:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5790, ATA5790N</td>
 432:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 433:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 434:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 435:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_lin_disable()</td>
 436:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the LIN module </td>
 437:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega16M1, ATmega32C1, ATmega32M1, ATmega64C1, ATmega64M1, ATtiny167, ATtiny87, ATA5505, AT
 438:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 439:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 440:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 441:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_lin_enable()</td>
 442:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the LIN module </td>
 443:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega16M1, ATmega32C1, ATmega32M1, ATmega64C1, ATmega64M1, ATtiny167, ATtiny87, ATA5505, AT
 444:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 445:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 446:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 447:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_pga_disable()</td>
 448:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Disable PGA module </td>
 449:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, ATmega256RFA2, ATmega128RFA2, ATmega64RFA2</td>
 450:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 451:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 452:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 453:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_pga_enable()</td>
 454:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Enable PGA module </td>
 455:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, ATmega256RFA2, ATmega128RFA2, ATmega64RFA2</td>
 456:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 457:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 458:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 459:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_preamble_rssi_fifo_disable()</td>
 460:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable preamble/RSSI FIFO</td>
 461:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 462:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 463:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 464:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 465:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_preamble_rssi_fifo_enable()</td>
 466:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable preamble/RSSI FIFO</td>
 467:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 468:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 469:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 470:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 471:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_psc0_disable()</td>
 472:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Power Stage Controller 0 module.</td>
 473:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM216, AT90PWM316</td>
 474:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 475:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 476:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 477:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_psc0_enable()</td>
 478:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Power Stage Controller 0 module.</td>
 479:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM216, AT90PWM316</td>
 480:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 481:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 482:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 483:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_psc1_disable()</td>
 484:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Power Stage Controller 1 module.</td>
 485:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM216, AT90PWM316</td>
 486:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 487:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 488:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 489:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_psc1_enable()</td>
 490:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Power Stage Controller 1 module.</td>
 491:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM216, AT90PWM316</td>
 492:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 493:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 494:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 495:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_psc2_disable()</td>
 496:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Power Stage Controller 2 module.</td>
 497:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM216, AT90PWM316, AT90PWM81, AT90P
 498:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 499:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 500:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 501:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_psc2_enable()</td>
 502:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Power Stage Controller 2 module.</td>
 503:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM216, AT90PWM316, AT90PWM81, AT90P
 504:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 505:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 506:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 507:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_psc_disable()</td>
 508:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the Power Stage Controller module </td>
 509:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega16M1, ATmega32C1, ATmega32M1, ATmega64C1, ATmega64M1</td>
 510:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 511:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 512:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 513:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_psc_enable()</td>
 514:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the Power Stage Controller module </td>
 515:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega16M1, ATmega32C1, ATmega32M1, ATmega64C1, ATmega64M1</td>
 516:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 517:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 518:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 519:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_pscr_disable()</td>
 520:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Reduced Power Stage Controller module.</td>
 521:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90PWM81, AT90PWM161</td>
 522:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 523:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 524:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 525:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_pscr_enable()</td>
 526:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Reduced Power Stage Controller module.</td>
 527:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90PWM81, AT90PWM161</td>
 528:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 529:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 530:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 531:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_ram0_disable()</td>
 532:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Disable Ram0 module </td>
 533:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, ATmega256RFA2, ATmega128RFA2, ATmega64RFA2</td>
 534:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 535:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 536:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 537:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_ram0_enable()</td>
 538:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Enable Ram0 module </td>
 539:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, ATmega256RFA2, ATmega128RFA2, ATmega64RFA2</td>
 540:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 541:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 542:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 543:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_ram1_disable()</td>
 544:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Disable Ram1 module </td>
 545:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, ATmega256RFA2, ATmega128RFA2, ATmega64RFA2</td>
 546:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 547:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 548:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 549:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_ram1_enable()</td>
 550:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Enable Ram1 module </td>
 551:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, ATmega256RFA2, ATmega128RFA2, ATmega64RFA2</td>
 552:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 553:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 554:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 555:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_ram2_disable()</td>
 556:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Disable Ram2 module </td>
 557:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, ATmega256RFA2, ATmega128RFA2, ATmega64RFA2</td>
 558:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 559:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 560:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 561:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_ram2_enable()</td>
 562:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Enable Ram2 module </td>
 563:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, ATmega256RFA2, ATmega128RFA2, ATmega64RFA2</td>
 564:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 565:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 566:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 567:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_ram3_disable()</td>
 568:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Disable Ram3 module </td>
 569:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, ATmega256RFA2, ATmega128RFA2, ATmega64RFA2</td>
 570:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 571:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 572:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 573:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_ram3_enable()</td>
 574:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Enable Ram3 module </td>
 575:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, ATmega256RFA2, ATmega128RFA2, ATmega64RFA2</td>
 576:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 577:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 578:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 579:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_receive_dsp_control_disable()</td>
 580:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable Receive DSP control module</td>
 581:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 582:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 583:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 584:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 585:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_receive_dsp_control_enable()</td>
 586:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable Receive DSP control module</td>
 587:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 588:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 589:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 590:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 591:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_rssi_buffer_disable()</td>
 592:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable RSSI buffer</td>
 593:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 594:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 595:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 596:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 597:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_rssi_buffer_enable()</td>
 598:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable RSSI buffer</td>
 599:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 600:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 601:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 602:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 603:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_rtc_disable()</td>
 604:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the RTC module </td>
 605:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 606:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 607:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 608:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 609:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_rtc_enable()</td>
 610:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the RTC module </td>
 611:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 612:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 613:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 614:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 615:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_sci_disable()</td>
 616:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the SCI module </td>
 617:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90SCR100</td>
 618:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 619:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 620:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 621:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_sci_enable()</td>
 622:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the SCI module </td>
 623:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90SCR100</td>
 624:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 625:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 626:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 627:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_sequencer_state_machine_disable()</td>
 628:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable power sequencer state machine</td>
 629:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 630:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 631:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 632:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 633:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_sequencer_state_machine_enable()</td>
 634:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable power sequencer state machine</td>
 635:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 636:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 637:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 638:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 639:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_spi_disable()</td>
 640:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Serial Peripheral Interface module.</td>
 641:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 642:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 643:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 644:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 645:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_spi_enable()</td>
 646:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Serial Peripheral Interface module.</td>
 647:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 648:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 649:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 650:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 651:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_spic_disable()</td>
 652:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the SPI module on PortC </td>
 653:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 654:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 655:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 656:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 657:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_spic_disalbe()</td>
 658:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Disable SPI module on PortC </td>
 659:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega32E5</td>
 660:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 661:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 662:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 663:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_spic_enable()</td>
 664:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the SPI module on PortC </td>
 665:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 666:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 667:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 668:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 669:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_spid_disable()</td>
 670:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the SPI module on PortD </td>
 671:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 672:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 673:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 674:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 675:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_spid_enable()</td>
 676:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the SPI module on PortD </td>
 677:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 678:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 679:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 680:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 681:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_spie_disable()</td>
 682:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the SPI module on PortE </td>
 683:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 684:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 685:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 686:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 687:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_spie_enable()</td>
 688:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the SPI module on PortE </td>
 689:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 690:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 691:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 692:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 693:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_spif_disable()</td>
 694:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the SPI module on PortF </td>
 695:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 696:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 697:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 698:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 699:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_spif_enable()</td>
 700:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the SPI module on PortF </td>
 701:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 702:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 703:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 704:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 705:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc0c_disable()</td>
 706:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the TC0 module on PortC </td>
 707:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 708:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 709:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 710:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 711:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc0c_enable()</td>
 712:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the TC0 module on PortC </td>
 713:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 714:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 715:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 716:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 717:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc0d_disable()</td>
 718:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the TC0 module on PortD </td>
 719:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 720:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 721:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 722:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 723:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc0d_enable()</td>
 724:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the TC0 module on PortD </td>
 725:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 726:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 727:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 728:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 729:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc0e_disable()</td>
 730:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the TC0 module on PortE </td>
 731:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 732:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 733:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 734:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 735:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc0e_enable()</td>
 736:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the TC0 module on PortE </td>
 737:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 738:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 739:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 740:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 741:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc0f_disable()</td>
 742:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the TC0 module on PortF </td>
 743:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 744:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 745:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 746:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 747:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc0f_enable()</td>
 748:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the TC0 module on PortF </td>
 749:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 750:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 751:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 752:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 753:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc1c_disable()</td>
 754:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the TC1 module on PortC </td>
 755:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 756:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 757:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 758:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 759:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc1c_enable()</td>
 760:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the TC1 module on PortC </td>
 761:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 762:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 763:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 764:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 765:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc1d_disable()</td>
 766:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the TC1 module on PortD </td>
 767:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 768:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 769:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 770:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 771:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc1d_enable()</td>
 772:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the TC1 module on PortD </td>
 773:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 774:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 775:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 776:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 777:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc1e_disable()</td>
 778:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the TC1 module on PortE </td>
 779:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 780:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 781:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 782:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 783:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc1e_enable()</td>
 784:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the TC1 module on PortE </td>
 785:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 786:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 787:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 788:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 789:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc1f_disable()</td>
 790:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the TC1 module on PortF </td>
 791:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 792:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 793:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 794:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 795:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc1f_enable()</td>
 796:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the TC1 module on PortF </td>
 797:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 798:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 799:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 800:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 801:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_timer0_disable()</td>
 802:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Timer 0 module.</td>
 803:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 804:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 805:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 806:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 807:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_timer0_enable()</td>
 808:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Timer 0 module.</td>
 809:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 810:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 811:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 812:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 813:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_timer1_disable()</td>
 814:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Timer 1 module.</td>
 815:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 816:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 817:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 818:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 819:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_timer1_enable()</td>
 820:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Timer 1 module.</td>
 821:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 822:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 823:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 824:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 825:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_timer2_disable()</td>
 826:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Timer 2 module.</td>
 827:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 828:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 829:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 830:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 831:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_timer2_enable()</td>
 832:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Timer 2 module.</td>
 833:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 834:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 835:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 836:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 837:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_timer3_disable()</td>
 838:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Timer 3 module.</td>
 839:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 840:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 841:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 842:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 843:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_timer3_enable()</td>
 844:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Timer 3 module.</td>
 845:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 846:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 847:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 848:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 849:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_timer4_disable()</td>
 850:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Timer 4 module.</td>
 851:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 852:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 853:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 854:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 855:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_timer4_enable()</td>
 856:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Timer 4 module.</td>
 857:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 858:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 859:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 860:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 861:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_timermodulator_disable()</td>
 862:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the TIMERMODULATOR module </td>
 863:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5790, ATA5790N, ATA5795</td>
 864:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 865:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 866:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 867:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_timermodulator_enable()</td>
 868:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the TIMERMODULATOR module </td>
 869:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5790, ATA5790N, ATA5795</td>
 870:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 871:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 872:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 873:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_transceiver_disable()</td>
 874:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Disable transceiver module </td>
 875:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, ATmega256RFA2, ATmega128RFA2, ATmega64RFA2</td>
 876:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 877:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 878:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 879:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_transceiver_enable()</td>
 880:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Enable transceiver module </td>
 881:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, ATmega256RFA2, ATmega128RFA2, ATmega64RFA2</td>
 882:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 883:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 884:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 885:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_transmit_dsp_control_disable()</td>
 886:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable Transmit DSP control module</td>
 887:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 888:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 889:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 890:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 891:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_transmit_dsp_control_enable()</td>
 892:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable Transmit DSP control module</td>
 893:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 894:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 895:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 896:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 897:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_twi_disable()</td>
 898:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Two Wire Interface module.</td>
 899:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 900:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 901:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 902:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 903:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_twi_enable()</td>
 904:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Two Wire Interface module.</td>
 905:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 906:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 907:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 908:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 909:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_twic_disable()</td>
 910:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable the Two Wire Interface module on PortC </td>
 911:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 912:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 913:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 914:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 915:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_twic_enable()</td>
 916:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable the Two Wire Interface module on PortC </td>
 917:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 918:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 919:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 920:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 921:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_twid_disable()</td>
 922:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable the Two Wire Interface module on PortD </td>
 923:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 924:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 925:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 926:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 927:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_twid_enable()</td>
 928:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable the Two Wire Interface module on PortD </td>
 929:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 930:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 931:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 932:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 933:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_twie_disable()</td>
 934:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable the Two Wire Interface module on PortE </td>
 935:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 936:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 937:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 938:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 939:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_twie_enable()</td>
 940:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable the Two Wire Interface module on PortE </td>
 941:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 942:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 943:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 944:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 945:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_twif_disable()</td>
 946:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable the Two Wire Interface module on PortF </td>
 947:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 948:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 949:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 950:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 951:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_twif_enable()</td>
 952:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable the Two Wire Interface module on PortF </td>
 953:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 954:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 955:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 956:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 957:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tx_modulator_disable()</td>
 958:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable Tx modulator</td>
 959:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 960:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 961:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 962:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 963:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tx_modulator_enable()</td>
 964:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable Tx modulator</td>
 965:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 966:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 967:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 968:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 969:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usart0_disable()</td>
 970:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the USART 0 module.</td>
 971:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 972:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 973:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 974:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 975:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usart0_enable()</td>
 976:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the USART 0 module.</td>
 977:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 978:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 979:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 980:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 981:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usart1_disable()</td>
 982:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the USART 1 module.</td>
 983:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 984:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 985:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 986:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 987:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usart1_enable()</td>
 988:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the USART 1 module.</td>
 989:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 990:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 991:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 992:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 993:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usart2_disable()</td>
 994:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the USART 2 module.</td>
 995:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 996:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 997:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 998:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 999:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usart2_enable()</td>
1000:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the USART 2 module.</td>
1001:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
1002:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1003:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1004:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1005:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usart3_disable()</td>
1006:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the USART 3 module.</td>
1007:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
1008:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1009:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1010:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1011:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usart3_enable()</td>
1012:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the USART 3 module.</td>
1013:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
1014:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1015:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1016:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1017:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usart_disable()</td>
1018:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the USART module.</td>
1019:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM216, AT90PWM316</td>
1020:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1021:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1022:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1023:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usart_enable()</td>
1024:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the USART module.</td>
1025:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM216, AT90PWM316</td>
1026:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1027:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1028:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1029:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usartc0_disable()</td>
1030:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the USART0 module on PortC </td>
1031:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
1032:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1033:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1034:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1035:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usartc0_enable()</td>
1036:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the USART0 module on PortC </td>
1037:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
1038:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1039:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1040:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1041:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usartc1_disable()</td>
1042:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the USART1 module on PortC </td>
1043:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
1044:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1045:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1046:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1047:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usartc1_enable()</td>
1048:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the USART1 module on PortC </td>
1049:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
1050:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1051:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1052:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1053:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usartd0_disable()</td>
1054:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the USART0 module on PortD </td>
1055:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
1056:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1057:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1058:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1059:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usartd0_enable()</td>
1060:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the USART0 module on PortD </td>
1061:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
1062:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1063:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1064:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1065:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usartd1_disable()</td>
1066:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the USART1 module on PortD </td>
1067:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
1068:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1069:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1070:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1071:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usartd1_enable()</td>
1072:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the USART1 module on PortE </td>
1073:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
1074:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1075:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1076:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1077:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usarte0_disable()</td>
1078:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the USART0 module on PortE </td>
1079:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
1080:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1081:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1082:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1083:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usarte0_enable()</td>
1084:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the USART0 module on PortE </td>
1085:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
1086:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1087:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1088:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1089:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usarte1_disable()</td>
1090:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the USART1 module on PortE </td>
1091:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
1092:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1093:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1094:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1095:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usarte1_enable()</td>
1096:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the USART1 module on PortE </td>
1097:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
1098:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1099:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1100:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1101:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usartf0_disable()</td>
1102:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the USART0 module on PortF </td>
1103:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
1104:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1105:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1106:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1107:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usartf0_enable()</td>
1108:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the USART0 module on PortF </td>
1109:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
1110:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1111:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1112:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1113:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usartf1_disable()</td>
1114:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the USART1 module on PortF </td>
1115:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
1116:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1117:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1118:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1119:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usartf1_enable()</td>
1120:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the USART1 module on PortF </td>
1121:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
1122:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1123:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1124:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1125:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usb_disable()</td>
1126:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the USB module.</td>
1127:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega384C3, ATxmega256A3BU, ATxmega16A4U, ATxmega32A4U, ATxmega64A3U, ATxmega64A4U, ATxmeg
1128:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1129:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1130:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1131:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usb_enable()</td>
1132:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the USB module.</td>
1133:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega384C3, ATxmega256A3BU, ATxmega16A4U, ATxmega32A4U, ATxmega64A3U, ATxmega64A4U, ATxmeg
1134:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1135:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1136:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1137:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usbh_disable()</td>
1138:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the USBH module </td>
1139:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90SCR100</td>
1140:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1141:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1142:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1143:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usbh_enable()</td>
1144:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the USBH module </td>
1145:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90SCR100</td>
1146:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1147:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1148:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1149:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usi_disable()</td>
1150:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Universal Serial Interface module.</td>
1151:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATtiny24, ATtiny24A, ATtiny44, ATtiny44A, ATtiny84, ATtiny84A, ATtiny25, ATtiny45, ATtiny85,
1152:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1153:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1154:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1155:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usi_enable()</td>
1156:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Universal Serial Interface module.</td>
1157:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATtiny24, ATtiny24A, ATtiny44, ATtiny44A, ATtiny84, ATtiny84A, ATtiny25, ATtiny45, ATtiny85,
1158:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1159:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1160:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1161:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_vadc_disable()</td>
1162:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Voltage ADC module.</td>
1163:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega406, ATmega32HVB, ATmega32HVBREVB, ATmega16HVB, ATmega16HVBREVB, ATmega26HVG, ATmega48
1164:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1165:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1166:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1167:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_vadc_enable()</td>
1168:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Voltage ADC module.</td>
1169:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega406, ATmega32HVB, ATmega32HVBREVB, ATmega16HVB, ATmega16HVBREVB, ATmega26HVG, ATmega48
1170:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1171:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1172:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1173:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_vmonitor_disable()</td>
1174:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the VMONITOR module </td>
1175:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5790, ATA5790N, ATA5795</td>
1176:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1177:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1178:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1179:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_vmonitor_enable()</td>
1180:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the VMONITOR module </td>
1181:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5790, ATA5790N, ATA5795</td>
1182:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1183:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1184:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1185:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_voltage_monitor_disable()</td>
1186:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable voltage monitor module</td>
1187:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
1188:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1189:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1190:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1191:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_voltage_monitor_enable()</td>
1192:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable voltage monitor module</td>
1193:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
1194:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1195:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1196:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1197:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_vrm_disable()</td>
1198:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the VRM module </td>
1199:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega32HVB, ATmega32HVBREVB, ATmega16HVB, ATmega16HVBREVB, ATmega26HVG, ATmega48HVF</td>
1200:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1201:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1202:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1203:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_vrm_enable()</td>
1204:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the VRM module </td>
1205:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega32HVB, ATmega32HVBREVB, ATmega16HVB, ATmega16HVBREVB, ATmega26HVG, ATmega48HVF</td>
1206:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1207:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** </table>
1208:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** </center>
1209:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** </small>
1210:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1211:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** @} */
1212:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1213:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** // Xmega A series has AES, EBI and DMA bits
1214:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** // Include any other device on need basis
1215:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATxmega16A4__) \
1216:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega16A4U__) \
1217:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega32A4U__) \
1218:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega32A4__) \
1219:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A1__) \
1220:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A1U__) \
1221:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A3__) \
1222:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A3U__) \
1223:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A4U__) \
1224:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A1__) \
1225:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A1U__) \
1226:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A3__) \
1227:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A3U__) \
1228:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A4U__) \
1229:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega192A3__) \
1230:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega192A3U__) \
1231:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3__) \
1232:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3U__) \
1233:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3B__) \
1234:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3BU__) \
1235:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega384C3__)
1236:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1237:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1238:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aes_enable()  (PR_PRGEN &= (uint8_t)~(PR_AES_bm))
1239:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aes_disable() (PR_PRGEN |= (uint8_t)PR_AES_bm)
1240:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1241:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ebi_enable()  (PR_PRGEN &= (uint8_t)~(PR_EBI_bm))
1242:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ebi_disable() (PR_PRGEN |= (uint8_t)PR_EBI_bm)
1243:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1244:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dma_enable()    (PR_PRGEN &= (uint8_t)~(PR_DMA_bm))
1245:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dma_disable()   (PR_PRGEN |= (uint8_t)PR_DMA_bm)
1246:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1247:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_daca_enable()     (PR_PRPA &= (uint8_t)~(PR_DAC_bm))
1248:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_daca_disable()    (PR_PRPA |= (uint8_t)PR_DAC_bm)
1249:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dacb_enable()     (PR_PRPB &= (uint8_t)~(PR_DAC_bm))
1250:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dacb_disable()    (PR_PRPB |= (uint8_t)PR_DAC_bm)
1251:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1252:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc1_enable()  (PR_PRPC &= (uint8_t)~(PR_USART1_bm))
1253:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc1_disable() (PR_PRPC |= (uint8_t)PR_USART1_bm)
1254:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd1_enable()  (PR_PRPD &= (uint8_t)~(PR_USART1_bm))
1255:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd1_disable() (PR_PRPD |= (uint8_t)PR_USART1_bm)
1256:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte1_enable()  (PR_PRPE &= (uint8_t)~(PR_USART1_bm))
1257:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte1_disable() (PR_PRPE |= (uint8_t)PR_USART1_bm)
1258:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartf1_enable()  (PR_PRPF &= (uint8_t)~(PR_USART1_bm))
1259:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartf1_disable() (PR_PRPF |= (uint8_t)PR_USART1_bm)
1260:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1261:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATxmega384C3__) \
1262:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3BU__) \
1263:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega16A4U__) \
1264:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega32A4U__) \
1265:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A3U__) \
1266:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A4U__) \
1267:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A3U__) \
1268:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A4U__) \
1269:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega192A3U__) \
1270:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3U__) 
1271:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1272:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_enable()   (PR_PRGEN &= (uint8_t)~(PR_USB_bm))
1273:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_disable()  (PR_PRGEN &= (uint8_t)(PR_USB_bm))
1274:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1275:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1276:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1277:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN &= (uint8_t)~(PR_AES_bm|PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm|PR_USB_bm); \
1278:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1279:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPB &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1280:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1281:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1282:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1283:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPF &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1284:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** } while(0)
1285:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1286:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1287:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1288:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN |= (uint8_t)(PR_AES_bm|PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm|PR_USB_bm); \
1289:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1290:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPB |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1291:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1292:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1293:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1294:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPF |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1295:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** } while(0)
1296:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1297:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #else
1298:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1299:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1300:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1301:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN &= (uint8_t)~(PR_AES_bm|PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1302:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1303:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPB &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1304:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1305:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1306:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1307:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPF &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1308:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** } while(0)
1309:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1310:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1311:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1312:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1313:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN|= (uint8_t)(PR_AES_bm|PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1314:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1315:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPB |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1316:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1317:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1318:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1319:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPF |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1320:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** } while(0)
1321:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
1322:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1323:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
1324:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1325:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATxmega16C4__) \
1326:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega32C4__) \
1327:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64C3__) \
1328:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128C3__) \
1329:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega192C3__) \
1330:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256C3__) 
1331:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1332:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_enable()   (PR_PRGEN &= (uint8_t)~(PR_USB_bm))
1333:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_disable()  (PR_PRGEN &= (uint8_t)(PR_USB_bm))
1334:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1335:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aes_enable()  (PR_PRGEN &= (uint8_t)~(PR_AES_bm))
1336:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aes_disable() (PR_PRGEN |= (uint8_t)PR_AES_bm)
1337:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1338:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rtc_enable()  (PR_PRGEN &= (uint8_t)~(PR_RTC_bm))
1339:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rtc_disable() (PR_PRGEN |= (uint8_t)PR_RTC_bm)
1340:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1341:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm))
1342:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
1343:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1344:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dma_enable()    (PR_PRGEN &= (uint8_t)~(PR_DMA_bm))
1345:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dma_disable()   (PR_PRGEN |= (uint8_t)PR_DMA_bm)
1346:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1347:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adca_enable()     (PR_PRPA &= (uint8_t)~(PR_ADC_bm))
1348:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adca_disable()    (PR_PRPA |= (uint8_t)PR_ADC_bm)
1349:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1350:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aca_enable()      (PR_PRPA &= (uint8_t)~(PR_AC_bm))
1351:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aca_disable()     (PR_PRPA |= (uint8_t)PR_AC_bm)
1352:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1353:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twic_enable()     (PR_PRPC &= (uint8_t)~(PR_TWI_bm))
1354:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twic_disable()    (PR_PRPC |= (uint8_t)PR_TWI_bm)
1355:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twie_enable()     (PR_PRPE &= (uint8_t)~(PR_TWI_bm))
1356:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twie_disable()    (PR_PRPE |= (uint8_t)PR_TWI_bm)
1357:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1358:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc1_enable()  (PR_PRPC &= (uint8_t)~(PR_USART1_bm))
1359:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc1_disable() (PR_PRPC |= (uint8_t)PR_USART1_bm)
1360:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1361:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc0_enable()  (PR_PRPC &= (uint8_t)~(PR_USART0_bm))
1362:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc0_disable() (PR_PRPC |= (uint8_t)PR_USART0_bm)
1363:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd0_enable()  (PR_PRPD &= (uint8_t)~(PR_USART0_bm))
1364:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd0_disable() (PR_PRPD |= (uint8_t)PR_USART0_bm)
1365:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte0_enable()  (PR_PRPE &= (uint8_t)~(PR_USART0_bm))
1366:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte0_disable() (PR_PRPE |= (uint8_t)PR_USART0_bm)
1367:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartf0_enable()  (PR_PRPF &= (uint8_t)~(PR_USART0_bm))
1368:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartf0_disable() (PR_PRPF |= (uint8_t)PR_USART0_bm)
1369:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1370:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spic_enable()     (PR_PRPC &= (uint8_t)~(PR_SPI_bm))
1371:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spic_disable()    (PR_PRPC |= (uint8_t)PR_SPI_bm)
1372:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spid_enable()     (PR_PRPD &= (uint8_t)~(PR_SPI_bm))
1373:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spid_disable()    (PR_PRPD |= (uint8_t)PR_SPI_bm)
1374:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1375:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresc_enable()   (PR_PRPC &= (uint8_t)~(PR_HIRES_bm))
1376:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresc_disable()  (PR_PRPC |= (uint8_t)PR_HIRES_bm)
1377:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1378:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC1_bm))
1379:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1c_disable()    (PR_PRPC |= (uint8_t)PR_TC1_bm)
1380:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1381:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC0_bm))
1382:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0c_disable()    (PR_PRPC |= (uint8_t)PR_TC0_bm)
1383:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC0_bm))
1384:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0d_disable()    (PR_PRPD |= (uint8_t)PR_TC0_bm)
1385:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC0_bm))
1386:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0e_disable()    (PR_PRPE |= (uint8_t)PR_TC0_bm)
1387:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC0_bm))
1388:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0f_disable()    (PR_PRPF |= (uint8_t)PR_TC0_bm)
1389:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1390:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1391:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1392:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN &= (uint8_t)~(PR_USB_bm|PR_AES_bm|PR_DMA_bm|PR_RTC_bm|PR_EVSYS_bm); \
1393:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
1394:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_USART1_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1395:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD &= (uint8_t)~(PR_USART0_bm|PR_SPI_bm|PR_TC0_bm); \
1396:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_TC0_bm); \
1397:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPF &= (uint8_t)~(PR_USART0_bm|PR_TC0_bm); \
1398:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     } while(0)
1399:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1400:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1401:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1402:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN |= (uint8_t)(PR_USB_bm|PR_AES_bm|PR_DMA_bm|PR_RTC_bm|PR_EVSYS_bm); \
1403:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
1404:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_USART1_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1405:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD |= (uint8_t)(PR_USART0_bm|PR_SPI_bm|PR_TC0_bm); \
1406:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_TC0_bm); \
1407:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPF |= (uint8_t)(PR_USART0_bm|PR_TC0_bm); \
1408:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     } while(0)
1409:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1410:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
1411:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1412:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATxmega16A4__) \
1413:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega16A4U__) \
1414:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega16D4__) \
1415:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega32A4__) \
1416:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega32A4U__) \
1417:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega32D4__) \
1418:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A1__) \
1419:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A1U__) \
1420:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A3__) \
1421:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A3U__) \
1422:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A4U__) \
1423:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64D3__) \
1424:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A1__) \
1425:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A1U__) \
1426:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A3__) \
1427:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A3U__) \
1428:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A4U__) \
1429:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128D3__) \
1430:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega192A3__) \
1431:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega192A3U__) \
1432:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega192D3__) \
1433:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3__) \
1434:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3U__) \
1435:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3B__) \
1436:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3BU__) \
1437:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega384C3__)
1438:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1439:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1440:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rtc_enable()  (PR_PRGEN &= (uint8_t)~(PR_RTC_bm))
1441:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rtc_disable() (PR_PRGEN |= (uint8_t)PR_RTC_bm)
1442:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1443:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm))
1444:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
1445:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1446:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adca_enable()     (PR_PRPA &= (uint8_t)~(PR_ADC_bm))
1447:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adca_disable()    (PR_PRPA |= (uint8_t)PR_ADC_bm)
1448:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adcb_enable()     (PR_PRPB &= (uint8_t)~(PR_ADC_bm))
1449:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adcb_disable()    (PR_PRPB |= (uint8_t)PR_ADC_bm)
1450:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1451:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aca_enable()      (PR_PRPA &= (uint8_t)~(PR_AC_bm))
1452:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aca_disable()     (PR_PRPA |= (uint8_t)PR_AC_bm)
1453:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_acb_enable()      (PR_PRPB &= (uint8_t)~(PR_AC_bm))
1454:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_acb_disable()     (PR_PRPB |= (uint8_t)PR_AC_bm)
1455:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1456:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twic_enable()     (PR_PRPC &= (uint8_t)~(PR_TWI_bm))
1457:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twic_disable()    (PR_PRPC |= (uint8_t)PR_TWI_bm)
1458:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twid_enable()     (PR_PRPD &= (uint8_t)~(PR_TWI_bm))
1459:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twid_disable()    (PR_PRPD |= (uint8_t)PR_TWI_bm)
1460:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twie_enable()     (PR_PRPE &= (uint8_t)~(PR_TWI_bm))
1461:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twie_disable()    (PR_PRPE |= (uint8_t)PR_TWI_bm)
1462:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twif_enable()     (PR_PRPF &= (uint8_t)~(PR_TWI_bm))
1463:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twif_disable()    (PR_PRPF |= (uint8_t)PR_TWI_bm)
1464:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1465:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc0_enable()  (PR_PRPC &= (uint8_t)~(PR_USART0_bm))
1466:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc0_disable() (PR_PRPC |= (uint8_t)PR_USART0_bm)
1467:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd0_enable()  (PR_PRPD &= (uint8_t)~(PR_USART0_bm))
1468:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd0_disable() (PR_PRPD |= (uint8_t)PR_USART0_bm)
1469:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte0_enable()  (PR_PRPE &= (uint8_t)~(PR_USART0_bm))
1470:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte0_disable() (PR_PRPE |= (uint8_t)PR_USART0_bm)
1471:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartf0_enable()  (PR_PRPF &= (uint8_t)~(PR_USART0_bm))
1472:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartf0_disable() (PR_PRPF |= (uint8_t)PR_USART0_bm)
1473:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1474:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spic_enable()     (PR_PRPC &= (uint8_t)~(PR_SPI_bm))
1475:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spic_disable()    (PR_PRPC |= (uint8_t)PR_SPI_bm)
1476:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spid_enable()     (PR_PRPD &= (uint8_t)~(PR_SPI_bm))
1477:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spid_disable()    (PR_PRPD |= (uint8_t)PR_SPI_bm)
1478:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spie_enable()     (PR_PRPE &= (uint8_t)~(PR_SPI_bm))
1479:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spie_disable()    (PR_PRPE |= (uint8_t)PR_SPI_bm)
1480:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spif_enable()     (PR_PRPF &= (uint8_t)~(PR_SPI_bm))
1481:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spif_disable()    (PR_PRPF |= (uint8_t)PR_SPI_bm)
1482:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1483:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresc_enable()   (PR_PRPC &= (uint8_t)~(PR_HIRES_bm))
1484:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresc_disable()  (PR_PRPC |= (uint8_t)PR_HIRES_bm)
1485:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresd_enable()   (PR_PRPD &= (uint8_t)~(PR_HIRES_bm))
1486:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresd_disable()  (PR_PRPD |= (uint8_t)PR_HIRES_bm)
1487:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hirese_enable()   (PR_PRPE &= (uint8_t)~(PR_HIRES_bm))
1488:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hirese_disable()  (PR_PRPE |= (uint8_t)PR_HIRES_bm)
1489:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresf_enable()   (PR_PRPF &= (uint8_t)~(PR_HIRES_bm))
1490:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresf_disable()  (PR_PRPF |= (uint8_t)PR_HIRES_bm)
1491:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1492:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC1_bm))
1493:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1c_disable()    (PR_PRPC |= (uint8_t)PR_TC1_bm)
1494:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC1_bm))
1495:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1d_disable()    (PR_PRPD |= (uint8_t)PR_TC1_bm)
1496:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC1_bm))
1497:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1e_disable()    (PR_PRPE |= (uint8_t)PR_TC1_bm)
1498:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC1_bm))
1499:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1f_disable()    (PR_PRPF |= (uint8_t)PR_TC1_bm)
1500:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1501:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC0_bm))
1502:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0c_disable()    (PR_PRPC |= (uint8_t)PR_TC0_bm)
1503:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC0_bm))
1504:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0d_disable()    (PR_PRPD |= (uint8_t)PR_TC0_bm)
1505:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC0_bm))
1506:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0e_disable()    (PR_PRPE |= (uint8_t)PR_TC0_bm)
1507:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC0_bm))
1508:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0f_disable()    (PR_PRPF |= (uint8_t)PR_TC0_bm)
1509:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1510:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
1511:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1512:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATxmega64D4__) \
1513:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128D4__) 
1514:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1515:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rtc_enable()  (PR_PRGEN &= (uint8_t)~(PR_RTC_bm))
1516:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rtc_disable() (PR_PRGEN |= (uint8_t)PR_RTC_bm)
1517:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1518:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm))
1519:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
1520:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1521:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adca_enable()     (PR_PRPA &= (uint8_t)~(PR_ADC_bm))
1522:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adca_disable()    (PR_PRPA |= (uint8_t)PR_ADC_bm)
1523:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1524:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aca_enable()      (PR_PRPA &= (uint8_t)~(PR_AC_bm))
1525:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aca_disable()     (PR_PRPA |= (uint8_t)PR_AC_bm)
1526:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1527:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twic_enable()     (PR_PRPC &= (uint8_t)~(PR_TWI_bm))
1528:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twic_disable()    (PR_PRPC |= (uint8_t)PR_TWI_bm)
1529:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twie_enable()     (PR_PRPE &= (uint8_t)~(PR_TWI_bm))
1530:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twie_disable()    (PR_PRPE |= (uint8_t)PR_TWI_bm)
1531:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1532:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc0_enable()  (PR_PRPC &= (uint8_t)~(PR_USART0_bm))
1533:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc0_disable() (PR_PRPC |= (uint8_t)PR_USART0_bm)
1534:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd0_enable()  (PR_PRPD &= (uint8_t)~(PR_USART0_bm))
1535:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd0_disable() (PR_PRPD |= (uint8_t)PR_USART0_bm)
1536:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte0_enable()  (PR_PRPE &= (uint8_t)~(PR_USART0_bm))
1537:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte0_disable() (PR_PRPE |= (uint8_t)PR_USART0_bm)
1538:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartf0_enable()  (PR_PRPF &= (uint8_t)~(PR_USART0_bm))
1539:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartf0_disable() (PR_PRPF |= (uint8_t)PR_USART0_bm)
1540:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1541:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spic_enable()     (PR_PRPC &= (uint8_t)~(PR_SPI_bm))
1542:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spic_disable()    (PR_PRPC |= (uint8_t)PR_SPI_bm)
1543:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spid_enable()     (PR_PRPD &= (uint8_t)~(PR_SPI_bm))
1544:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spid_disable()    (PR_PRPD |= (uint8_t)PR_SPI_bm)
1545:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1546:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresc_enable()   (PR_PRPC &= (uint8_t)~(PR_HIRES_bm))
1547:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresc_disable()  (PR_PRPC |= (uint8_t)PR_HIRES_bm)
1548:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1549:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC1_bm))
1550:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1c_disable()    (PR_PRPC |= (uint8_t)PR_TC1_bm)
1551:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1552:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC0_bm))
1553:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0c_disable()    (PR_PRPC |= (uint8_t)PR_TC0_bm)
1554:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC0_bm))
1555:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0d_disable()    (PR_PRPD |= (uint8_t)PR_TC0_bm)
1556:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC0_bm))
1557:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0e_disable()    (PR_PRPE |= (uint8_t)PR_TC0_bm)
1558:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC0_bm))
1559:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0f_disable()    (PR_PRPF |= (uint8_t)PR_TC0_bm)
1560:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1561:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1562:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1563:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN &= (uint8_t)~(PR_RTC_bm|PR_EVSYS_bm); \
1564:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
1565:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1566:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD &= (uint8_t)~(PR_USART0_bm|PR_SPI_bm|PR_TC0_bm); \
1567:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_TC0_bm); \
1568:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPF &= (uint8_t)~(PR_USART0_bm|PR_TC0_bm); \
1569:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     } while(0)
1570:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1571:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1572:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1573:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN |= (uint8_t)(PR_RTC_bm|PR_EVSYS_bm); \
1574:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
1575:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1576:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD |= (uint8_t)(PR_USART0_bm|PR_SPI_bm|PR_TC0_bm); \
1577:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_TC0_bm); \
1578:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPF |= (uint8_t)(PR_USART0_bm|PR_TC0_bm); \
1579:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     } while(0)
1580:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1581:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
1582:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1583:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATxmega16D4__) \
1584:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega32D4__) \
1585:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64D3__) \
1586:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128D3__) \
1587:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega192D3__) 
1588:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1589:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1590:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1591:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN &= (uint8_t)~(PR_RTC_bm|PR_EVSYS_bm); \
1592:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
1593:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPB &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
1594:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1595:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1596:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1597:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPF &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1598:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** } while(0)
1599:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1600:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1601:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1602:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1603:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN|= (uint8_t)(PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1604:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
1605:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPB |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
1606:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1607:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1608:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1609:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPF |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1610:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** } while(0)
1611:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1612:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1613:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATxmega32E5__)
1614:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1615:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_cpld_enable()     (PR_PRGEN &= (uint8_t)~(PR_CPLD_bm))
1616:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_cpld_disable()    (PR_PRGEN |= (uint8_t)PR_CPLD_bm)
1617:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1618:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rtc_enable()      (PR_PRGEN &= (uint8_t)~(PR_RTC_bm)) 
1619:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rtc_disable()     (PR_PRGEN |= (uint8_t)PR_RTC_bm)
1620:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1621:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm)) 
1622:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
1623:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1624:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dma_enable()      (PR_PRGEN &= (uint8_t)~(PR_DMA_bm))
1625:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dma_disable()     (PR_PRGEN |= (uint8_t)PR_DMA_bm)
1626:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1627:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_daca_enable()      (PR_PRPA  &= (uint8_t)~(PR_DAC_bm))
1628:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_daca_disable()     (PR_PRPA  |= (uint8_t)PR_DAC_bm)
1629:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1630:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adca_enable()      (PR_PRPA  &= (uint8_t)~(PR_ADC_bm))
1631:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adca_disable()     (PR_PRPA  |= (uint8_t)PR_ADC_bm)
1632:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1633:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aca_enable()       (PR_PRPA  &= (uint8_t)~(PR_AC_bm))
1634:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aca_disable()      (PR_PRPA  |= (uint8_t)PR_AC_bm)
1635:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1636:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twic_enable()      (PR_PRPC  &= (uint8_t)~(PR_TWI_bm))
1637:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twic_disable()     (PR_PRPC  |= (uint8_t)PR_TWI_bm)
1638:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1639:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc0_enable()   (PR_PRPC  &= (uint8_t)~(PR_USART0_bm))
1640:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc0_disable()  (PR_PRPC  |= (uint8_t)PR_USART0_bm)
1641:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1642:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spic_enable()      (PR_PRPC  &= (uint8_t)~(PR_SPI_bm))
1643:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spic_disalbe()     (PR_PRPC  |= (uint8_t)PR_SPI_bm)
1644:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1645:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresc_enable()    (PR_PRPC  &= (uint8_t)~(PR_HIRES_bm))
1646:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresc_disable()   (PR_PRPC  |= (uint8_t)PR_HIRES_bm)
1647:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1648:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1c_enable()      (PR_PRPC  &= (uint8_t)~(PR_TC1_bm))
1649:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1c_disable()     (PR_PRPC  |= (uint8_t)PR_TC1_bm)
1650:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1651:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0c_enable()      (PR_PRPC  &= (uint8_t)~(PR_TC0_bm))
1652:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0c_disable()     (PR_PRPC  |= (uint8_t)PR_TC0_bm)
1653:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1654:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd0_enable()   (PR_PRPD  &= (uint8_t)~(PR_USART0_bm))  
1655:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd0_disable()  (PR_PRPD  |= (uint8_t)PR_USART0_bm)
1656:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1657:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1d_enable()      (PR_PRPC  &= (uint8_t)~(PR_TC1_bm)) 
1658:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1d_disable()     (PR_PRPC  |= (uint8_t)PR_TC1_bm) 
1659:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1660:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1661:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1662:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN &= (uint8_t)~(PR_RTC_bm|PR_EVSYS_bm|PR_CPLD_bm|PR_DMA_bm); \
1663:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA  &= (uint8_t)~(PR_ADC_bm|PR_AC_bm|PR_DAC_bm); \
1664:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC  &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1665:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD  &= (uint8_t)~(PR_USART0_bm|PR_TC1_bm); \
1666:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** } while(0)
1667:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1668:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1669:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1670:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1671:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN|= (uint8_t)(PR_CPLD_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1672:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA |= (uint8_t)(PR_ADC_bm|PR_AC_bm|PR_DAC_bm); \
1673:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1674:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD |= (uint8_t)(PR_USART0_bm|PR_TC1_bm); \
1675:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** } while(0)
1676:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1677:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1678:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined (__AVR_ATxmega64B1__) \
1679:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATxmega64B3__) \
1680:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATxmega128B1__) \
1681:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATxmega128B3__) 
1682:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_lcd_enable()  (PR_PRGEN &= (uint8_t)~(PR_LCD_bm))
1683:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_lcd_disable() (PR_PRGEN |= (uint8_t)PR_LCD_bm)
1684:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1685:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_enable()  (PR_PRGEN &= (uint8_t)~(PR_USB_bm))
1686:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_disable() (PR_PRGEN |= (uint8_t)PR_USB_bm)
1687:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1688:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aes_enable()  (PR_PRGEN &= (uint8_t)~(PR_AES_bm))
1689:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aes_disable() (PR_PRGEN |= (uint8_t)PR_AES_bm)
1690:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1691:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rtc_enable()  (PR_PRGEN &= (uint8_t)~(PR_RTC_bm))
1692:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rtc_disable() (PR_PRGEN |= (uint8_t)PR_RTC_bm)
1693:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1694:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm))
1695:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
1696:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1697:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dma_enable()    (PR_PRGEN &= (uint8_t)~(PR_DMA_bm))
1698:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dma_disable()   (PR_PRGEN |= (uint8_t)PR_DMA_bm)
1699:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1700:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adca_enable()     (PR_PRPA &= (uint8_t)~(PR_ADC_bm))
1701:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adca_disable()    (PR_PRPA |= (uint8_t)PR_ADC_bm)
1702:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adcb_enable()     (PR_PRPB &= (uint8_t)~(PR_ADC_bm))
1703:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adcb_disable()    (PR_PRPB |= (uint8_t)PR_ADC_bm)
1704:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1705:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aca_enable()      (PR_PRPA &= (uint8_t)~(PR_AC_bm))
1706:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aca_disable()     (PR_PRPA |= (uint8_t)PR_AC_bm)
1707:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_acb_enable()      (PR_PRPB &= (uint8_t)~(PR_AC_bm))
1708:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_acb_disable()     (PR_PRPB |= (uint8_t)PR_AC_bm)
1709:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1710:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twic_enable()     (PR_PRPC &= (uint8_t)~(PR_TWI_bm))
1711:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twic_disable()    (PR_PRPC |= (uint8_t)PR_TWI_bm)
1712:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1713:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc0_enable()  (PR_PRPC &= (uint8_t)~(PR_USART0_bm))
1714:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc0_disable() (PR_PRPC |= (uint8_t)PR_USART0_bm)
1715:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte0_enable()  (PR_PRPE &= (uint8_t)~(PR_USART0_bm))
1716:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte0_disable() (PR_PRPE |= (uint8_t)PR_USART0_bm)
1717:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1718:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spic_enable()     (PR_PRPC &= (uint8_t)~(PR_SPI_bm))
1719:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spic_disable()    (PR_PRPC |= (uint8_t)PR_SPI_bm)
1720:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1721:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresc_enable()     (PR_PRPC &= (uint8_t)~(PR_HIRES_bm))
1722:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresc_disable()    (PR_PRPC |= (uint8_t)PR_HIRES_bm)
1723:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1724:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC1_bm))
1725:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1c_disable()    (PR_PRPC |= (uint8_t)PR_TC1_bm)
1726:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1727:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0c_enable()  (PR_PRPC &= (uint8_t)~(PR_TC0_bm))
1728:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0c_disable() (PR_PRPC |= (uint8_t)PR_TC0_bm)
1729:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0e_enable()  (PR_PRPE &= (uint8_t)~(PR_TC0_bm))
1730:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0e_disable() (PR_PRPE |= (uint8_t)PR_TC0_bm)
1731:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1732:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1733:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1734:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN &= (uint8_t)~(PR_LCD_bm|PR_USB_bm|PR_AES_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1735:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
1736:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPB &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
1737:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1738:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE &= (uint8_t)~(PR_USART0_bm|PR_TC0_bm); \
1739:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     } while(0)
1740:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1741:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1742:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1743:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN |= (uint8_t)(PR_LCD_bm|PR_USB_bm|PR_AES_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1744:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
1745:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPB |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
1746:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1747:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE |= (uint8_t)(PR_USART0_bm|PR_TC0_bm); \
1748:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     } while(0)
1749:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1750:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined (__AVR_ATMXT112SL__) \
1751:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATMXT224__) \
1752:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATMXT224E__) \
1753:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATMXT336S__) \
1754:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATMXT540S__) \
1755:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATMXT540SREVA__)
1756:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1757:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ctm_enable()  (PR_PRGEN &= (uint8_t)~(PR_CTM_bm))
1758:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ctm_disable() (PR_PRGEN |= (uint8_t)PR_CTM_bm)
1759:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1760:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aes_enable()  (PR_PRGEN &= (uint8_t)~(PR_AES_bm))
1761:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aes_disable() (PR_PRGEN |= (uint8_t)PR_AES_bm)
1762:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1763:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ebi_enable()  (PR_PRGEN &= (uint8_t)~(PR_EBI_bm))
1764:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ebi_disable() (PR_PRGEN |= (uint8_t)PR_EBI_bm)
1765:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1766:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rtc_enable()  (PR_PRGEN &= (uint8_t)~(PR_RTC_bm))
1767:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rtc_disable() (PR_PRGEN |= (uint8_t)PR_RTC_bm)
1768:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1769:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm))
1770:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
1771:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1772:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dma_enable()    (PR_PRGEN &= (uint8_t)~(PR_DMA_bm))
1773:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dma_disable()   (PR_PRGEN |= (uint8_t)PR_DMA_bm)
1774:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1775:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_daca_enable()     (PR_PRPA &= (uint8_t)~(PR_DAC_bm))
1776:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_daca_disable()    (PR_PRPA |= (uint8_t)PR_DAC_bm)
1777:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dacb_enable()     (PR_PRPB &= (uint8_t)~(PR_DAC_bm))
1778:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dacb_disable()    (PR_PRPB |= (uint8_t)PR_DAC_bm)
1779:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1780:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adca_enable()     (PR_PRPA &= (uint8_t)~(PR_ADC_bm))
1781:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adca_disable()    (PR_PRPA |= (uint8_t)PR_ADC_bm)
1782:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adcb_enable()     (PR_PRPB &= (uint8_t)~(PR_ADC_bm))
1783:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adcb_disable()    (PR_PRPB |= (uint8_t)PR_ADC_bm)
1784:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1785:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aca_enable()      (PR_PRPA &= (uint8_t)~(PR_AC_bm))
1786:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aca_disable()     (PR_PRPA |= (uint8_t)PR_AC_bm)
1787:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_acb_enable()      (PR_PRPB &= (uint8_t)~(PR_AC_bm))
1788:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_acb_disable()     (PR_PRPB |= (uint8_t)PR_AC_bm)
1789:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1790:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twic_enable()     (PR_PRPC &= (uint8_t)~(PR_TWI_bm))
1791:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twic_disable()    (PR_PRPC |= (uint8_t)PR_TWI_bm)
1792:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twid_enable()     (PR_PRPD &= (uint8_t)~(PR_TWI_bm))
1793:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twid_disable()    (PR_PRPD |= (uint8_t)PR_TWI_bm)
1794:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twie_enable()     (PR_PRPE &= (uint8_t)~(PR_TWI_bm))
1795:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twie_disable()    (PR_PRPE |= (uint8_t)PR_TWI_bm)
1796:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twif_enable()     (PR_PRPF &= (uint8_t)~(PR_TWI_bm))
1797:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twif_disable()    (PR_PRPF |= (uint8_t)PR_TWI_bm)
1798:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1799:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc1_enable()  (PR_PRPC &= (uint8_t)~(PR_USART1_bm))
1800:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc1_disable() (PR_PRPC |= (uint8_t)PR_USART1_bm)
1801:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd1_enable()  (PR_PRPD &= (uint8_t)~(PR_USART1_bm))
1802:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd1_disable() (PR_PRPD |= (uint8_t)PR_USART1_bm)
1803:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte1_enable()  (PR_PRPE &= (uint8_t)~(PR_USART1_bm))
1804:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte1_disable() (PR_PRPE |= (uint8_t)PR_USART1_bm)
1805:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartf1_enable()  (PR_PRPF &= (uint8_t)~(PR_USART1_bm))
1806:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartf1_disable() (PR_PRPF |= (uint8_t)PR_USART1_bm)
1807:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1808:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc0_enable()  (PR_PRPC &= (uint8_t)~(PR_USART0_bm))
1809:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc0_disable() (PR_PRPC |= (uint8_t)PR_USART0_bm)
1810:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd0_enable()  (PR_PRPD &= (uint8_t)~(PR_USART0_bm))
1811:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd0_disable() (PR_PRPD |= (uint8_t)PR_USART0_bm)
1812:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte0_enable()  (PR_PRPE &= (uint8_t)~(PR_USART0_bm))
1813:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte0_disable() (PR_PRPE |= (uint8_t)PR_USART0_bm)
1814:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartf0_enable()  (PR_PRPF &= (uint8_t)~(PR_USART0_bm))
1815:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartf0_disable() (PR_PRPF |= (uint8_t)PR_USART0_bm)
1816:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1817:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spic_enable()     (PR_PRPC &= (uint8_t)~(PR_SPI_bm))
1818:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spic_disable()    (PR_PRPC |= (uint8_t)PR_SPI_bm)
1819:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spid_enable()     (PR_PRPD &= (uint8_t)~(PR_SPI_bm))
1820:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spid_disable()    (PR_PRPD |= (uint8_t)PR_SPI_bm)
1821:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spie_enable()     (PR_PRPE &= (uint8_t)~(PR_SPI_bm))
1822:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spie_disable()    (PR_PRPE |= (uint8_t)PR_SPI_bm)
1823:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spif_enable()     (PR_PRPF &= (uint8_t)~(PR_SPI_bm))
1824:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spif_disable()    (PR_PRPF |= (uint8_t)PR_SPI_bm)
1825:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1826:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresc_enable()     (PR_PRPC &= (uint8_t)~(PR_HIRES_bm))
1827:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresc_disable()    (PR_PRPC |= (uint8_t)PR_HIRES_bm)
1828:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresd_enable()     (PR_PRPD &= (uint8_t)~(PR_HIRES_bm))
1829:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresd_disable()    (PR_PRPD |= (uint8_t)PR_HIRES_bm)
1830:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hirese_enable()     (PR_PRPE &= (uint8_t)~(PR_HIRES_bm))
1831:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hirese_disable()    (PR_PRPE |= (uint8_t)PR_HIRES_bm)
1832:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresf_enable()     (PR_PRPF &= (uint8_t)~(PR_HIRES_bm))
1833:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresf_disable()    (PR_PRPF |= (uint8_t)PR_HIRES_bm)
1834:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1835:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC1_bm))
1836:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1c_disable()    (PR_PRPC |= (uint8_t)PR_TC1_bm)
1837:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC1_bm))
1838:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1d_disable()    (PR_PRPD |= (uint8_t)PR_TC1_bm)
1839:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC1_bm))
1840:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1e_disable()    (PR_PRPE |= (uint8_t)PR_TC1_bm)
1841:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC1_bm))
1842:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1f_disable()    (PR_PRPF |= (uint8_t)PR_TC1_bm)
1843:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1844:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0c_enable()  (PR_PRPC &= (uint8_t)~(PR_TC0_bm))
1845:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0c_disable() (PR_PRPC |= (uint8_t)PR_TC0_bm)
1846:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0d_enable()  (PR_PRPD &= (uint8_t)~(PR_TC0_bm))
1847:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0d_disable() (PR_PRPD |= (uint8_t)PR_TC0_bm)
1848:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0e_enable()  (PR_PRPE &= (uint8_t)~(PR_TC0_bm))
1849:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0e_disable() (PR_PRPE |= (uint8_t)PR_TC0_bm)
1850:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0f_enable()  (PR_PRPF &= (uint8_t)~(PR_TC0_bm))
1851:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0f_disable() (PR_PRPF |= (uint8_t)PR_TC0_bm)
1852:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1853:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1854:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1855:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN &= (uint8_t)~(PR_CTM_bm|PR_EBI_bm|PR_AES_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1856:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1857:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPB &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1858:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1859:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1860:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1861:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPF &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1862:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     } while(0)
1863:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1864:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1865:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1866:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN |= (uint8_t)(PR_CTM_bm|PR_EBI_bm|PR_AES_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1867:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1868:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPB |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1869:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1870:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1871:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1872:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPF |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1873:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     } while(0)
1874:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1875:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega640__) \
1876:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega1280__) \
1877:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega1281__) \
1878:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega2560__) \
1879:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega2561__) 
1880:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1881:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
1882:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
1883:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1884:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1885:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1886:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1887:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1888:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1889:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1890:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1891:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1892:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1893:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1894:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1895:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1896:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
1897:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
1898:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1899:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
1900:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
1901:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1902:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer4_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM4))
1903:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer4_disable()  (PRR1 |= (uint8_t)(1 << PRTIM4))
1904:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1905:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer5_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM5))
1906:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer5_disable()  (PRR1 |= (uint8_t)(1 << PRTIM5))
1907:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1908:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
1909:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
1910:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1911:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
1912:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
1913:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1914:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart2_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART2))
1915:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart2_disable()  (PRR1 |= (uint8_t)(1 << PRUSART2))
1916:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1917:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart3_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART3))
1918:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart3_disable()  (PRR1 |= (uint8_t)(1 << PRUSART3))
1919:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1920:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1921:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
1922:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
1923:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)|(1<<PRUSART2)|
1924:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
1925:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1926:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1927:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
1928:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
1929:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)|(1<<PRUSART2)|(
1930:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
1931:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1932:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1933:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega128RFA1__)
1934:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1935:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
1936:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
1937:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1938:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1939:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1940:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1941:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1942:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1943:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1944:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1945:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1946:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1947:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1948:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1949:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1950:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
1951:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
1952:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1953:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
1954:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
1955:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1956:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer4_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM4))
1957:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer4_disable()  (PRR1 |= (uint8_t)(1 << PRTIM4))
1958:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1959:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer5_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM5))
1960:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer5_disable()  (PRR1 |= (uint8_t)(1 << PRTIM5))
1961:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1962:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
1963:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
1964:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1965:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
1966:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
1967:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1968:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1969:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
1970:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
1971:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)); \
1972:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
1973:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1974:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1975:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
1976:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
1977:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)); \
1978:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
1979:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1980:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega256RFR2__) \
1981:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega128RFR2__) \
1982:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64RFR2__) \
1983:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega256RFA2__) \
1984:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega128RFA2__) \
1985:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64RFA2__) 
1986:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1987:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()           (PRR0 &= (uint8_t)~(1 << PRADC))
1988:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()          (PRR0 |= (uint8_t)(1 << PRADC))
1989:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1990:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()        (PRR0 &= (uint8_t)~(1 << PRUSART0))
1991:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()       (PRR0 |= (uint8_t)(1 << PRUSART0))
1992:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1993:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()           (PRR0 &= (uint8_t)~(1 << PRSPI))
1994:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()          (PRR0 |= (uint8_t)(1 << PRSPI))
1995:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1996:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()        (PRR0 &= (uint8_t)~(1 << PRTIM1))
1997:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()       (PRR0 |= (uint8_t)(1 << PRTIM1))
1998:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1999:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_pga_enable()           (PRR0 &= (uint8_t)~(1 << PRPGA))
2000:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_pga_disable()          (PRR0 |= (uint8_t)(1 << PRPGA))
2001:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2002:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()        (PRR0 &= (uint8_t)~(1 << PRTIM0))
2003:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()       (PRR0 |= (uint8_t)(1 << PRTIM0))
2004:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2005:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()        (PRR0 &= (uint8_t)~(1 << PRTIM2))
2006:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()       (PRR0 |= (uint8_t)(1 << PRTIM2))
2007:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2008:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()           (PRR0 &= (uint8_t)~(1 << PRTWI))
2009:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()          (PRR0 |= (uint8_t)(1 << PRTWI))
2010:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2011:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()        (PRR1 &= (uint8_t)~(1 << PRUSART1))
2012:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()       (PRR1 |= (uint8_t)(1 << PRUSART1))
2013:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2014:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()        (PRR1 &= (uint8_t)~(1 << PRTIM3))
2015:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()       (PRR1 |= (uint8_t)(1 << PRTIM3))
2016:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2017:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer4_enable()        (PRR1 &= (uint8_t)~(1 << PRTIM4))
2018:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer4_disable()       (PRR1 |= (uint8_t)(1 << PRTIM4))
2019:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2020:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer5_enable()        (PRR1 &= (uint8_t)~(1 << PRTIM5))
2021:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer5_disable()       (PRR1 |= (uint8_t)(1 << PRTIM5))
2022:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2023:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_transceiver_enable()   (PRR1 &= (uint8_t)~(1 << PRTRX24))
2024:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_transceiver_disable()  (PRR1 |= (uint8_t)(1 << PRTRX24))
2025:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2026:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ram0_enable()          (PRR2 &= (uint8_t)~(1 << PRRAM0))
2027:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ram0_disable()         (PRR2 |= (uint8_t)(1 << PRRAM0))
2028:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2029:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ram1_enable()          (PRR2 &= (uint8_t)~(1 << PRRAM1))
2030:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ram1_disable()         (PRR2 |= (uint8_t)(1 << PRRAM1))
2031:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2032:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ram2_enable()          (PRR2 &= (uint8_t)~(1 << PRRAM2))
2033:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ram2_disable()         (PRR2 |= (uint8_t)(1 << PRRAM2))
2034:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2035:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ram3_enable()          (PRR2 &= (uint8_t)~(1 << PRRAM3))
2036:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ram3_disable()         (PRR2 |= (uint8_t)(1 << PRRAM3))
2037:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2038:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2039:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2040:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
2041:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRUSART1)|(1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTRX24)); \
2042:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR2 &= (uint8_t)~((1<<PRRAM0)|(1<<PRRAM1)|(1<<PRRAM2)|(1<<PRRAM3)); \
2043:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2044:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2045:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2046:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2047:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
2048:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRUSART1)|(1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTRX24)); \
2049:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR2 |= (uint8_t)((1<<PRRAM0)|(1<<PRRAM1)|(1<<PRRAM2)|(1<<PRRAM3)); \
2050:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2051:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2052:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_AT90USB646__) \
2053:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB647__) \
2054:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB1286__) \
2055:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB1287__)
2056:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2057:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
2058:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
2059:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2060:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2061:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2062:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2063:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2064:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2065:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2066:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2067:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2068:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2069:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2070:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2071:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2072:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
2073:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
2074:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2075:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
2076:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
2077:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2078:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
2079:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
2080:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2081:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
2082:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
2083:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2084:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2085:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2086:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
2087:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
2088:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2089:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2090:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2091:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2092:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
2093:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
2094:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2095:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2096:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2097:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega32U4__) \
2098:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega16U4__)
2099:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2100:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2101:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
2102:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
2103:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2104:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
2105:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
2106:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2107:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2108:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2109:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2110:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2111:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2112:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2113:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2114:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2115:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2116:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2117:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2118:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2119:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
2120:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
2121:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2122:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
2123:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
2124:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2125:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
2126:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
2127:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2128:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
2129:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
2130:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2131:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2132:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2133:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRUSART0)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<P
2134:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
2135:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2136:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2137:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2138:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2139:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRUSART0)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PR
2140:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
2141:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2142:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2143:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2144:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega32U6__)
2145:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2146:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2147:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
2148:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
2149:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2150:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2151:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2152:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2153:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2154:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2155:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2156:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2157:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2158:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2159:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2160:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2161:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2162:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
2163:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
2164:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2165:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
2166:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
2167:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2168:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
2169:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
2170:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2171:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
2172:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
2173:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2174:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2175:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2176:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
2177:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
2178:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2179:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2180:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2181:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2182:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
2183:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
2184:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2185:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2186:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2187:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_AT90PWM1__)
2188:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2189:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2190:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2191:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2192:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2193:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2194:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2195:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2196:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2197:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2198:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2199:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2200:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2201:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* Power Stage Controller 0 */
2202:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc0_enable()     (PRR &= (uint8_t)~(1 << PRPSC0))
2203:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc0_disable()    (PRR |= (uint8_t)(1 << PRPSC0))
2204:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2205:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* Power Stage Controller 1 */
2206:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc1_enable()     (PRR &= (uint8_t)~(1 << PRPSC1))
2207:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc1_disable()    (PRR |= (uint8_t)(1 << PRPSC1))
2208:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2209:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* Power Stage Controller 2 */
2210:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc2_enable()     (PRR &= (uint8_t)~(1 << PRPSC2))
2211:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc2_disable()    (PRR |= (uint8_t)(1 << PRPSC2))
2212:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2213:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)|(1
2214:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<
2215:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2216:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2217:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_AT90PWM2__) \
2218:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM2B__) \
2219:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM3__) \
2220:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM3B__) \
2221:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM216__) \
2222:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM316__)
2223:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2224:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2225:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2226:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2227:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2228:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2229:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2230:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_AT90PWM216__) || defined(__AVR_AT90PWM316__)
2231:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2232:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart_enable()    (PRR &= (uint8_t)~(1 << PRUSART))
2233:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart_disable()   (PRR |= (uint8_t)(1 << PRUSART))
2234:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2235:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #else
2236:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2237:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart_enable()    (PRR &= (uint8_t)~(1 << PRUSART0))
2238:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart_disable()   (PRR |= (uint8_t)(1 << PRUSART0))
2239:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2240:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
2241:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2242:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2243:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2244:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2245:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2246:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2247:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2248:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* Power Stage Controller 0 */
2249:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc0_enable()     (PRR &= (uint8_t)~(1 << PRPSC0))
2250:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc0_disable()    (PRR |= (uint8_t)(1 << PRPSC0))
2251:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2252:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* Power Stage Controller 1 */
2253:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc1_enable()     (PRR &= (uint8_t)~(1 << PRPSC1))
2254:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc1_disable()    (PRR |= (uint8_t)(1 << PRPSC1))
2255:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2256:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* Power Stage Controller 2 */
2257:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc2_enable()     (PRR &= (uint8_t)~(1 << PRPSC2))
2258:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc2_disable()    (PRR |= (uint8_t)(1 << PRPSC2))
2259:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2260:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_AT90PWM216__) || defined(__AVR_AT90PWM316__)
2261:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2262:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART)|(1<<PRTIM0)|(
2263:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART)|(1<<PRTIM0)|(1
2264:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2265:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #else
2266:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2267:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|
2268:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|(
2269:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2270:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
2271:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2272:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2273:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_AT90PWM81__) \
2274:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM161__)
2275:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2276:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2277:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2278:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2279:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2280:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2281:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2282:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2283:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2284:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2285:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* Reduced Power Stage Controller */
2286:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_pscr_enable()     (PRR &= (uint8_t)~(1 << PRPSCR))
2287:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_pscr_disable()    (PRR |= (uint8_t)(1 << PRPSCR))
2288:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2289:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* Power Stage Controller 2 */
2290:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc2_enable()     (PRR &= (uint8_t)~(1 << PRPSC2))
2291:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc2_disable()    (PRR |= (uint8_t)(1 << PRPSC2))
2292:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2293:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRPSCR)|(1
2294:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRPSCR)|(1<
2295:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2296:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2297:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega165__) \
2298:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega165A__) \
2299:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega165P__) \
2300:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega165PA__) \
2301:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega325__) \
2302:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega325A__) \
2303:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega325P__) \
2304:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega325PA__) \
2305:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3250__) \
2306:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3250A__) \
2307:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3250P__) \
2308:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3250PA__) \
2309:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega645__) \
2310:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega645A__) \
2311:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega645P__) \
2312:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6450__) \
2313:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6450A__) \
2314:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6450P__)
2315:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2316:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2317:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2318:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2319:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2320:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2321:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2322:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR &= (uint8_t)~(1 << PRUSART0))
2323:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR |= (uint8_t)(1 << PRUSART0))
2324:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2325:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2326:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2327:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2328:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1))
2329:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1)))
2330:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2331:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2332:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega169__) \
2333:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega169A__) \
2334:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega169P__) \
2335:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega169PA__) \
2336:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega329__) \
2337:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega329A__) \
2338:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega329P__) \
2339:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega329PA__) \
2340:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3290__) \
2341:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3290A__) \
2342:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3290P__) \
2343:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3290PA__) \
2344:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega649__) \
2345:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega649A__) \
2346:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega649P__) \
2347:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6490__) \
2348:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6490A__) \
2349:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6490P__)
2350:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2351:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2352:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2353:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2354:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2355:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2356:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2357:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR &= (uint8_t)~(1 << PRUSART0))
2358:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR |= (uint8_t)(1 << PRUSART0))
2359:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2360:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2361:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2362:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2363:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_lcd_enable()      (PRR &= (uint8_t)~(1 << PRLCD))
2364:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_lcd_disable()     (PRR |= (uint8_t)(1 << PRLCD))
2365:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2366:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1)|
2367:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1)|(
2368:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2369:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2370:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega164A__) \
2371:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega164P__) \
2372:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega324A__) \
2373:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega324P__) \
2374:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega324PA__) \
2375:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega644P__) \
2376:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega644A__) \
2377:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega644PA__)
2378:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2379:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
2380:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
2381:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2382:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2383:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2384:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2385:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
2386:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
2387:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2388:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART1))
2389:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR0 |= (uint8_t)(1 << PRUSART1))
2390:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2391:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2392:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2393:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2394:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2395:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2396:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2397:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
2398:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
2399:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2400:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2401:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2402:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2403:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRUSART
2404:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRUSART1
2405:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2406:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2407:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega644__) \
2408:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega164PA__)
2409:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2410:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
2411:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
2412:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2413:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2414:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2415:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2416:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
2417:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
2418:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2419:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2420:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2421:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2422:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2423:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2424:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2425:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
2426:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
2427:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2428:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2429:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2430:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2431:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)
2432:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|
2433:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2434:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2435:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega406__)
2436:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2437:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2438:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2439:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2440:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2441:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2442:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2443:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2444:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2445:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2446:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* Voltage ADC */
2447:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_vadc_enable()     (PRR0 &= (uint8_t)~(1 << PRVADC))
2448:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_vadc_disable()    (PRR0 |= (uint8_t)(1 << PRVADC))
2449:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2450:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC))
2451:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC)))
2452:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2453:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2454:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega48__) \
2455:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega48A__) \
2456:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega48PA__) \
2457:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega48P__) \
2458:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega88__) \
2459:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega88A__) \
2460:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega88P__) \
2461:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega88PA__) \
2462:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega168__) \
2463:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega168A__) \
2464:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega168P__) \
2465:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega168PA__) \
2466:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega328__) \
2467:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega328P__) \
2468:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny828__) \
2469:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny841__)
2470:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2471:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2472:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2473:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2474:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2475:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2476:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2477:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR &= (uint8_t)~(1 << PRUSART0))
2478:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR |= (uint8_t)(1 << PRUSART0))
2479:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2480:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATtiny841__)
2481:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2482:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR &= (uint8_t)~(1 << PRUSART1))
2483:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR |= (uint8_t)(1 << PRUSART1))
2484:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2485:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
2486:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2487:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2488:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2489:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2490:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2491:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2492:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2493:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if !defined(__AVR_ATtiny828__)
2494:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2495:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR &= (uint8_t)~(1 << PRTIM2))
2496:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR |= (uint8_t)(1 << PRTIM2))
2497:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2498:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
2499:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2500:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR &= (uint8_t)~(1 << PRTWI))
2501:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR |= (uint8_t)(1 << PRTWI))
2502:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2503:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATtiny828__)
2504:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2505:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|
2506:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|(
2507:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2508:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATtiny841__)
2509:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2510:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()	(PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRUSART1)|(1<
2511:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()      (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRUSART1
2512:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2513:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #else
2514:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2515:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|
2516:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|(
2517:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2518:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
2519:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2520:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATtiny48__) \
2521:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny88__)
2522:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2523:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2524:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2525:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2526:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2527:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2528:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2529:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2530:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2531:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2532:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2533:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2534:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2535:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR &= (uint8_t)~(1 << PRTWI))
2536:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR |= (uint8_t)(1 << PRTWI))
2537:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2538:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)|(1
2539:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<
2540:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2541:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   
2542:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATtiny24__) \
2543:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny24A__) \
2544:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny44__) \
2545:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny44A__) \
2546:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny84__) \
2547:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny84A__) \
2548:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny25__) \
2549:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny45__) \
2550:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny85__) \
2551:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny261__) \
2552:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny261A__) \
2553:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny461__) \
2554:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny461A__) \
2555:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny861__) \
2556:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny861A__) \
2557:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny43U__)
2558:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2559:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2560:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2561:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2562:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2563:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2564:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2565:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2566:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2567:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2568:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* Universal Serial Interface */
2569:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usi_enable()      (PRR &= (uint8_t)~(1 << PRUSI))
2570:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usi_disable()     (PRR |= (uint8_t)(1 << PRUSI))
2571:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2572:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRUSI)))
2573:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRUSI)))
2574:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2575:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega1284__)
2576:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2577:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
2578:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
2579:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2580:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2581:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2582:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2583:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2584:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2585:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2586:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2587:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2588:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2589:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2590:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2591:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2592:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
2593:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
2594:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2595:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
2596:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
2597:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2598:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
2599:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
2600:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2601:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2602:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2603:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
2604:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~(1<<PRTIM3); \
2605:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2606:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2607:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2608:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2609:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
2610:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)(1<<PRTIM3); \
2611:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2612:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2613:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega1284P__)
2614:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2615:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2616:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
2617:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
2618:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2619:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2620:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2621:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2622:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2623:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2624:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2625:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2626:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2627:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2628:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2629:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2630:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2631:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
2632:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
2633:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2634:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
2635:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
2636:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2637:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
2638:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
2639:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2640:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART1))
2641:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR0 |= (uint8_t)(1 << PRUSART1))
2642:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2643:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2644:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2645:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
2646:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~(1<<PRTIM3); \
2647:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2648:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2649:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2650:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2651:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
2652:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)(1<<PRTIM3); \
2653:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2654:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2655:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2656:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega32HVB__) \
2657:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32HVBREVB__) \
2658:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega16HVB__) \
2659:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega16HVBREVB__) \
2660:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega26HVG__) \
2661:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega48HVF__)
2662:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2663:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2664:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2665:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2666:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2667:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2668:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2669:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2670:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2671:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2672:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2673:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* Voltage ADC */
2674:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_vadc_enable()     (PRR0 &= (uint8_t)~(1 << PRVADC))
2675:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_vadc_disable()    (PRR0 |= (uint8_t)(1 << PRVADC))
2676:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2677:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2678:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2679:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2680:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_vrm_enable()      (PRR0 &= (uint8_t)~(1 << PRVRM))
2681:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_vrm_disable()     (PRR0 |= (uint8_t)(1 << PRVRM))
2682:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2683:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC)|
2684:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC)|(
2685:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2686:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2687:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined (__AVR_ATA5790__) \
2688:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATA5790N__) \
2689:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATA5795__)
2690:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2691:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** // Enable the voltage monitor 
2692:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_vmonitor_enable()          (PRR0 &= (uint8_t)~(1 << PRVM))
2693:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_vmonitor_disable()         (PRR0 |= (uint8_t)(1 << PRVM))
2694:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2695:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_irdriver_enable()          (PRR0 &= (uint8_t)~(1 << PRDS))
2696:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_irdriver_disable()         (PRR0 |= (uint8_t)(1 << PRDS))
2697:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2698:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_crypto_enable()            (PRR0 &= (uint8_t)~(1 << PRCU))
2699:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_crypto_disable()           (PRR0 |= (uint8_t)(1 << PRCU))
2700:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2701:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timermodulator_enable()    (PRR0 &= (uint8_t)~(1 << PRTM))
2702:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timermodulator_disable()   (PRR0 |= (uint8_t)(1 << PRTM))
2703:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2704:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()            (PRR0 &= (uint8_t)~(1 << PRT1))
2705:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()           (PRR0 |= (uint8_t)(1 << PRT1))
2706:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2707:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()            (PRR0 &= (uint8_t)~(1 << PRT2))
2708:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()           (PRR0 |= (uint8_t)(1 << PRT2))
2709:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2710:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()            (PRR0 &= (uint8_t)~(1 << PRT3))
2711:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()           (PRR0 |= (uint8_t)(1 << PRT3))
2712:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2713:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()               (PRR1 &= (uint8_t)~(1 << PRSPI))
2714:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()              (PRR1 |= (uint8_t)(1 << PRSPI))
2715:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2716:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_cinterface_enable()        (PRR1 &= (uint8_t)~(1 << PRCI))
2717:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_cinterface_disable()       (PRR1 |= (uint8_t)(1 << PRCI))
2718:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2719:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATA5790__) \
2720:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATA5790N__)
2721:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2722:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_lfreceiver_enable()        (PRR0 &= (uint8_t)~(1 << PRLFR))            
2723:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_lfreceiver_disable()       (PRR0 |= (uint8_t)(1 << PRLFR))            
2724:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2725:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2726:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2727:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRVM)|(1<<PRDS)|(1<<PRCU)|(1<<PRTM)|(1<<PRT3)|(1<<PRT2)|(1<<PRT1)|(1<<PR
2728:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRSPI)|(1<<PRCI)); \
2729:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2730:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2731:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2732:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2733:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRVM)|(1<<PRDS)|(1<<PRCU)|(1<<PRTM)|(1<<PRT3)|(1<<PRT2)|(1<<PRT1)|(1<<PRL
2734:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRSPI)|(1<<PRCI)); \
2735:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2736:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2737:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATA5795__)
2738:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2739:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2740:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2741:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRVM)|(1<<PRDS)|(1<<PRCU)|(1<<PRTM)|(1<<PRT3)|(1<<PRT2)|(1<<PRT1)); \
2742:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRSPI)|(1<<PRCI)); \
2743:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2744:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2745:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2746:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2747:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRVM)|(1<<PRDS)|(1<<PRCU)|(1<<PRTM)|(1<<PRT3)|(1<<PRT2)|(1<<PRT1)); \
2748:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRSPI)|(1<<PRCI)); \
2749:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2750:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2751:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
2752:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2753:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATA5831__)
2754:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2755:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_clock_output_enable()     (PRR0 &= (uint8_t)~(1 << PRCO))
2756:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_clock_output_disable()    (PRR0 |= (uint8_t)(1 << PRCO))
2757:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2758:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_voltage_monitor_enable()  (PRR0 &= (uint8_t)~(1 << PRVM))
2759:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_voltage_monitor_disable() (PRR0 |= (uint8_t)(1 << PRVM))
2760:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2761:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_crc_enable()              (PRR0 &= (uint8_t)~(1 << PRCRC))
2762:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_crc_disable()             (PRR0 |= (uint8_t)(1 << PRCRC))
2763:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2764:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_transmit_dsp_control_enable()     (PRR0 &= (uint8_t)~(1 << PRTXDC))
2765:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_transmit_dsp_control_disable()    (PRR0 |= (uint8_t)(1 << PRTXDC))
2766:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2767:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_receive_dsp_control_enable()      (PRR0 &= (uint8_t)~(1 << PRRXDC))
2768:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_receive_dsp_control_disable()     (PRR0 |= (uint8_t)(1 << PRRXDC))
2769:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2770:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()              (PRR0 &= (uint8_t)~(1 << PRSPI))
2771:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()             (PRR0 |= (uint8_t)(1 << PRSPI))
2772:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2773:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()           (PRR1 &= (uint8_t)~(1 << PRT1))
2774:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()          (PRR1 |= (uint8_t)(1 << PRT1))
2775:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2776:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()           (PRR1 &= (uint8_t)~(1 << PRT2))
2777:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()          (PRR1 |= (uint8_t)(1 << PRT2))
2778:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2779:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()           (PRR1 &= (uint8_t)~(1 << PRT3))
2780:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()          (PRR1 |= (uint8_t)(1 << PRT3))
2781:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2782:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer4_enable()           (PRR1 &= (uint8_t)~(1 << PRT4))
2783:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer4_disable()          (PRR1 |= (uint8_t)(1 << PRT4))
2784:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2785:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer5_enable()           (PRR1 &= (uint8_t)~(1 << PRT5))
2786:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer5_disable()          (PRR1 |= (uint8_t)(1 << PRT5))
2787:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2788:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_sequencer_state_machine_enable()  (PRR2 &= (uint8_t)~(1 << PRSSM))
2789:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_sequencer_state_machine_disable() (PRR2 |= (uint8_t)(1 << PRSSM))
2790:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2791:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tx_modulator_enable()     (PRR2 &= (uint8_t)~(1 << PRTM))
2792:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tx_modulator_disable()    (PRR2 |= (uint8_t)(1 << PRTM))
2793:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2794:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rssi_buffer_enable()      (PRR2 &= (uint8_t)~(1 << PRRS))
2795:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rssi_buffer_disable()     (PRR2 |= (uint8_t)(1 << PRRS))
2796:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2797:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_id_scan_enable()          (PRR2 &= (uint8_t)~(1 << PRIDS))
2798:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_id_scan_disable()         (PRR2 |= (uint8_t)(1 << PRIDS))
2799:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2800:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_data_fifo_enable()        (PRR2 &= (uint8_t)~(1 << PRDF))
2801:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_data_fifo_disable()       (PRR2 |= (uint8_t)(1 << PRDF))
2802:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2803:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_preamble_rssi_fifo_enable()       (PRR2 &= (uint8_t)~(1 << PRSF))
2804:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_preamble_rssi_fifo_disable()      (PRR2 |= (uint8_t)(1 << PRSF))
2805:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2806:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rx_buffer_A_enable()      (PRR2 &= (uint8_t)~(1 << PRXA))
2807:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rx_buffer_A_disable()     (PRR2 |= (uint8_t)(1 << PRXA))
2808:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2809:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rx_buffer_B_enable()      (PRR2 &= (uint8_t)~(1 << PRXB))
2810:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rx_buffer_B_disable()     (PRR2 |= (uint8_t)(1 << PRXB))
2811:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2812:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2813:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2814:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1 << PRCO) | (1 << PRVM) | (1 << PRCRC) | (1 << PRTXDC) | (1 << PRRXDC) | (
2815:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1 << PRT1) | (1 << PRT2) | (1 << PRT3) | (1 << PRT4) | (1 << PRT5)); \
2816:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR2 &= (uint8_t)~((1 << PRSSM) | (1 << PRTM) | (1 << PRRS) | (1 << PRIDS) | (1 << PRDF) | (1 <
2817:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2818:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2819:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2820:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2821:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1 << PRCO) | (1 << PRVM) | (1 << PRCRC) | (1 << PRTXDC) | (1 << PRRXDC) | (1
2822:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1 << PRT1) | (1 << PRT2) | (1 << PRT3) | (1 << PRT4) | (1 << PRT5)); \
2823:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR2 |= (uint8_t)((1 << PRSSM) | (1 << PRTM) | (1 << PRRS) | (1 << PRIDS) | (1 << PRDF) | (1 <<
2824:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2825:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2826:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega64HVE__)
2827:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2828:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2829:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_lin_enable()      (PRR0 &= (uint8_t)~(1 << PRLIN))
2830:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_lin_disable()     (PRR0 |= (uint8_t)(1 << PRLIN))
2831:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2832:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2833:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2834:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2835:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2836:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2837:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2838:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2839:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2840:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2841:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRLIN)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRSPI)))
2842:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRLIN)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRSPI)))
2843:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2844:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega16M1__) \
2845:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32C1__) \
2846:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32M1__) \
2847:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64C1__) \
2848:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64M1__)
2849:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2850:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2851:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2852:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2853:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_lin_enable()      (PRR &= (uint8_t)~(1 << PRLIN))
2854:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_lin_disable()     (PRR |= (uint8_t)(1 << PRLIN))
2855:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2856:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2857:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2858:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2859:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2860:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2861:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2862:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2863:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2864:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2865:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc_enable()      (PRR &= (uint8_t)~(1 << PRPSC))
2866:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc_disable()     (PRR |= (uint8_t)(1 << PRPSC))
2867:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2868:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_can_enable()      (PRR &= (uint8_t)~(1 << PRCAN))
2869:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_can_disable()     (PRR |= (uint8_t)(1 << PRCAN))
2870:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2871:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRLIN)|(1<<PRSPI)|(1<<PRTIM0)|(1<
2872:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRLIN)|(1<<PRSPI)|(1<<PRTIM0)|(1<<
2873:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2874:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2875:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATtiny167__) \
2876:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny87__) \
2877:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATA5505__) \
2878:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATA5272__)
2879:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2880:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2881:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2882:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2883:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usi_enable()      (PRR &= (uint8_t)~(1 << PRUSI))
2884:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usi_disable()     (PRR |= (uint8_t)(1 << PRUSI))
2885:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2886:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2887:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2888:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2889:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2890:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2891:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2892:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2893:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2894:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2895:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_lin_enable()      (PRR &= (uint8_t)~(1 << PRLIN))
2896:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_lin_disable()     (PRR |= (uint8_t)(1 << PRLIN))
2897:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2898:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRUSI)|(1<<PRTIM0)|(1<<PRTIM1)|(1
2899:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRUSI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<
2900:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2901:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2902:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATtiny1634__)
2903:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2904:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2905:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2906:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2907:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()      (PRR &= (uint8_t)~(1 << PRUSART0))
2908:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()     (PRR |= (uint8_t)(1 << PRUSART0))
2909:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2910:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()      (PRR &= (uint8_t)~(1 << PRUSART1))
2911:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()     (PRR |= (uint8_t)(1 << PRUSART1))
2912:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2913:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usi_enable()      (PRR &= (uint8_t)~(1 << PRUSI))
2914:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usi_disable()     (PRR |= (uint8_t)(1 << PRUSI))
2915:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2916:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2917:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2918:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2919:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2920:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2921:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2922:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR &= (uint8_t)~(1 << PRTWI))
2923:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR |= (uint8_t)(1 << PRTWI))
2924:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2925:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1 << PRTWI)|(1 << PRUSI)|(1 << PRTIM0)|(1 << PR
2926:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1 << PRTWI)|(1 << PRUSI)|(1 << PRTIM0)|(1 << PRT
2927:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2928:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2929:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_AT90USB82__) \
2930:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB162__) \
2931:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega8U2__) \
2932:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega16U2__) \
2933:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32U2__)
2934:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2935:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2936:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2937:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2938:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2939:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2940:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2941:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2942:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2943:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2944:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
2945:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
2946:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2947:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
2948:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
2949:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2950:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2951:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2952:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)); \
2953:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRUSB)|(1<<PRUSART1)); \
2954:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2955:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2956:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2957:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2958:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)); \
2959:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRUSB)|(1<<PRUSART1)); \
2960:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2961:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2962:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2963:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_AT90SCR100__)
2964:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2965:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
2966:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
2967:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2968:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2969:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2970:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2971:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2972:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2973:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2974:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2975:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2976:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2977:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
2978:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
2979:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2980:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2981:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2982:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2983:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usbh_enable()     (PRR1 &= (uint8_t)~(1 << PRUSBH))
2984:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usbh_disable()    (PRR1 |= (uint8_t)(1 << PRUSBH))
2985:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2986:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
2987:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
2988:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2989:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hsspi_enable()    (PRR1 &= (uint8_t)~(1 << PRHSSPI))
2990:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hsspi_disable()   (PRR1 |= (uint8_t)(1 << PRHSSPI))
2991:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2992:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_sci_enable()      (PRR1 &= (uint8_t)~(1 << PRSCI))
2993:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_sci_disable()     (PRR1 |= (uint8_t)(1 << PRSCI))
2994:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2995:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aes_enable()      (PRR1 &= (uint8_t)~(1 << PRAES))
2996:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aes_disable()     (PRR1 |= (uint8_t)(1 << PRAES))
2997:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2998:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_kb_enable()       (PRR1 &= (uint8_t)~(1 << PRKB))
2999:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_kb_disable()      (PRR1 |= (uint8_t)(1 << PRKB))
3000:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3001:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
3002:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
3003:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRUSART0)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRTIM0)|(1<<PRTIM2)|(1<<PRTWI)); \
3004:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRUSBH)|(1<<PRUSB)|(1<<PRHSSPI)|(1<<PRSCI)|(1<<PRAES)|(1<<PRKB)); \
3005:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
3006:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3007:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
3008:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
3009:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRUSART0)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRTIM0)|(1<<PRTIM2)|(1<<PRTWI)); \
3010:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRUSBH)|(1<<PRUSB)|(1<<PRHSSPI)|(1<<PRSCI)|(1<<PRAES)|(1<<PRKB)); \
3011:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
3012:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3013:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3014:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATtiny4__) \
3015:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny5__) \
3016:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny9__) \
3017:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny10__) \
3018:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny13A__) \
3019:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3020:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()   (PRR &= (uint8_t)~(1 << PRADC))
3021:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()  (PRR |= (uint8_t)(1 << PRADC))
3022:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3023:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
3024:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
3025:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3026:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRTIM0)))
3027:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRTIM0)))
3028:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3029:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3030:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATtiny20__) \
3031:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny40__)
3032:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3033:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()   (PRR &= (uint8_t)~(1 << PRADC))
3034:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()  (PRR |= (uint8_t)(1 << PRADC))
3035:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3036:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
3037:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
3038:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3039:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
3040:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
3041:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3042:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()   (PRR &= (uint8_t)~(1 << PRSPI))
3043:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()  (PRR |= (uint8_t)(1 << PRSPI))
3044:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3045:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()   (PRR &= (uint8_t)~(1 << PRTWI))
3046:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()  (PRR |= (uint8_t)(1 << PRTWI))
3047:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3048:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRSPI)|(1
3049:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRSPI)|(1<
3050:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3051:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
3052:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3053:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3054:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_AT90CAN32__) \
3055:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90CAN64__) \
3056:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90CAN128__) \
3057:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM1__) \
3058:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM2__) \
3059:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM2B__) \
3060:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM3__) \
3061:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM3B__) \
3062:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM81__) \
3063:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM161__) \
3064:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM216__) \
3065:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM316__) \
3066:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90SCR100__) \
3067:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB646__) \
3068:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB647__) \
3069:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB82__) \
3070:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB1286__) \
3071:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB1287__) \
3072:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB162__) \
3073:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATA5505__) \
3074:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATA5272__) \
3075:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega1280__) \
3076:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega1281__) \
3077:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega1284__) \
3078:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega128RFA1__) \
3079:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega128RFA2__) \
3080:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega128RFR2__) \
3081:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega1284P__) \
3082:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega162__) \
3083:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega164A__) \
3084:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega164P__) \
3085:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega164PA__) \
3086:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega165__) \
3087:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega165A__) \
3088:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega165P__) \
3089:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega165PA__) \
3090:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega168__) \
3091:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega168A__) \
3092:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega168P__) \
3093:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega168PA__) \
3094:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega169__) \
3095:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega169A__) \
3096:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega169P__) \
3097:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega169PA__) \
3098:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega16M1__) \
3099:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega16U2__) \
3100:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega324PA__) \
3101:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega16U4__) \
3102:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega2560__) \
3103:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega2561__) \
3104:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega256RFA2__) \
3105:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega256RFR2__) \
3106:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega324A__) \
3107:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega324P__) \
3108:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega325__) \
3109:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega325A__) \
3110:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega325P__) \
3111:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega325PA__) \
3112:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3250__) \
3113:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3250A__) \
3114:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3250P__) \
3115:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3250PA__) \
3116:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega328__) \
3117:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega328P__) \
3118:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega329__) \
3119:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega329A__) \
3120:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega329P__) \
3121:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega329PA__) \
3122:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3290__) \
3123:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3290A__) \
3124:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3290P__) \
3125:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3290PA__) \
3126:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32C1__) \
3127:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32M1__) \
3128:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32U2__) \
3129:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32U4__) \
3130:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32U6__) \
3131:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega48__) \
3132:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega48A__) \
3133:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega48PA__) \
3134:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega48P__) \
3135:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega640__) \
3136:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega649P__) \
3137:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega644__) \
3138:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega644A__) \
3139:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega644P__) \
3140:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega644PA__) \
3141:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega645__) \
3142:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega645A__) \
3143:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega645P__) \
3144:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6450__) \
3145:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6450A__) \
3146:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6450P__) \
3147:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega649__) \
3148:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega649A__) \
3149:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64M1__) \
3150:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64C1__) \
3151:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega88A__) \
3152:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega88PA__) \
3153:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6490__) \
3154:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6490A__) \
3155:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6490P__) \
3156:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64RFA2__) \
3157:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64RFR2__) \
3158:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega88__) \
3159:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega88P__) \
3160:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega8U2__) \
3161:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega16U2__) \
3162:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32U2__) \
3163:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny48__) \
3164:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny88__) \
3165:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny87__) \
3166:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny167__) \
3167:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__DOXYGEN__)
3168:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3169:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3170:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /** \addtogroup avr_power
3171:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3172:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** Some of the newer AVRs contain a System Clock Prescale Register (CLKPR) that
3173:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** allows you to decrease the system clock frequency and the power consumption
3174:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** when the need for processing power is low. Below are two macros and an
3175:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** enumerated type that can be used to interface to the Clock Prescale Register.
3176:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3177:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** \note Not all AVR devices have a Clock Prescale Register. On those devices
3178:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** without a Clock Prescale Register, these macros are not available.
3179:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** */
3180:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3181:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3182:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /** \addtogroup avr_power
3183:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** \code 
3184:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** typedef enum
3185:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** {
3186:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_1 = 0,
3187:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_2 = 1,
3188:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_4 = 2,
3189:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_8 = 3,
3190:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_16 = 4,
3191:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_32 = 5,
3192:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_64 = 6,
3193:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_128 = 7,
3194:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_256 = 8,
3195:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_1_rc = 15, // ATmega128RFA1 only
3196:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** } clock_div_t;
3197:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** \endcode
3198:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** Clock prescaler setting enumerations.
3199:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3200:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** */
3201:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** typedef enum
3202:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** {
3203:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_1 = 0,
3204:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_2 = 1,
3205:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_4 = 2,
3206:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_8 = 3,
3207:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_16 = 4,
3208:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_32 = 5,
3209:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_64 = 6,
3210:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_128 = 7,
3211:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_256 = 8
3212:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATmega128RFA1__) \
3213:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega256RFA2__) \
3214:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega128RFA2__) \
3215:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64RFA2__) \
3216:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega256RFR2__) \
3217:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega128RFR2__) \
3218:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64RFR2__)
3219:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     , clock_div_1_rc = 15
3220:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
3221:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** } clock_div_t;
3222:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3223:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3224:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** static __inline__ void clock_prescale_set(clock_div_t) __attribute__((__always_inline__));
3225:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3226:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /** \addtogroup avr_power
3227:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** \code clock_prescale_set(x) \endcode
3228:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3229:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** Set the clock prescaler register select bits, selecting a system clock
3230:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** division setting. This function is inlined, even if compiler
3231:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** optimizations are disabled.
3232:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3233:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** The type of x is clock_div_t.
3234:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** */
3235:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** void clock_prescale_set(clock_div_t __x)
3236:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** {
3237:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     uint8_t __tmp = _BV(CLKPCE);
3238:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     __asm__ __volatile__ (
 1435               		.loc 3 3238 0
 1436 001e 90E8      		ldi r25,lo8(-128)
 1437 0020 80E0      		ldi r24,lo8(0)
 1438               	/* #APP */
 1439               	 ;  3238 "c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../..
 1440 0022 0FB6      		in __tmp_reg__,__SREG__
 1441 0024 F894      		cli
 1442 0026 9093 6100 		sts 97, r25
 1443 002a 8093 6100 		sts 97, r24
 1444 002e 0FBE      		out __SREG__, __tmp_reg__
 1445               	 ;  0 "" 2
 1446               	/* #NOAPP */
 1447               	.LBE178:
 1448               	.LBE177:
 163:Caterina.c    **** 	MCUCR = (1 << IVCE);
 1449               		.loc 1 163 0
 1450 0030 31E0      		ldi r19,lo8(1)
 1451 0032 35BF      		out 85-32,r19
 164:Caterina.c    **** 	MCUCR = (1 << IVSEL);
 1452               		.loc 1 164 0
 1453 0034 82E0      		ldi r24,lo8(2)
 1454 0036 85BF      		out 85-32,r24
 166:Caterina.c    **** 	LED_SETUP();
 1455               		.loc 1 166 0
 1456 0038 3F9A      		sbi 39-32,7
 1457 003a 209A      		sbi 36-32,0
 1458 003c 559A      		sbi 42-32,5
 167:Caterina.c    **** 	CPU_PRESCALE(0); 
 1459               		.loc 1 167 0
 1460 003e 9093 6100 		sts 97,r25
 1461 0042 1092 6100 		sts 97,__zero_reg__
 168:Caterina.c    **** 	L_LED_OFF();
 1462               		.loc 1 168 0
 1463 0046 4798      		cbi 40-32,7
 169:Caterina.c    **** 	TX_LED_OFF();
 1464               		.loc 1 169 0
 1465 0048 5D9A      		sbi 43-32,5
 170:Caterina.c    **** 	RX_LED_OFF();
 1466               		.loc 1 170 0
 1467 004a 289A      		sbi 37-32,0
 178:Caterina.c    **** 	OCR1AH = 0;
 1468               		.loc 1 178 0
 1469 004c 1092 8900 		sts 137,__zero_reg__
 179:Caterina.c    **** 	OCR1AL = 250;
 1470               		.loc 1 179 0
 1471 0050 9AEF      		ldi r25,lo8(-6)
 1472 0052 9093 8800 		sts 136,r25
 180:Caterina.c    **** 	TIMSK1 = (1 << OCIE1A);					// enable timer 1 output compare A match interrupt
 1473               		.loc 1 180 0
 1474 0056 8093 6F00 		sts 111,r24
 181:Caterina.c    **** 	TCCR1B = ((1 << CS11) | (1 << CS10));	// 1/64 prescaler on timer 1 input
 1475               		.loc 1 181 0
 1476 005a 83E0      		ldi r24,lo8(3)
 1477 005c 8093 8100 		sts 129,r24
 1478               	.LVL64:
 1479               	.LBB179:
 185:Caterina.c    **** 	if (pgm_read_word(0) != 0xFFFF) sketchPresent = true;
 1480               		.loc 1 185 0
 1481 0060 E0E0      		ldi r30,lo8(0)
 1482 0062 F0E0      		ldi r31,hi8(0)
 1483               	/* #APP */
 1484               	 ;  185 "Caterina.c" 1
 1485 0064 8591      		lpm r24, Z+
 1486 0066 9491      		lpm r25, Z
 1487               		
 1488               	 ;  0 "" 2
 1489               	.LVL65:
 1490               	/* #NOAPP */
 1491               	.LBE179:
 1492 0068 5FEF      		ldi r21,hi8(-1)
 1493 006a 8F3F      		cpi r24,lo8(-1)
 1494 006c 9507      		cpc r25,r21
 1495 006e 01F0      		breq .L100
 185:Caterina.c    **** 	if (pgm_read_word(0) != 0xFFFF) sketchPresent = true;
 1496               		.loc 1 185 0 is_stmt 0 discriminator 1
 1497 0070 3093 0000 		sts sketchPresent,r19
 1498               	.L100:
 193:Caterina.c    **** 	if ( (mcusr_state & (1<<EXTRF)) && (bootKeyPtrVal != bootKey) ) {
 1499               		.loc 1 193 0 is_stmt 1
 1500 0074 41FF      		sbrs r20,1
 1501 0076 00C0      		rjmp .L101
 193:Caterina.c    **** 	if ( (mcusr_state & (1<<EXTRF)) && (bootKeyPtrVal != bootKey) ) {
 1502               		.loc 1 193 0 is_stmt 0 discriminator 1
 1503 0078 8091 0000 		lds r24,bootKey
 1504               	.LVL66:
 1505 007c 2817      		cp r18,r24
 1506 007e 01F0      		breq .L101
 194:Caterina.c    **** 		*bootKeyPtr = bootKey;
 1507               		.loc 1 194 0 is_stmt 1
 1508 0080 8093 0008 		sts 2048,r24
 195:Caterina.c    **** 		sei();
 1509               		.loc 1 195 0
 1510               	/* #APP */
 1511               	 ;  195 "Caterina.c" 1
 1512 0084 7894      		sei
 1513               	 ;  0 "" 2
 1514               	/* #NOAPP */
 1515 0086 8091 0000 		lds r24,RunBootloader
 196:Caterina.c    **** 		while (RunBootloader) 
 1516               		.loc 1 196 0
 1517 008a 8823      		tst r24
 1518 008c 01F0      		breq .L114
 1519               	.LVL67:
 1520               	.L112:
 198:Caterina.c    **** 			if (resetTimeout > EXT_RESET_TIMEOUT_PERIOD)
 1521               		.loc 1 198 0
 1522 008e 8091 0000 		lds r24,resetTimeout
 1523 0092 9091 0000 		lds r25,resetTimeout+1
 1524 0096 22E0      		ldi r18,hi8(751)
 1525 0098 8F3E      		cpi r24,lo8(751)
 1526 009a 9207      		cpc r25,r18
 1527 009c 00F0      		brlo .L112
 1528               	.L114:
 196:Caterina.c    **** 		while (RunBootloader) 
 1529               		.loc 1 196 0
 1530 009e 1092 0000 		sts RunBootloader,__zero_reg__
 201:Caterina.c    **** 		cli();
 1531               		.loc 1 201 0
 1532               	/* #APP */
 1533               	 ;  201 "Caterina.c" 1
 1534 00a2 F894      		cli
 1535               	 ;  0 "" 2
 202:Caterina.c    **** 		*bootKeyPtr = 0;
 1536               		.loc 1 202 0
 1537               	/* #NOAPP */
 1538 00a4 1092 0008 		sts 2048,__zero_reg__
 203:Caterina.c    **** 		RunBootloader = true;
 1539               		.loc 1 203 0
 1540 00a8 81E0      		ldi r24,lo8(1)
 1541 00aa 8093 0000 		sts RunBootloader,r24
 1542 00ae 00C0      		rjmp .L118
 1543               	.LVL68:
 1544               	.L101:
 207:Caterina.c    **** 	else if ( (mcusr_state & (1<<PORF)) && sketchPresent) {	
 1545               		.loc 1 207 0
 1546 00b0 40FF      		sbrs r20,0
 1547 00b2 00C0      		rjmp .L105
 207:Caterina.c    **** 	else if ( (mcusr_state & (1<<PORF)) && sketchPresent) {	
 1548               		.loc 1 207 0 is_stmt 0 discriminator 1
 1549 00b4 8091 0000 		lds r24,sketchPresent
 1550 00b8 8823      		tst r24
 1551 00ba 01F4      		brne .L116
 1552               	.L105:
 212:Caterina.c    **** 	else if ( (mcusr_state & (1<<WDRF) ) && (bootKeyPtrVal != bootKey) && sketchPresent) {	
 1553               		.loc 1 212 0 is_stmt 1
 1554 00bc 43FF      		sbrs r20,3
 1555 00be 00C0      		rjmp .L104
 212:Caterina.c    **** 	else if ( (mcusr_state & (1<<WDRF) ) && (bootKeyPtrVal != bootKey) && sketchPresent) {	
 1556               		.loc 1 212 0 is_stmt 0 discriminator 1
 1557 00c0 8091 0000 		lds r24,bootKey
 1558 00c4 2817      		cp r18,r24
 1559 00c6 01F0      		breq .L104
 1560               	.LVL69:
 1561               	.L118:
 1562 00c8 8091 0000 		lds r24,sketchPresent
 1563 00cc 8823      		tst r24
 1564 00ce 01F0      		breq .L104
 1565               	.L116:
 214:Caterina.c    **** 		StartSketch();
 1566               		.loc 1 214 0 is_stmt 1
 1567 00d0 0E94 0000 		call StartSketch
 1568               	.LVL70:
 1569               	.L104:
 220:Caterina.c    **** 	USB_Init();
 1570               		.loc 1 220 0
 1571 00d4 0E94 0000 		call USB_Init
 223:Caterina.c    **** 	sei();
 1572               		.loc 1 223 0
 1573               	/* #APP */
 1574               	 ;  223 "Caterina.c" 1
 1575 00d8 7894      		sei
 1576               	 ;  0 "" 2
 225:Caterina.c    **** 	Timeout = 0;
 1577               		.loc 1 225 0
 1578               	/* #NOAPP */
 1579 00da 1092 0000 		sts Timeout+1,__zero_reg__
 1580 00de 1092 0000 		sts Timeout,__zero_reg__
 1581               	.LBB180:
 239:Caterina.c    **** 			p = 254-p;
 1582               		.loc 1 239 0
 1583 00e2 CEEF      		ldi r28,lo8(-2)
 1584               	.LBE180:
 227:Caterina.c    **** 	while (RunBootloader)
 1585               		.loc 1 227 0
 1586 00e4 00C0      		rjmp .L115
 1587               	.L111:
 1588               	.LBB181:
 229:Caterina.c    **** 		CDC_Task();
 1589               		.loc 1 229 0
 1590 00e6 0E94 0000 		call CDC_Task
 230:Caterina.c    **** 		USB_USBTask();
 1591               		.loc 1 230 0
 1592 00ea 0E94 0000 		call USB_USBTask
 232:Caterina.c    **** 		if (Timeout > TIMEOUT_PERIOD)
 1593               		.loc 1 232 0
 1594 00ee 8091 0000 		lds r24,Timeout
 1595 00f2 9091 0000 		lds r25,Timeout+1
 1596 00f6 3FE1      		ldi r19,hi8(8001)
 1597 00f8 8134      		cpi r24,lo8(8001)
 1598 00fa 9307      		cpc r25,r19
 1599 00fc 00F0      		brlo .L107
 233:Caterina.c    **** 			RunBootloader = false;
 1600               		.loc 1 233 0
 1601 00fe 1092 0000 		sts RunBootloader,__zero_reg__
 1602               	.L107:
 236:Caterina.c    **** 		LLEDPulse++;
 1603               		.loc 1 236 0
 1604 0102 8091 0000 		lds r24,LLEDPulse
 1605 0106 9091 0000 		lds r25,LLEDPulse+1
 1606 010a 0196      		adiw r24,1
 1607 010c 9093 0000 		sts LLEDPulse+1,r25
 1608 0110 8093 0000 		sts LLEDPulse,r24
 237:Caterina.c    **** 		uint8_t p = LLEDPulse >> 8;
 1609               		.loc 1 237 0
 1610 0114 292F      		mov r18,r25
 1611               	.LVL71:
 238:Caterina.c    **** 		if (p > 127)
 1612               		.loc 1 238 0
 1613 0116 97FF      		sbrs r25,7
 1614 0118 00C0      		rjmp .L108
 239:Caterina.c    **** 			p = 254-p;
 1615               		.loc 1 239 0
 1616 011a 5C2F      		mov r21,r28
 1617 011c 591B      		sub r21,r25
 1618 011e 252F      		mov r18,r21
 1619               	.LVL72:
 1620               	.L108:
 240:Caterina.c    **** 		p += p;
 1621               		.loc 1 240 0
 1622 0120 220F      		lsl r18
 1623               	.LVL73:
 241:Caterina.c    **** 		if (((uint8_t)LLEDPulse) > p)
 1624               		.loc 1 241 0
 1625 0122 2817      		cp r18,r24
 1626 0124 00F4      		brsh .L109
 242:Caterina.c    **** 			L_LED_OFF();
 1627               		.loc 1 242 0
 1628 0126 4798      		cbi 40-32,7
 1629 0128 00C0      		rjmp .L115
 1630               	.L109:
 244:Caterina.c    **** 			L_LED_ON();
 1631               		.loc 1 244 0
 1632 012a 479A      		sbi 40-32,7
 1633               	.L115:
 1634               	.LBE181:
 227:Caterina.c    **** 	while (RunBootloader)
 1635               		.loc 1 227 0 discriminator 1
 1636 012c 8091 0000 		lds r24,RunBootloader
 1637 0130 8823      		tst r24
 1638 0132 01F4      		brne .L111
 1639               	.LBB182:
 1640               	.LBB183:
 1641               		.file 4 "../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers
   1:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** /*
   2:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****              LUFA Library
   3:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****      Copyright (C) Dean Camera, 2011.
   4:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
   5:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****            www.lufa-lib.org
   7:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** */
   8:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
   9:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** /*
  10:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   Copyright 2011  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
  12:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   all copies and that both that the copyright notice and this
  16:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   documentation, and that the name of the author not be used in
  18:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   software without specific, written prior permission.
  20:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
  21:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   The author disclaim all warranties with regard to this
  22:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   software, including all implied warranties of merchantability
  23:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   special, indirect or consequential damages or any damages
  25:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   arising out of or in connection with the use or performance of
  28:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   this software.
  29:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** */
  30:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
  31:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** /** \file
  32:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  *  \brief USB Controller definitions for the AVR8 microcontrollers.
  33:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  *  \copydetails Group_USBManagement_AVR8
  34:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  *
  35:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  */
  38:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
  39:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** /** \ingroup Group_USBManagement
  40:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  *  \defgroup Group_USBManagement_AVR8 USB Interface Management (AVR8)
  41:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  *  \brief USB Controller definitions for the AVR8 microcontrollers.
  42:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  *
  43:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  *  Functions, macros, variables, enums and types related to the setup and management of the USB in
  44:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  *
  45:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  *  @{
  46:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  */
  47:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
  48:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** #ifndef __USBCONTROLLER_AVR8_H__
  49:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** #define __USBCONTROLLER_AVR8_H__
  50:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
  51:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 	/* Includes: */
  52:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#include "../../../../Common/Common.h"
  53:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#include "../USBMode.h"
  54:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#include "../Events.h"
  55:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#include "../USBTask.h"
  56:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#include "../USBInterrupt.h"
  57:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
  58:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#if defined(USB_CAN_BE_HOST) || defined(__DOXYGEN__)
  59:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#include "../Host.h"
  60:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#include "../OTG.h"
  61:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#include "../Pipe.h"
  62:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#include "../HostStandardReq.h"
  63:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#include "../PipeStream.h"
  64:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#endif
  65:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
  66:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#if defined(USB_CAN_BE_DEVICE) || defined(__DOXYGEN__)
  67:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#include "../Device.h"
  68:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#include "../Endpoint.h"
  69:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#include "../DeviceStandardReq.h"
  70:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#include "../EndpointStream.h"
  71:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#endif
  72:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
  73:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  74:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#if defined(__cplusplus)
  75:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			extern "C" {
  76:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#endif
  77:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
  78:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 	/* Preprocessor Checks and Defines: */
  79:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  80:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  81:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#endif
  82:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
  83:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#if !defined(F_USB)
  84:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#error F_USB is not defined. You must define F_USB to the frequency of the unprescaled USB contr
  85:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#endif
  86:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
  87:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#if (F_USB == 8000000)
  88:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#if (defined(__AVR_AT90USB82__) || defined(__AVR_AT90USB162__) || \
  89:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			     defined(__AVR_ATmega8U2__) || defined(__AVR_ATmega16U2__) || \
  90:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			     defined(__AVR_ATmega32U2__))
  91:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                0
  92:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_ATmega16U4__) || defined(__AVR_ATmega32U4__))
  93:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                0
  94:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_AT90USB646__)  || defined(__AVR_AT90USB1286__) || defined(__AVR_ATmega32U6_
  95:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                ((1 << PLLP1) | (1 << PLLP0))
  96:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_AT90USB647__)  || defined(__AVR_AT90USB1287__))
  97:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                ((1 << PLLP1) | (1 << PLLP0))
  98:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#endif
  99:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#elif (F_USB == 16000000)
 100:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#if (defined(__AVR_AT90USB82__) || defined(__AVR_AT90USB162__) || \
 101:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			     defined(__AVR_ATmega8U2__) || defined(__AVR_ATmega16U2__) || \
 102:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			     defined(__AVR_ATmega32U2__))
 103:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                (1 << PLLP0)
 104:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_ATmega16U4__) || defined(__AVR_ATmega32U4__))
 105:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                (1 << PINDIV)
 106:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_AT90USB646__) || defined(__AVR_AT90USB647__) || defined(__AVR_ATmega32U6__)
 107:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                ((1 << PLLP2) | (1 << PLLP1))
 108:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_AT90USB1286__) || defined(__AVR_AT90USB1287__))
 109:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                ((1 << PLLP2) | (1 << PLLP0))
 110:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#endif
 111:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#endif
 112:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
 113:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#if !defined(USB_PLL_PSC)
 114:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#error No PLL prescale value available for chosen F_USB value and AVR model.
 115:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#endif
 116:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
 117:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 118:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		/* Macros: */
 119:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			/** \name USB Controller Option Masks */
 120:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			//@{
 121:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			/** Regulator disable option mask for \ref USB_Init(). This indicates that the internal 3.3V USB
 122:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *  regulator should be disabled and the AVR's VCC level used for the data pads.
 123:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *
 124:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *  \note See USB AVR data sheet for more information on the internal pad regulator.
 125:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 */
 126:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#define USB_OPT_REG_DISABLED               (1 << 1)
 127:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
 128:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			/** Regulator enable option mask for \ref USB_Init(). This indicates that the internal 3.3V USB 
 129:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *  regulator should be enabled to regulate the data pin voltages from the VBUS level down to a 
 130:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *  the range allowable by the USB standard.
 131:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *
 132:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *  \note See USB AVR data sheet for more information on the internal pad regulator.
 133:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 */
 134:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#define USB_OPT_REG_ENABLED                (0 << 1)
 135:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
 136:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			/** Manual PLL control option mask for \ref USB_Init(). This indicates to the library that the u
 137:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *  will take full responsibility for controlling the AVR's PLL (used to generate the high frequ
 138:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *  that the USB controller requires) and ensuring that it is locked at the correct frequency fo
 139:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 */
 140:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#define USB_OPT_MANUAL_PLL                 (1 << 2)
 141:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
 142:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			/** Automatic PLL control option mask for \ref USB_Init(). This indicates to the library that th
 143:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *  take full responsibility for controlling the AVR's PLL (used to generate the high frequency 
 144:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *  that the USB controller requires) and ensuring that it is locked at the correct frequency fo
 145:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 */
 146:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#define USB_OPT_AUTO_PLL                   (0 << 2)
 147:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			//@}
 148:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
 149:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#if !defined(USB_STREAM_TIMEOUT_MS) || defined(__DOXYGEN__)
 150:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				/** Constant for the maximum software timeout period of the USB data stream transfer functions
 151:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				 *  (both control and standard) when in either device or host mode. If the next packet of a str
 152:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				 *  is not received or acknowledged within this time period, the stream function will fail.
 153:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				 *
 154:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				 *  This value may be overridden in the user project makefile as the value of the
 155:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				 *  \ref USB_STREAM_TIMEOUT_MS token, and passed to the compiler using the -D switch.
 156:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				 */
 157:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				#define USB_STREAM_TIMEOUT_MS       100
 158:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#endif
 159:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
 160:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		/* Inline Functions: */
 161:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defin
 162:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				/** Determines if the VBUS line is currently high (i.e. the USB host is supplying power).
 163:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				 *
 164:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				 *  \note This function is not available on some AVR models which do not support hardware VBUS 
 165:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				 *
 166:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				 *  \return Boolean \c true if the VBUS line is currently detecting power from a host, \c false
 167:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				 */
 168:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				static inline bool USB_VBUS_GetStatus(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 169:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				static inline bool USB_VBUS_GetStatus(void)
 170:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				{
 171:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 					return ((USBSTA & (1 << VBUS)) ? true : false);
 172:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				}
 173:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#endif
 174:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
 175:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			/** Detaches the device from the USB bus. This has the effect of removing the device from any
 176:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *  attached host, ceasing USB communications. If no host is present, this prevents any host fro
 177:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *  enumerating the device once attached until \ref USB_Attach() is called.
 178:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 */
 179:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			static inline void USB_Detach(void) ATTR_ALWAYS_INLINE;
 180:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			static inline void USB_Detach(void)
 181:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			{
 182:../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				UDCON  |=  (1 << DETACH);
 1642               		.loc 4 182 0
 1643 0134 8091 E000 		lds r24,224
 1644 0138 8160      		ori r24,lo8(1)
 1645 013a 8093 E000 		sts 224,r24
 1646               	.LBE183:
 1647               	.LBE182:
 251:Caterina.c    **** 	StartSketch();
 1648               		.loc 1 251 0
 1649 013e 0E94 0000 		call StartSketch
 252:Caterina.c    **** }
 1650               		.loc 1 252 0
 1651 0142 80E0      		ldi r24,lo8(0)
 1652 0144 90E0      		ldi r25,hi8(0)
 1653               	/* epilogue start */
 1654 0146 CF91      		pop r28
 1655 0148 0895      		ret
 1656               		.cfi_endproc
 1657               	.LFE96:
 1659               		.comm LLEDPulse,2,1
 1660               	.global	bootKeyPtr
 1661               		.data
 1664               	bootKeyPtr:
 1665 0009 0008      		.word	2048
 1666               	.global	bootKey
 1669               	bootKey:
 1670 000b 77        		.byte	119
 1671               	.global	resetTimeout
 1672               	.global	resetTimeout
 1673               		.section .bss
 1676               	resetTimeout:
 1677 0000 0000      		.skip 2,0
 1678               	.global	Timeout
 1679               	.global	Timeout
 1682               	Timeout:
 1683 0002 0000      		.skip 2,0
 1684               	.global	RxLEDPulse
 1685               	.global	RxLEDPulse
 1688               	RxLEDPulse:
 1689 0004 0000      		.skip 2,0
 1690               	.global	TxLEDPulse
 1691               	.global	TxLEDPulse
 1694               	TxLEDPulse:
 1695 0006 0000      		.skip 2,0
 1696               		.lcomm sketchPresent,1
 1697               		.data
 1700               	RunBootloader:
 1701 000c 01        		.byte	1
 1704               	LineEncoding:
 1705 000d 00        		.byte	0
 1706 000e 00        		.byte	0
 1707 000f 00        		.byte	0
 1708 0010 00        		.byte	0
 1709 0011 00        		.byte	0
 1710 0012 00        		.byte	0
 1711 0013 08        		.byte	8
 1712               		.lcomm CurrAddress,4
 1713               		.text
 1714               	.Letext0:
 1715               		.file 5 "c:\\program files (x86)\\atmel\\avr tools\\avr toolchain\\bin\\../lib/gcc/avr/4.6.2/../..
 1716               		.file 6 "../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers
 1717               		.file 7 "../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers
 1718               		.file 8 "../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers
 1719               		.file 9 "../../../../../../../../../../OneDrive/LittleBird/Reference/LUFA/LUFA-111009/LUFA/Drivers
DEFINED SYMBOLS
                            *ABS*:00000000 Caterina.c
C:\cygwin\tmp\ccQMph8w.s:2      *ABS*:0000003f __SREG__
C:\cygwin\tmp\ccQMph8w.s:3      *ABS*:0000003e __SP_H__
C:\cygwin\tmp\ccQMph8w.s:4      *ABS*:0000003d __SP_L__
C:\cygwin\tmp\ccQMph8w.s:5      *ABS*:00000034 __CCP__
C:\cygwin\tmp\ccQMph8w.s:6      *ABS*:00000000 __tmp_reg__
C:\cygwin\tmp\ccQMph8w.s:7      *ABS*:00000001 __zero_reg__
C:\cygwin\tmp\ccQMph8w.s:15     .text.FetchNextCommandByte:00000000 FetchNextCommandByte
C:\cygwin\tmp\ccQMph8w.s:87     .text.WriteNextResponseByte:00000000 WriteNextResponseByte
C:\cygwin\tmp\ccQMph8w.s:1694   .bss:00000006 TxLEDPulse
C:\cygwin\tmp\ccQMph8w.s:161    .text.StartSketch:00000000 StartSketch
C:\cygwin\tmp\ccQMph8w.s:205    .text.__vector_17:00000000 __vector_17
C:\cygwin\tmp\ccQMph8w.s:1688   .bss:00000004 RxLEDPulse
C:\cygwin\tmp\ccQMph8w.s:1676   .bss:00000000 resetTimeout
C:\cygwin\tmp\ccQMph8w.s:1682   .bss:00000002 Timeout
C:\cygwin\tmp\ccQMph8w.s:326    .text.EVENT_USB_Device_ConfigurationChanged:00000000 EVENT_USB_Device_ConfigurationChanged
C:\cygwin\tmp\ccQMph8w.s:371    .text.EVENT_USB_Device_ControlRequest:00000000 EVENT_USB_Device_ControlRequest
C:\cygwin\tmp\ccQMph8w.s:1704   .data:0000000d LineEncoding
C:\cygwin\tmp\ccQMph8w.s:454    .text.CDC_Task:00000000 CDC_Task
C:\cygwin\tmp\ccQMph8w.s:1696   .bss:00000009 CurrAddress
C:\cygwin\tmp\ccQMph8w.s:1397   .text.startup.main:00000000 main
                             .bss:00000008 sketchPresent
C:\cygwin\tmp\ccQMph8w.s:1669   .data:0000000b bootKey
C:\cygwin\tmp\ccQMph8w.s:1700   .data:0000000c RunBootloader
                            *COM*:00000002 LLEDPulse
C:\cygwin\tmp\ccQMph8w.s:1664   .data:00000009 bootKeyPtr

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
Endpoint_ConfigureEndpoint_Prv
USB_ControlRequest
Endpoint_Write_Control_Stream_LE
Endpoint_Read_Control_Stream_LE
__eerd_byte_m32u4
__eewr_byte_m32u4
USB_Init
USB_USBTask
